// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/track.proto
// Protobuf C++ Version: 5.28.1

#include "novonotes/audio_engine/v1alpha1/track.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
template <typename>
PROTOBUF_CONSTEXPR UpdateTrackResponse::UpdateTrackResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct UpdateTrackResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR UpdateTrackResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~UpdateTrackResponseDefaultTypeInternal() {}
    union
    {
        UpdateTrackResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTrackResponseDefaultTypeInternal
        _UpdateTrackResponse_default_instance_;

inline constexpr Track::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : id_(&::google::protobuf::internal::fixed_address_empty_string,
          ::_pbi::ConstantInitialized())
    , type_{static_cast<::novonotes::audio_engine::v1alpha1::Track_TrackType>(
          0)}
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR Track::Track(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct TrackDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR TrackDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~TrackDefaultTypeInternal() {}
    union
    {
        Track _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackDefaultTypeInternal
        _Track_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DeleteTrackResponse::DeleteTrackResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct DeleteTrackResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR DeleteTrackResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~DeleteTrackResponseDefaultTypeInternal() {}
    union
    {
        DeleteTrackResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteTrackResponseDefaultTypeInternal
        _DeleteTrackResponse_default_instance_;

inline constexpr DeleteTrackRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : track_id_(&::google::protobuf::internal::fixed_address_empty_string,
                ::_pbi::ConstantInitialized())
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR DeleteTrackRequest::DeleteTrackRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct DeleteTrackRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR DeleteTrackRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~DeleteTrackRequestDefaultTypeInternal() {}
    union
    {
        DeleteTrackRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteTrackRequestDefaultTypeInternal
        _DeleteTrackRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CreateTrackResponse::CreateTrackResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct CreateTrackResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR CreateTrackResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~CreateTrackResponseDefaultTypeInternal() {}
    union
    {
        CreateTrackResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTrackResponseDefaultTypeInternal
        _CreateTrackResponse_default_instance_;

inline constexpr UpdateTrackRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0}
    , track_{nullptr}
{}

template <typename>
PROTOBUF_CONSTEXPR UpdateTrackRequest::UpdateTrackRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct UpdateTrackRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR UpdateTrackRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~UpdateTrackRequestDefaultTypeInternal() {}
    union
    {
        UpdateTrackRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTrackRequestDefaultTypeInternal
        _UpdateTrackRequest_default_instance_;

inline constexpr CreateTrackRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0}
    , track_{nullptr}
{}

template <typename>
PROTOBUF_CONSTEXPR CreateTrackRequest::CreateTrackRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct CreateTrackRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR CreateTrackRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~CreateTrackRequestDefaultTypeInternal() {}
    union
    {
        CreateTrackRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTrackRequestDefaultTypeInternal
        _CreateTrackRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
static const ::_pb::EnumDescriptor*
    file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto
        [1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto =
        nullptr;
const ::uint32_t
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto::offsets
        [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::Track,
                                  _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::Track,
                                  _impl_.id_),
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::Track,
                                  _impl_.type_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateTrackRequest,
                _impl_._has_bits_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateTrackRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateTrackRequest,
                _impl_.track_),
            0,
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateTrackResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::UpdateTrackRequest,
                _impl_._has_bits_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::UpdateTrackRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::UpdateTrackRequest,
                _impl_.track_),
            0,
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::UpdateTrackResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeleteTrackRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeleteTrackRequest,
                _impl_.track_id_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeleteTrackResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, -1, sizeof(::novonotes::audio_engine::v1alpha1::Track)},
    {10, 19, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::CreateTrackRequest)},
    {20, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::CreateTrackResponse)},
    {28, 37, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::UpdateTrackRequest)},
    {38, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::UpdateTrackResponse)},
    {46, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::DeleteTrackRequest)},
    {55, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::DeleteTrackResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::novonotes::audio_engine::v1alpha1::_Track_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::_CreateTrackRequest_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_CreateTrackResponse_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_UpdateTrackRequest_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_UpdateTrackResponse_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_DeleteTrackRequest_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_DeleteTrackResponse_default_instance_
         ._instance,
};
const char
    descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto
        [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            "\n+novonotes/audio_engine/v1alpha1/track."
            "proto\022\037novonotes.audio_engine.v1alpha1\032\037"
            "google/api/field_behavior.proto\032\031google/"
            "api/resource.proto\"\351\001\n\005Track\022\022\n\002id\030\001 "
            "\001(\t"
            "B\006\340A\010\340A\002\022C\n\004type\030\002 "
            "\001(\01620.novonotes.audio"
            "_engine.v1alpha1.Track.TrackTypeB\003\340A\002\"R\n"
            "\tTrackType\022\032\n\026TRACK_TYPE_UNSPECIFIED\020\000\022\024"
            "\n\020TRACK_TYPE_AUDIO\020\001\022\023\n\017TRACK_TYPE_MIDI\020"
            "\002:3\352A0\n\037novonotes/audio-engin-api/Track*"
            "\006tracks2\005track\"P\n\022CreateTrackRequest\022:\n\005"
            "track\030\001 \001(\0132&.novonotes.audio_engine.v1a"
            "lpha1.TrackB\003\340A\002\"\025\n\023CreateTrackResponse\""
            "P\n\022UpdateTrackRequest\022:\n\005track\030\001 \001(\0132&.n"
            "ovonotes.audio_engine.v1alpha1.TrackB\003\340A"
            "\002\"\025\n\023UpdateTrackResponse\"+\n\022DeleteTrackR"
            "equest\022\025\n\010track_id\030\001 "
            "\001(\tB\003\340A\002\"\025\n\023DeleteT"
            "rackResponseb\006proto3"};
static const ::_pbi::DescriptorTable* const
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto_deps
        [2] = {
            &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
            &::descriptor_table_google_2fapi_2fresource_2eproto,
};
static ::absl::once_flag
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto = {
        false,
        false,
        660,
        descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
        "novonotes/audio_engine/v1alpha1/track.proto",
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto_once,
        descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto_deps,
        2,
        7,
        schemas,
        file_default_instances,
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto::
            offsets,
        file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
        file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
};
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
const ::google::protobuf::EnumDescriptor* Track_TrackType_descriptor()
{
    ::google::protobuf::internal::AssignDescriptors(
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto);
    return file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto
        [0];
}
PROTOBUF_CONSTINIT const uint32_t Track_TrackType_internal_data_[] = {
    196608u,
    0u,
};
bool Track_TrackType_IsValid(int value) { return 0 <= value && value <= 2; }
#if (__cplusplus < 201703) && \
    (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Track_TrackType Track::TRACK_TYPE_UNSPECIFIED;
constexpr Track_TrackType Track::TRACK_TYPE_AUDIO;
constexpr Track_TrackType Track::TRACK_TYPE_MIDI;
constexpr Track_TrackType Track::TrackType_MIN;
constexpr Track_TrackType Track::TrackType_MAX;
constexpr int Track::TrackType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Track::_Internal
{
   public:
};

Track::Track(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.Track)
}
inline PROTOBUF_NDEBUG_INLINE Track::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::Track& from_msg)
    : id_(arena, from.id_)
    , _cached_size_{0}
{}

Track::Track(::google::protobuf::Arena* arena, const Track& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    Track* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    _impl_.type_ = from._impl_.type_;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.Track)
}
inline PROTOBUF_NDEBUG_INLINE Track::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : id_(arena)
    , _cached_size_{0}
{}

inline void Track::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.type_ = {};
}
Track::~Track()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.Track)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void Track::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.id_.Destroy();
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull Track::_class_data_ = {
    ::google::protobuf::Message::ClassData{
        &_Track_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Track::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::google::protobuf::Message::GetDeleteImpl<Track>(),
        ::google::protobuf::Message::GetNewImpl<Track>(),
        ::google::protobuf::Message::GetClearImpl<Track>(),
        &Track::ByteSizeLong,
        &Track::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Track, _impl_._cached_size_),
        false,
    },
    &Track::kDescriptorMethods,
    &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Track::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    1, 2, 0, 48, 2>
    Track::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            2, 8,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967292,  // skipmap
            offsetof(decltype(_table_), field_entries),
            2,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::Track>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // .novonotes.audio_engine.v1alpha1.Track.TrackType type = 2
            // [(.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::SingularVarintNoZag1<
                 ::uint32_t, offsetof(Track, _impl_.type_), 63>(),
             {16, 63, 0, PROTOBUF_FIELD_OFFSET(Track, _impl_.type_)}},
            // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
            // (.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastUS1,
             {10, 63, 0, PROTOBUF_FIELD_OFFSET(Track, _impl_.id_)}},
        }},
        {{65535, 65535}},
        {{
            // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
            // (.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(Track, _impl_.id_), 0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // .novonotes.audio_engine.v1alpha1.Track.TrackType type = 2
            // [(.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(Track, _impl_.type_), 0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
        }},
        // no aux_entries
        {{"\45\2\0\0\0\0\0\0"
          "novonotes.audio_engine.v1alpha1.Track"
          "id"}},
    };

PROTOBUF_NOINLINE void Track::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.Track)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.id_.ClearToEmpty();
    _impl_.type_ = 0;
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* Track::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const Track& this_ = static_cast<const Track&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* Track::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const Track& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.Track)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
    // (.google.api.field_behavior) = REQUIRED];
    if(!this_._internal_id().empty())
    {
        const std::string& _s = this_._internal_id();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.Track.id");
        target = stream->WriteStringMaybeAliased(1, _s, target);
    }

    // .novonotes.audio_engine.v1alpha1.Track.TrackType type = 2
    // [(.google.api.field_behavior) = REQUIRED];
    if(this_._internal_type() != 0)
    {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteEnumToArray(
            2, this_._internal_type(), target);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.Track)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Track::ByteSizeLong(const MessageLite& base)
{
    const Track& this_ = static_cast<const Track&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Track::ByteSizeLong() const
{
    const Track& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.Track)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
        // (.google.api.field_behavior) = REQUIRED];
        if(!this_._internal_id().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_id());
        }
        // .novonotes.audio_engine.v1alpha1.Track.TrackType type = 2
        // [(.google.api.field_behavior) = REQUIRED];
        if(this_._internal_type() != 0)
        {
            total_size +=
                1 + ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void Track::MergeImpl(::google::protobuf::MessageLite& to_msg,
                      const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<Track*>(&to_msg);
    auto& from = static_cast<const Track&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.Track)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(!from._internal_id().empty())
    {
        _this->_internal_set_id(from._internal_id());
    }
    if(from._internal_type() != 0)
    {
        _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void Track::CopyFrom(const Track& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.Track)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void Track::InternalSwap(Track* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_,
                                         arena);
    swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata Track::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTrackRequest::_Internal
{
   public:
    using HasBits =
        decltype(std::declval<CreateTrackRequest>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(CreateTrackRequest, _impl_._has_bits_);
};

CreateTrackRequest::CreateTrackRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTrackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::CreateTrackRequest& from_msg)
    : _has_bits_{from._has_bits_}
    , _cached_size_{0}
{}

CreateTrackRequest::CreateTrackRequest(::google::protobuf::Arena* arena,
                                       const CreateTrackRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    CreateTrackRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    ::uint32_t cached_has_bits = _impl_._has_bits_[0];
    _impl_.track_ = (cached_has_bits & 0x00000001u)
                        ? ::google::protobuf::Message::CopyConstruct<
                              ::novonotes::audio_engine::v1alpha1::Track>(
                              arena, *from._impl_.track_)
                        : nullptr;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTrackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : _cached_size_{0}
{}

inline void CreateTrackRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.track_ = {};
}
CreateTrackRequest::~CreateTrackRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void CreateTrackRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    delete _impl_.track_;
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CreateTrackRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CreateTrackRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CreateTrackRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CreateTrackRequest>(),
            ::google::protobuf::Message::GetNewImpl<CreateTrackRequest>(),
            ::google::protobuf::Message::GetClearImpl<CreateTrackRequest>(),
            &CreateTrackRequest::ByteSizeLong,
            &CreateTrackRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CreateTrackRequest, _impl_._cached_size_),
            false,
        },
        &CreateTrackRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
CreateTrackRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
    CreateTrackRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(CreateTrackRequest, _impl_._has_bits_),
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    CreateTrackRequest>(),  // to_prefetch
#endif                                      // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // .novonotes.audio_engine.v1alpha1.Track track = 1
            // [(.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastMtS1,
             {10, 0, 0,
              PROTOBUF_FIELD_OFFSET(CreateTrackRequest, _impl_.track_)}},
        }},
        {{65535, 65535}},
        {{
            // .novonotes.audio_engine.v1alpha1.Track track = 1
            // [(.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(CreateTrackRequest, _impl_.track_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::Track>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void CreateTrackRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    cached_has_bits = _impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(_impl_.track_ != nullptr);
        _impl_.track_->Clear();
    }
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* CreateTrackRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const CreateTrackRequest& this_ =
        static_cast<const CreateTrackRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* CreateTrackRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const CreateTrackRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = this_._impl_._has_bits_[0];
    // .novonotes.audio_engine.v1alpha1.Track track = 1
    // [(.google.api.field_behavior) = REQUIRED];
    if(cached_has_bits & 0x00000001u)
    {
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.track_, this_._impl_.track_->GetCachedSize(),
                target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateTrackRequest::ByteSizeLong(const MessageLite& base)
{
    const CreateTrackRequest& this_ =
        static_cast<const CreateTrackRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateTrackRequest::ByteSizeLong() const
{
    const CreateTrackRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // .novonotes.audio_engine.v1alpha1.Track track = 1
        // [(.google.api.field_behavior) = REQUIRED];
        cached_has_bits = this_._impl_._has_bits_[0];
        if(cached_has_bits & 0x00000001u)
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.track_);
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void CreateTrackRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<CreateTrackRequest*>(&to_msg);
    auto& from = static_cast<const CreateTrackRequest&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = from._impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(from._impl_.track_ != nullptr);
        if(_this->_impl_.track_ == nullptr)
        {
            _this->_impl_.track_ = ::google::protobuf::Message::CopyConstruct<
                ::novonotes::audio_engine::v1alpha1::Track>(
                arena, *from._impl_.track_);
        }
        else
        {
            _this->_impl_.track_->MergeFrom(*from._impl_.track_);
        }
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void CreateTrackRequest::CopyFrom(const CreateTrackRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.CreateTrackRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void CreateTrackRequest::InternalSwap(
    CreateTrackRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    swap(_impl_.track_, other->_impl_.track_);
}

::google::protobuf::Metadata CreateTrackRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTrackResponse::_Internal
{
   public:
};

CreateTrackResponse::CreateTrackResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.CreateTrackResponse)
}
CreateTrackResponse::CreateTrackResponse(::google::protobuf::Arena* arena,
                                         const CreateTrackResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    CreateTrackResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.CreateTrackResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CreateTrackResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_CreateTrackResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CreateTrackResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                CreateTrackResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                CreateTrackResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                CreateTrackResponse>(),
            &CreateTrackResponse::ByteSizeLong,
            &CreateTrackResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CreateTrackResponse, _impl_._cached_size_),
            false,
        },
        &CreateTrackResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
CreateTrackResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    CreateTrackResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    CreateTrackResponse>(),  // to_prefetch
#endif                                       // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata CreateTrackResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// ===================================================================

class UpdateTrackRequest::_Internal
{
   public:
    using HasBits =
        decltype(std::declval<UpdateTrackRequest>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(UpdateTrackRequest, _impl_._has_bits_);
};

UpdateTrackRequest::UpdateTrackRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTrackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::UpdateTrackRequest& from_msg)
    : _has_bits_{from._has_bits_}
    , _cached_size_{0}
{}

UpdateTrackRequest::UpdateTrackRequest(::google::protobuf::Arena* arena,
                                       const UpdateTrackRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    UpdateTrackRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    ::uint32_t cached_has_bits = _impl_._has_bits_[0];
    _impl_.track_ = (cached_has_bits & 0x00000001u)
                        ? ::google::protobuf::Message::CopyConstruct<
                              ::novonotes::audio_engine::v1alpha1::Track>(
                              arena, *from._impl_.track_)
                        : nullptr;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTrackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : _cached_size_{0}
{}

inline void UpdateTrackRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.track_ = {};
}
UpdateTrackRequest::~UpdateTrackRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void UpdateTrackRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    delete _impl_.track_;
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    UpdateTrackRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_UpdateTrackRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &UpdateTrackRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<UpdateTrackRequest>(),
            ::google::protobuf::Message::GetNewImpl<UpdateTrackRequest>(),
            ::google::protobuf::Message::GetClearImpl<UpdateTrackRequest>(),
            &UpdateTrackRequest::ByteSizeLong,
            &UpdateTrackRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(UpdateTrackRequest, _impl_._cached_size_),
            false,
        },
        &UpdateTrackRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
UpdateTrackRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
    UpdateTrackRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(UpdateTrackRequest, _impl_._has_bits_),
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    UpdateTrackRequest>(),  // to_prefetch
#endif                                      // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // .novonotes.audio_engine.v1alpha1.Track track = 1
            // [(.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastMtS1,
             {10, 0, 0,
              PROTOBUF_FIELD_OFFSET(UpdateTrackRequest, _impl_.track_)}},
        }},
        {{65535, 65535}},
        {{
            // .novonotes.audio_engine.v1alpha1.Track track = 1
            // [(.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(UpdateTrackRequest, _impl_.track_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::Track>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void UpdateTrackRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    cached_has_bits = _impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(_impl_.track_ != nullptr);
        _impl_.track_->Clear();
    }
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* UpdateTrackRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const UpdateTrackRequest& this_ =
        static_cast<const UpdateTrackRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* UpdateTrackRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const UpdateTrackRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = this_._impl_._has_bits_[0];
    // .novonotes.audio_engine.v1alpha1.Track track = 1
    // [(.google.api.field_behavior) = REQUIRED];
    if(cached_has_bits & 0x00000001u)
    {
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.track_, this_._impl_.track_->GetCachedSize(),
                target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateTrackRequest::ByteSizeLong(const MessageLite& base)
{
    const UpdateTrackRequest& this_ =
        static_cast<const UpdateTrackRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateTrackRequest::ByteSizeLong() const
{
    const UpdateTrackRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // .novonotes.audio_engine.v1alpha1.Track track = 1
        // [(.google.api.field_behavior) = REQUIRED];
        cached_has_bits = this_._impl_._has_bits_[0];
        if(cached_has_bits & 0x00000001u)
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.track_);
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void UpdateTrackRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<UpdateTrackRequest*>(&to_msg);
    auto& from = static_cast<const UpdateTrackRequest&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = from._impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(from._impl_.track_ != nullptr);
        if(_this->_impl_.track_ == nullptr)
        {
            _this->_impl_.track_ = ::google::protobuf::Message::CopyConstruct<
                ::novonotes::audio_engine::v1alpha1::Track>(
                arena, *from._impl_.track_);
        }
        else
        {
            _this->_impl_.track_->MergeFrom(*from._impl_.track_);
        }
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void UpdateTrackRequest::CopyFrom(const UpdateTrackRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.UpdateTrackRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void UpdateTrackRequest::InternalSwap(
    UpdateTrackRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    swap(_impl_.track_, other->_impl_.track_);
}

::google::protobuf::Metadata UpdateTrackRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateTrackResponse::_Internal
{
   public:
};

UpdateTrackResponse::UpdateTrackResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.UpdateTrackResponse)
}
UpdateTrackResponse::UpdateTrackResponse(::google::protobuf::Arena* arena,
                                         const UpdateTrackResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    UpdateTrackResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.UpdateTrackResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    UpdateTrackResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_UpdateTrackResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &UpdateTrackResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                UpdateTrackResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                UpdateTrackResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                UpdateTrackResponse>(),
            &UpdateTrackResponse::ByteSizeLong,
            &UpdateTrackResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(UpdateTrackResponse, _impl_._cached_size_),
            false,
        },
        &UpdateTrackResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
UpdateTrackResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    UpdateTrackResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    UpdateTrackResponse>(),  // to_prefetch
#endif                                       // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata UpdateTrackResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// ===================================================================

class DeleteTrackRequest::_Internal
{
   public:
};

DeleteTrackRequest::DeleteTrackRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteTrackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::DeleteTrackRequest& from_msg)
    : track_id_(arena, from.track_id_)
    , _cached_size_{0}
{}

DeleteTrackRequest::DeleteTrackRequest(::google::protobuf::Arena* arena,
                                       const DeleteTrackRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    DeleteTrackRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteTrackRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : track_id_(arena)
    , _cached_size_{0}
{}

inline void DeleteTrackRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
DeleteTrackRequest::~DeleteTrackRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void DeleteTrackRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.track_id_.Destroy();
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DeleteTrackRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DeleteTrackRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DeleteTrackRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DeleteTrackRequest>(),
            ::google::protobuf::Message::GetNewImpl<DeleteTrackRequest>(),
            ::google::protobuf::Message::GetClearImpl<DeleteTrackRequest>(),
            &DeleteTrackRequest::ByteSizeLong,
            &DeleteTrackRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DeleteTrackRequest, _impl_._cached_size_),
            false,
        },
        &DeleteTrackRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
DeleteTrackRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 1, 0, 67, 2>
    DeleteTrackRequest::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    DeleteTrackRequest>(),  // to_prefetch
#endif                                      // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // string track_id = 1 [(.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastUS1,
             {10, 63, 0,
              PROTOBUF_FIELD_OFFSET(DeleteTrackRequest, _impl_.track_id_)}},
        }},
        {{65535, 65535}},
        {{
            // string track_id = 1 [(.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(DeleteTrackRequest, _impl_.track_id_), 0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
        }},
        // no aux_entries
        {{"\62\10\0\0\0\0\0\0"
          "novonotes.audio_engine.v1alpha1.DeleteTrackRequest"
          "track_id"}},
    };

PROTOBUF_NOINLINE void DeleteTrackRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.track_id_.ClearToEmpty();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* DeleteTrackRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const DeleteTrackRequest& this_ =
        static_cast<const DeleteTrackRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* DeleteTrackRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const DeleteTrackRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string track_id = 1 [(.google.api.field_behavior) = REQUIRED];
    if(!this_._internal_track_id().empty())
    {
        const std::string& _s = this_._internal_track_id();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.DeleteTrackRequest.track_id");
        target = stream->WriteStringMaybeAliased(1, _s, target);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteTrackRequest::ByteSizeLong(const MessageLite& base)
{
    const DeleteTrackRequest& this_ =
        static_cast<const DeleteTrackRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteTrackRequest::ByteSizeLong() const
{
    const DeleteTrackRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // string track_id = 1 [(.google.api.field_behavior) = REQUIRED];
        if(!this_._internal_track_id().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_track_id());
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void DeleteTrackRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<DeleteTrackRequest*>(&to_msg);
    auto& from = static_cast<const DeleteTrackRequest&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(!from._internal_track_id().empty())
    {
        _this->_internal_set_track_id(from._internal_track_id());
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void DeleteTrackRequest::CopyFrom(const DeleteTrackRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.DeleteTrackRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void DeleteTrackRequest::InternalSwap(
    DeleteTrackRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.track_id_,
                                         &other->_impl_.track_id_, arena);
}

::google::protobuf::Metadata DeleteTrackRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteTrackResponse::_Internal
{
   public:
};

DeleteTrackResponse::DeleteTrackResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.DeleteTrackResponse)
}
DeleteTrackResponse::DeleteTrackResponse(::google::protobuf::Arena* arena,
                                         const DeleteTrackResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    DeleteTrackResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.DeleteTrackResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DeleteTrackResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_DeleteTrackResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DeleteTrackResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                DeleteTrackResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                DeleteTrackResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                DeleteTrackResponse>(),
            &DeleteTrackResponse::ByteSizeLong,
            &DeleteTrackResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DeleteTrackResponse, _impl_._cached_size_),
            false,
        },
        &DeleteTrackResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
DeleteTrackResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    DeleteTrackResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    DeleteTrackResponse>(),  // to_prefetch
#endif                                       // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata DeleteTrackResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type _static_init2_
    PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(
             &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftrack_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
