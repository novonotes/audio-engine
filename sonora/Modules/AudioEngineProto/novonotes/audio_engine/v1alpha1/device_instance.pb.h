// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/device_instance.proto
// Protobuf C++ Version: 5.28.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/message.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/struct.pb.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto

namespace google
{
namespace protobuf
{
namespace internal
{
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto
{
    static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
class BatchSetParameterValuesRequest;
struct BatchSetParameterValuesRequestDefaultTypeInternal;
extern BatchSetParameterValuesRequestDefaultTypeInternal
    _BatchSetParameterValuesRequest_default_instance_;
class BatchSetParameterValuesResponse;
struct BatchSetParameterValuesResponseDefaultTypeInternal;
extern BatchSetParameterValuesResponseDefaultTypeInternal
    _BatchSetParameterValuesResponse_default_instance_;
class CreateDeviceInstanceRequest;
struct CreateDeviceInstanceRequestDefaultTypeInternal;
extern CreateDeviceInstanceRequestDefaultTypeInternal
    _CreateDeviceInstanceRequest_default_instance_;
class CreateDeviceInstanceResponse;
struct CreateDeviceInstanceResponseDefaultTypeInternal;
extern CreateDeviceInstanceResponseDefaultTypeInternal
    _CreateDeviceInstanceResponse_default_instance_;
class DeleteDeviceInstanceRequest;
struct DeleteDeviceInstanceRequestDefaultTypeInternal;
extern DeleteDeviceInstanceRequestDefaultTypeInternal
    _DeleteDeviceInstanceRequest_default_instance_;
class DeleteDeviceInstanceResponse;
struct DeleteDeviceInstanceResponseDefaultTypeInternal;
extern DeleteDeviceInstanceResponseDefaultTypeInternal
    _DeleteDeviceInstanceResponse_default_instance_;
class DeviceInstance;
struct DeviceInstanceDefaultTypeInternal;
extern DeviceInstanceDefaultTypeInternal _DeviceInstance_default_instance_;
class DeviceInstance_ParametersEntry_DoNotUse;
struct DeviceInstance_ParametersEntry_DoNotUseDefaultTypeInternal;
extern DeviceInstance_ParametersEntry_DoNotUseDefaultTypeInternal
    _DeviceInstance_ParametersEntry_DoNotUse_default_instance_;
class DeviceIo;
struct DeviceIoDefaultTypeInternal;
extern DeviceIoDefaultTypeInternal _DeviceIo_default_instance_;
class DeviceParameter;
struct DeviceParameterDefaultTypeInternal;
extern DeviceParameterDefaultTypeInternal _DeviceParameter_default_instance_;
class DeviceParameter_ChoiceType;
struct DeviceParameter_ChoiceTypeDefaultTypeInternal;
extern DeviceParameter_ChoiceTypeDefaultTypeInternal
    _DeviceParameter_ChoiceType_default_instance_;
class DeviceParameter_NumericType;
struct DeviceParameter_NumericTypeDefaultTypeInternal;
extern DeviceParameter_NumericTypeDefaultTypeInternal
    _DeviceParameter_NumericType_default_instance_;
class DeviceSpecificCommand;
struct DeviceSpecificCommandDefaultTypeInternal;
extern DeviceSpecificCommandDefaultTypeInternal
    _DeviceSpecificCommand_default_instance_;
class ExecuteDeviceSpecificCommandRequest;
struct ExecuteDeviceSpecificCommandRequestDefaultTypeInternal;
extern ExecuteDeviceSpecificCommandRequestDefaultTypeInternal
    _ExecuteDeviceSpecificCommandRequest_default_instance_;
class ExecuteDeviceSpecificCommandResponse;
struct ExecuteDeviceSpecificCommandResponseDefaultTypeInternal;
extern ExecuteDeviceSpecificCommandResponseDefaultTypeInternal
    _ExecuteDeviceSpecificCommandResponse_default_instance_;
class GetDeviceInstanceRequest;
struct GetDeviceInstanceRequestDefaultTypeInternal;
extern GetDeviceInstanceRequestDefaultTypeInternal
    _GetDeviceInstanceRequest_default_instance_;
class GetDeviceInstanceResponse;
struct GetDeviceInstanceResponseDefaultTypeInternal;
extern GetDeviceInstanceResponseDefaultTypeInternal
    _GetDeviceInstanceResponse_default_instance_;
class RestoreDeviceInstanceStateRequest;
struct RestoreDeviceInstanceStateRequestDefaultTypeInternal;
extern RestoreDeviceInstanceStateRequestDefaultTypeInternal
    _RestoreDeviceInstanceStateRequest_default_instance_;
class RestoreDeviceInstanceStateResponse;
struct RestoreDeviceInstanceStateResponseDefaultTypeInternal;
extern RestoreDeviceInstanceStateResponseDefaultTypeInternal
    _RestoreDeviceInstanceStateResponse_default_instance_;
class RtFinalizeParameterCommand;
struct RtFinalizeParameterCommandDefaultTypeInternal;
extern RtFinalizeParameterCommandDefaultTypeInternal
    _RtFinalizeParameterCommand_default_instance_;
class RtParameter;
struct RtParameterDefaultTypeInternal;
extern RtParameterDefaultTypeInternal _RtParameter_default_instance_;
class RtUpdateParameterCommand;
struct RtUpdateParameterCommandDefaultTypeInternal;
extern RtUpdateParameterCommandDefaultTypeInternal
    _RtUpdateParameterCommand_default_instance_;
class SetParameterValueRequest;
struct SetParameterValueRequestDefaultTypeInternal;
extern SetParameterValueRequestDefaultTypeInternal
    _SetParameterValueRequest_default_instance_;
class SetParameterValueResponse;
struct SetParameterValueResponseDefaultTypeInternal;
extern SetParameterValueResponseDefaultTypeInternal
    _SetParameterValueResponse_default_instance_;
class StartParameterSyncRequest;
struct StartParameterSyncRequestDefaultTypeInternal;
extern StartParameterSyncRequestDefaultTypeInternal
    _StartParameterSyncRequest_default_instance_;
class StartParameterSyncResponse;
struct StartParameterSyncResponseDefaultTypeInternal;
extern StartParameterSyncResponseDefaultTypeInternal
    _StartParameterSyncResponse_default_instance_;
class StopParameterSyncRequest;
struct StopParameterSyncRequestDefaultTypeInternal;
extern StopParameterSyncRequestDefaultTypeInternal
    _StopParameterSyncRequest_default_instance_;
class StopParameterSyncResponse;
struct StopParameterSyncResponseDefaultTypeInternal;
extern StopParameterSyncResponseDefaultTypeInternal
    _StopParameterSyncResponse_default_instance_;
class SubscribeToDeviceInstanceUpdatesRequest;
struct SubscribeToDeviceInstanceUpdatesRequestDefaultTypeInternal;
extern SubscribeToDeviceInstanceUpdatesRequestDefaultTypeInternal
    _SubscribeToDeviceInstanceUpdatesRequest_default_instance_;
class SubscribeToDeviceInstanceUpdatesResponse;
struct SubscribeToDeviceInstanceUpdatesResponseDefaultTypeInternal;
extern SubscribeToDeviceInstanceUpdatesResponseDefaultTypeInternal
    _SubscribeToDeviceInstanceUpdatesResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google

namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
enum RtParameter_State : int
{
    RtParameter_State_STATE_UNSPECIFIED = 0,
    RtParameter_State_STATE_FINALIZED = 1,
    RtParameter_State_STATE_UPDATING = 2,
    RtParameter_State_RtParameter_State_INT_MIN_SENTINEL_DO_NOT_USE_ =
        std::numeric_limits<::int32_t>::min(),
    RtParameter_State_RtParameter_State_INT_MAX_SENTINEL_DO_NOT_USE_ =
        std::numeric_limits<::int32_t>::max(),
};

bool RtParameter_State_IsValid(int value);
extern const uint32_t RtParameter_State_internal_data_[];
constexpr RtParameter_State RtParameter_State_State_MIN =
    static_cast<RtParameter_State>(0);
constexpr RtParameter_State RtParameter_State_State_MAX =
    static_cast<RtParameter_State>(2);
constexpr int RtParameter_State_State_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* RtParameter_State_descriptor();
template <typename T>
const std::string& RtParameter_State_Name(T value)
{
    static_assert(
        std::is_same<T, RtParameter_State>::value || std::is_integral<T>::value,
        "Incorrect type passed to State_Name().");
    return RtParameter_State_Name(static_cast<RtParameter_State>(value));
}
template <>
inline const std::string& RtParameter_State_Name(RtParameter_State value)
{
    return ::google::protobuf::internal::NameOfDenseEnum<
        RtParameter_State_descriptor, 0, 2>(static_cast<int>(value));
}
inline bool RtParameter_State_Parse(absl::string_view name,
                                    RtParameter_State* value)
{
    return ::google::protobuf::internal::ParseNamedEnum<RtParameter_State>(
        RtParameter_State_descriptor(), name, value);
}

// ===================================================================

// -------------------------------------------------------------------

class SubscribeToDeviceInstanceUpdatesRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesRequest)
 */
{
   public:
    inline SubscribeToDeviceInstanceUpdatesRequest()
        : SubscribeToDeviceInstanceUpdatesRequest(nullptr)
    {}
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR SubscribeToDeviceInstanceUpdatesRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline SubscribeToDeviceInstanceUpdatesRequest(
        const SubscribeToDeviceInstanceUpdatesRequest& from)
        : SubscribeToDeviceInstanceUpdatesRequest(nullptr, from)
    {}
    inline SubscribeToDeviceInstanceUpdatesRequest(
        SubscribeToDeviceInstanceUpdatesRequest&& from) noexcept
        : SubscribeToDeviceInstanceUpdatesRequest(nullptr, std::move(from))
    {}
    inline SubscribeToDeviceInstanceUpdatesRequest& operator=(
        const SubscribeToDeviceInstanceUpdatesRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline SubscribeToDeviceInstanceUpdatesRequest& operator=(
        SubscribeToDeviceInstanceUpdatesRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const SubscribeToDeviceInstanceUpdatesRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const SubscribeToDeviceInstanceUpdatesRequest*
    internal_default_instance()
    {
        return reinterpret_cast<const SubscribeToDeviceInstanceUpdatesRequest*>(
            &_SubscribeToDeviceInstanceUpdatesRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 12;
    friend void swap(SubscribeToDeviceInstanceUpdatesRequest& a,
                     SubscribeToDeviceInstanceUpdatesRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(SubscribeToDeviceInstanceUpdatesRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(SubscribeToDeviceInstanceUpdatesRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    SubscribeToDeviceInstanceUpdatesRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<
            SubscribeToDeviceInstanceUpdatesRequest>(arena);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
    inline void CopyFrom(const SubscribeToDeviceInstanceUpdatesRequest& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
    void MergeFrom(const SubscribeToDeviceInstanceUpdatesRequest& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
    }

   public:
    bool IsInitialized() const { return true; }

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1."
               "SubscribeToDeviceInstanceUpdatesRequest";
    }

   protected:
    explicit SubscribeToDeviceInstanceUpdatesRequest(
        ::google::protobuf::Arena* arena);
    SubscribeToDeviceInstanceUpdatesRequest(
        ::google::protobuf::Arena* arena,
        const SubscribeToDeviceInstanceUpdatesRequest& from);
    SubscribeToDeviceInstanceUpdatesRequest(
        ::google::protobuf::Arena* arena,
        SubscribeToDeviceInstanceUpdatesRequest&& from) noexcept
        : SubscribeToDeviceInstanceUpdatesRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::internal::ZeroFieldsBase::ClassData*
    GetClassData() const PROTOBUF_FINAL;
    static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull
        _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 0, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_SubscribeToDeviceInstanceUpdatesRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const SubscribeToDeviceInstanceUpdatesRequest& from_msg);
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class StopParameterSyncResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.StopParameterSyncResponse)
 */
{
   public:
    inline StopParameterSyncResponse() : StopParameterSyncResponse(nullptr) {}
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR StopParameterSyncResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline StopParameterSyncResponse(const StopParameterSyncResponse& from)
        : StopParameterSyncResponse(nullptr, from)
    {}
    inline StopParameterSyncResponse(StopParameterSyncResponse&& from) noexcept
        : StopParameterSyncResponse(nullptr, std::move(from))
    {}
    inline StopParameterSyncResponse& operator=(
        const StopParameterSyncResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline StopParameterSyncResponse& operator=(
        StopParameterSyncResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const StopParameterSyncResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const StopParameterSyncResponse* internal_default_instance()
    {
        return reinterpret_cast<const StopParameterSyncResponse*>(
            &_StopParameterSyncResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 26;
    friend void swap(StopParameterSyncResponse& a, StopParameterSyncResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(StopParameterSyncResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(StopParameterSyncResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    StopParameterSyncResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<
            StopParameterSyncResponse>(arena);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
    inline void CopyFrom(const StopParameterSyncResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
    void MergeFrom(const StopParameterSyncResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
    }

   public:
    bool IsInitialized() const { return true; }

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.StopParameterSyncResponse";
    }

   protected:
    explicit StopParameterSyncResponse(::google::protobuf::Arena* arena);
    StopParameterSyncResponse(::google::protobuf::Arena* arena,
                              const StopParameterSyncResponse& from);
    StopParameterSyncResponse(::google::protobuf::Arena* arena,
                              StopParameterSyncResponse&& from) noexcept
        : StopParameterSyncResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::internal::ZeroFieldsBase::ClassData*
    GetClassData() const PROTOBUF_FINAL;
    static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull
        _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.StopParameterSyncResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 0, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_StopParameterSyncResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const StopParameterSyncResponse& from_msg);
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class StopParameterSyncRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest)
 */
{
   public:
    inline StopParameterSyncRequest() : StopParameterSyncRequest(nullptr) {}
    ~StopParameterSyncRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR StopParameterSyncRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline StopParameterSyncRequest(const StopParameterSyncRequest& from)
        : StopParameterSyncRequest(nullptr, from)
    {}
    inline StopParameterSyncRequest(StopParameterSyncRequest&& from) noexcept
        : StopParameterSyncRequest(nullptr, std::move(from))
    {}
    inline StopParameterSyncRequest& operator=(
        const StopParameterSyncRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline StopParameterSyncRequest& operator=(
        StopParameterSyncRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const StopParameterSyncRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const StopParameterSyncRequest* internal_default_instance()
    {
        return reinterpret_cast<const StopParameterSyncRequest*>(
            &_StopParameterSyncRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 25;
    friend void swap(StopParameterSyncRequest& a, StopParameterSyncRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(StopParameterSyncRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(StopParameterSyncRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    StopParameterSyncRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            StopParameterSyncRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const StopParameterSyncRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const StopParameterSyncRequest& from)
    {
        StopParameterSyncRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(StopParameterSyncRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.StopParameterSyncRequest";
    }

   protected:
    explicit StopParameterSyncRequest(::google::protobuf::Arena* arena);
    StopParameterSyncRequest(::google::protobuf::Arena* arena,
                             const StopParameterSyncRequest& from);
    StopParameterSyncRequest(::google::protobuf::Arena* arena,
                             StopParameterSyncRequest&& from) noexcept
        : StopParameterSyncRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kParameterSyncKeysFieldNumber = 2,
        kRtSessionIdFieldNumber = 1,
    };
    // repeated string parameter_sync_keys = 2;
    int parameter_sync_keys_size() const;

   private:
    int _internal_parameter_sync_keys_size() const;

   public:
    void clear_parameter_sync_keys();
    const std::string& parameter_sync_keys(int index) const;
    std::string* mutable_parameter_sync_keys(int index);
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parameter_sync_keys(int index, Arg_&& value, Args_... args);
    std::string* add_parameter_sync_keys();
    template <typename Arg_ = const std::string&, typename... Args_>
    void add_parameter_sync_keys(Arg_&& value, Args_... args);
    const ::google::protobuf::RepeatedPtrField<std::string>&
    parameter_sync_keys() const;
    ::google::protobuf::RepeatedPtrField<std::string>*
    mutable_parameter_sync_keys();

   private:
    const ::google::protobuf::RepeatedPtrField<std::string>&
    _internal_parameter_sync_keys() const;
    ::google::protobuf::RepeatedPtrField<std::string>*
    _internal_mutable_parameter_sync_keys();

   public:
    // int32 rt_session_id = 1;
    void clear_rt_session_id();
    ::int32_t rt_session_id() const;
    void set_rt_session_id(::int32_t value);

   private:
    ::int32_t _internal_rt_session_id() const;
    void _internal_set_rt_session_id(::int32_t value);

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 84, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_StopParameterSyncRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const StopParameterSyncRequest& from_msg);
        ::google::protobuf::RepeatedPtrField<std::string> parameter_sync_keys_;
        ::int32_t rt_session_id_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class StartParameterSyncResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.StartParameterSyncResponse)
 */
{
   public:
    inline StartParameterSyncResponse() : StartParameterSyncResponse(nullptr) {}
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR StartParameterSyncResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline StartParameterSyncResponse(const StartParameterSyncResponse& from)
        : StartParameterSyncResponse(nullptr, from)
    {}
    inline StartParameterSyncResponse(
        StartParameterSyncResponse&& from) noexcept
        : StartParameterSyncResponse(nullptr, std::move(from))
    {}
    inline StartParameterSyncResponse& operator=(
        const StartParameterSyncResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline StartParameterSyncResponse& operator=(
        StartParameterSyncResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const StartParameterSyncResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const StartParameterSyncResponse* internal_default_instance()
    {
        return reinterpret_cast<const StartParameterSyncResponse*>(
            &_StartParameterSyncResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 24;
    friend void swap(StartParameterSyncResponse& a,
                     StartParameterSyncResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(StartParameterSyncResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(StartParameterSyncResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    StartParameterSyncResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<
            StartParameterSyncResponse>(arena);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
    inline void CopyFrom(const StartParameterSyncResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
    void MergeFrom(const StartParameterSyncResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
    }

   public:
    bool IsInitialized() const { return true; }

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.StartParameterSyncResponse";
    }

   protected:
    explicit StartParameterSyncResponse(::google::protobuf::Arena* arena);
    StartParameterSyncResponse(::google::protobuf::Arena* arena,
                               const StartParameterSyncResponse& from);
    StartParameterSyncResponse(::google::protobuf::Arena* arena,
                               StartParameterSyncResponse&& from) noexcept
        : StartParameterSyncResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::internal::ZeroFieldsBase::ClassData*
    GetClassData() const PROTOBUF_FINAL;
    static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull
        _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.StartParameterSyncResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 0, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_StartParameterSyncResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const StartParameterSyncResponse& from_msg);
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class StartParameterSyncRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest)
 */
{
   public:
    inline StartParameterSyncRequest() : StartParameterSyncRequest(nullptr) {}
    ~StartParameterSyncRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR StartParameterSyncRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline StartParameterSyncRequest(const StartParameterSyncRequest& from)
        : StartParameterSyncRequest(nullptr, from)
    {}
    inline StartParameterSyncRequest(StartParameterSyncRequest&& from) noexcept
        : StartParameterSyncRequest(nullptr, std::move(from))
    {}
    inline StartParameterSyncRequest& operator=(
        const StartParameterSyncRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline StartParameterSyncRequest& operator=(
        StartParameterSyncRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const StartParameterSyncRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const StartParameterSyncRequest* internal_default_instance()
    {
        return reinterpret_cast<const StartParameterSyncRequest*>(
            &_StartParameterSyncRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 23;
    friend void swap(StartParameterSyncRequest& a, StartParameterSyncRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(StartParameterSyncRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(StartParameterSyncRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    StartParameterSyncRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            StartParameterSyncRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const StartParameterSyncRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const StartParameterSyncRequest& from)
    {
        StartParameterSyncRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(StartParameterSyncRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.StartParameterSyncRequest";
    }

   protected:
    explicit StartParameterSyncRequest(::google::protobuf::Arena* arena);
    StartParameterSyncRequest(::google::protobuf::Arena* arena,
                              const StartParameterSyncRequest& from);
    StartParameterSyncRequest(::google::protobuf::Arena* arena,
                              StartParameterSyncRequest&& from) noexcept
        : StartParameterSyncRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kParameterSyncKeysFieldNumber = 2,
        kRtSessionIdFieldNumber = 1,
    };
    // repeated string parameter_sync_keys = 2;
    int parameter_sync_keys_size() const;

   private:
    int _internal_parameter_sync_keys_size() const;

   public:
    void clear_parameter_sync_keys();
    const std::string& parameter_sync_keys(int index) const;
    std::string* mutable_parameter_sync_keys(int index);
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parameter_sync_keys(int index, Arg_&& value, Args_... args);
    std::string* add_parameter_sync_keys();
    template <typename Arg_ = const std::string&, typename... Args_>
    void add_parameter_sync_keys(Arg_&& value, Args_... args);
    const ::google::protobuf::RepeatedPtrField<std::string>&
    parameter_sync_keys() const;
    ::google::protobuf::RepeatedPtrField<std::string>*
    mutable_parameter_sync_keys();

   private:
    const ::google::protobuf::RepeatedPtrField<std::string>&
    _internal_parameter_sync_keys() const;
    ::google::protobuf::RepeatedPtrField<std::string>*
    _internal_mutable_parameter_sync_keys();

   public:
    // int32 rt_session_id = 1;
    void clear_rt_session_id();
    ::int32_t rt_session_id() const;
    void set_rt_session_id(::int32_t value);

   private:
    ::int32_t _internal_rt_session_id() const;
    void _internal_set_rt_session_id(::int32_t value);

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 85, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_StartParameterSyncRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const StartParameterSyncRequest& from_msg);
        ::google::protobuf::RepeatedPtrField<std::string> parameter_sync_keys_;
        ::int32_t rt_session_id_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class SetParameterValueRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.SetParameterValueRequest)
 */
{
   public:
    inline SetParameterValueRequest() : SetParameterValueRequest(nullptr) {}
    ~SetParameterValueRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR SetParameterValueRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline SetParameterValueRequest(const SetParameterValueRequest& from)
        : SetParameterValueRequest(nullptr, from)
    {}
    inline SetParameterValueRequest(SetParameterValueRequest&& from) noexcept
        : SetParameterValueRequest(nullptr, std::move(from))
    {}
    inline SetParameterValueRequest& operator=(
        const SetParameterValueRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline SetParameterValueRequest& operator=(
        SetParameterValueRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const SetParameterValueRequest& default_instance()
    {
        return *internal_default_instance();
    }
    enum NewValueCase
    {
        kTextValue = 3,
        kNormalizedValue = 4,
        NEW_VALUE_NOT_SET = 0,
    };
    static inline const SetParameterValueRequest* internal_default_instance()
    {
        return reinterpret_cast<const SetParameterValueRequest*>(
            &_SetParameterValueRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 16;
    friend void swap(SetParameterValueRequest& a, SetParameterValueRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(SetParameterValueRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(SetParameterValueRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    SetParameterValueRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            SetParameterValueRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const SetParameterValueRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const SetParameterValueRequest& from)
    {
        SetParameterValueRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(SetParameterValueRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.SetParameterValueRequest";
    }

   protected:
    explicit SetParameterValueRequest(::google::protobuf::Arena* arena);
    SetParameterValueRequest(::google::protobuf::Arena* arena,
                             const SetParameterValueRequest& from);
    SetParameterValueRequest(::google::protobuf::Arena* arena,
                             SetParameterValueRequest&& from) noexcept
        : SetParameterValueRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceIdFieldNumber = 1,
        kParameterIdFieldNumber = 2,
        kTextValueFieldNumber = 3,
        kNormalizedValueFieldNumber = 4,
    };
    // string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
    void clear_device_instance_id();
    const std::string& device_instance_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_device_instance_id(Arg_&& arg, Args_... args);
    std::string* mutable_device_instance_id();
    PROTOBUF_NODISCARD std::string* release_device_instance_id();
    void set_allocated_device_instance_id(std::string* value);

   private:
    const std::string& _internal_device_instance_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_instance_id(
        const std::string& value);
    std::string* _internal_mutable_device_instance_id();

   public:
    // string parameter_id = 2 [(.google.api.field_behavior) = REQUIRED];
    void clear_parameter_id();
    const std::string& parameter_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parameter_id(Arg_&& arg, Args_... args);
    std::string* mutable_parameter_id();
    PROTOBUF_NODISCARD std::string* release_parameter_id();
    void set_allocated_parameter_id(std::string* value);

   private:
    const std::string& _internal_parameter_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_parameter_id(
        const std::string& value);
    std::string* _internal_mutable_parameter_id();

   public:
    // string text_value = 3;
    bool has_text_value() const;
    void clear_text_value();
    const std::string& text_value() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_text_value(Arg_&& arg, Args_... args);
    std::string* mutable_text_value();
    PROTOBUF_NODISCARD std::string* release_text_value();
    void set_allocated_text_value(std::string* value);

   private:
    const std::string& _internal_text_value() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_text_value(
        const std::string& value);
    std::string* _internal_mutable_text_value();

   public:
    // double normalized_value = 4;
    bool has_normalized_value() const;
    void clear_normalized_value();
    double normalized_value() const;
    void set_normalized_value(double value);

   private:
    double _internal_normalized_value() const;
    void _internal_set_normalized_value(double value);

   public:
    void clear_new_value();
    NewValueCase new_value_case() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.SetParameterValueRequest)
   private:
    class _Internal;
    void set_has_text_value();
    void set_has_normalized_value();
    inline bool has_new_value() const;
    inline void clear_has_new_value();
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 4, 0, 105, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_SetParameterValueRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const SetParameterValueRequest& from_msg);
        ::google::protobuf::internal::ArenaStringPtr device_instance_id_;
        ::google::protobuf::internal::ArenaStringPtr parameter_id_;
        union NewValueUnion
        {
            constexpr NewValueUnion() : _constinit_{} {}
            ::google::protobuf::internal::ConstantInitialized _constinit_;
            ::google::protobuf::internal::ArenaStringPtr text_value_;
            double normalized_value_;
        } new_value_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::uint32_t _oneof_case_[1];
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class RtUpdateParameterCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand)
 */
{
   public:
    inline RtUpdateParameterCommand() : RtUpdateParameterCommand(nullptr) {}
    ~RtUpdateParameterCommand() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RtUpdateParameterCommand(
        ::google::protobuf::internal::ConstantInitialized);

    inline RtUpdateParameterCommand(const RtUpdateParameterCommand& from)
        : RtUpdateParameterCommand(nullptr, from)
    {}
    inline RtUpdateParameterCommand(RtUpdateParameterCommand&& from) noexcept
        : RtUpdateParameterCommand(nullptr, std::move(from))
    {}
    inline RtUpdateParameterCommand& operator=(
        const RtUpdateParameterCommand& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RtUpdateParameterCommand& operator=(
        RtUpdateParameterCommand&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RtUpdateParameterCommand& default_instance()
    {
        return *internal_default_instance();
    }
    enum NewValueCase
    {
        kTextValue = 10,
        kNormalizedValue = 11,
        NEW_VALUE_NOT_SET = 0,
    };
    static inline const RtUpdateParameterCommand* internal_default_instance()
    {
        return reinterpret_cast<const RtUpdateParameterCommand*>(
            &_RtUpdateParameterCommand_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 27;
    friend void swap(RtUpdateParameterCommand& a, RtUpdateParameterCommand& b)
    {
        a.Swap(&b);
    }
    inline void Swap(RtUpdateParameterCommand* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RtUpdateParameterCommand* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RtUpdateParameterCommand* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            RtUpdateParameterCommand>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RtUpdateParameterCommand& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RtUpdateParameterCommand& from)
    {
        RtUpdateParameterCommand::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RtUpdateParameterCommand* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand";
    }

   protected:
    explicit RtUpdateParameterCommand(::google::protobuf::Arena* arena);
    RtUpdateParameterCommand(::google::protobuf::Arena* arena,
                             const RtUpdateParameterCommand& from);
    RtUpdateParameterCommand(::google::protobuf::Arena* arena,
                             RtUpdateParameterCommand&& from) noexcept
        : RtUpdateParameterCommand(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kParameterSyncKeyFieldNumber = 1,
        kTextValueFieldNumber = 10,
        kNormalizedValueFieldNumber = 11,
    };
    // string parameter_sync_key = 1;
    void clear_parameter_sync_key();
    const std::string& parameter_sync_key() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parameter_sync_key(Arg_&& arg, Args_... args);
    std::string* mutable_parameter_sync_key();
    PROTOBUF_NODISCARD std::string* release_parameter_sync_key();
    void set_allocated_parameter_sync_key(std::string* value);

   private:
    const std::string& _internal_parameter_sync_key() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_parameter_sync_key(
        const std::string& value);
    std::string* _internal_mutable_parameter_sync_key();

   public:
    // string text_value = 10;
    bool has_text_value() const;
    void clear_text_value();
    const std::string& text_value() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_text_value(Arg_&& arg, Args_... args);
    std::string* mutable_text_value();
    PROTOBUF_NODISCARD std::string* release_text_value();
    void set_allocated_text_value(std::string* value);

   private:
    const std::string& _internal_text_value() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_text_value(
        const std::string& value);
    std::string* _internal_mutable_text_value();

   public:
    // double normalized_value = 11;
    bool has_normalized_value() const;
    void clear_normalized_value();
    double normalized_value() const;
    void set_normalized_value(double value);

   private:
    double _internal_normalized_value() const;
    void _internal_set_normalized_value(double value);

   public:
    void clear_new_value();
    NewValueCase new_value_case() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand)
   private:
    class _Internal;
    void set_has_text_value();
    void set_has_normalized_value();
    inline bool has_new_value() const;
    inline void clear_has_new_value();
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 3, 0, 93, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RtUpdateParameterCommand_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RtUpdateParameterCommand& from_msg);
        ::google::protobuf::internal::ArenaStringPtr parameter_sync_key_;
        union NewValueUnion
        {
            constexpr NewValueUnion() : _constinit_{} {}
            ::google::protobuf::internal::ConstantInitialized _constinit_;
            ::google::protobuf::internal::ArenaStringPtr text_value_;
            double normalized_value_;
        } new_value_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::uint32_t _oneof_case_[1];
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class RtParameter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RtParameter)
 */
{
   public:
    inline RtParameter() : RtParameter(nullptr) {}
    ~RtParameter() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RtParameter(
        ::google::protobuf::internal::ConstantInitialized);

    inline RtParameter(const RtParameter& from) : RtParameter(nullptr, from) {}
    inline RtParameter(RtParameter&& from) noexcept
        : RtParameter(nullptr, std::move(from))
    {}
    inline RtParameter& operator=(const RtParameter& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RtParameter& operator=(RtParameter&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RtParameter& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const RtParameter* internal_default_instance()
    {
        return reinterpret_cast<const RtParameter*>(
            &_RtParameter_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 29;
    friend void swap(RtParameter& a, RtParameter& b) { a.Swap(&b); }
    inline void Swap(RtParameter* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RtParameter* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RtParameter* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<RtParameter>(
            arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RtParameter& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RtParameter& from)
    {
        RtParameter::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RtParameter* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.RtParameter";
    }

   protected:
    explicit RtParameter(::google::protobuf::Arena* arena);
    RtParameter(::google::protobuf::Arena* arena, const RtParameter& from);
    RtParameter(::google::protobuf::Arena* arena, RtParameter&& from) noexcept
        : RtParameter(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------
    using State = RtParameter_State;
    static constexpr State STATE_UNSPECIFIED =
        RtParameter_State_STATE_UNSPECIFIED;
    static constexpr State STATE_FINALIZED = RtParameter_State_STATE_FINALIZED;
    static constexpr State STATE_UPDATING = RtParameter_State_STATE_UPDATING;
    static inline bool State_IsValid(int value)
    {
        return RtParameter_State_IsValid(value);
    }
    static constexpr State State_MIN = RtParameter_State_State_MIN;
    static constexpr State State_MAX = RtParameter_State_State_MAX;
    static constexpr int State_ARRAYSIZE = RtParameter_State_State_ARRAYSIZE;
    static inline const ::google::protobuf::EnumDescriptor* State_descriptor()
    {
        return RtParameter_State_descriptor();
    }
    template <typename T>
    static inline const std::string& State_Name(T value)
    {
        return RtParameter_State_Name(value);
    }
    static inline bool State_Parse(absl::string_view name, State* value)
    {
        return RtParameter_State_Parse(name, value);
    }

    // accessors -------------------------------------------------------
    enum : int
    {
        kParameterSyncKeyFieldNumber = 1,
        kTextUnmodulatedValueFieldNumber = 3,
        kNormalizedUnmodulatedValueFieldNumber = 4,
        kNormalizedModulatedValueFieldNumber = 5,
        kSequenceNumberFieldNumber = 2,
        kStateFieldNumber = 10,
    };
    // string parameter_sync_key = 1;
    void clear_parameter_sync_key();
    const std::string& parameter_sync_key() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parameter_sync_key(Arg_&& arg, Args_... args);
    std::string* mutable_parameter_sync_key();
    PROTOBUF_NODISCARD std::string* release_parameter_sync_key();
    void set_allocated_parameter_sync_key(std::string* value);

   private:
    const std::string& _internal_parameter_sync_key() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_parameter_sync_key(
        const std::string& value);
    std::string* _internal_mutable_parameter_sync_key();

   public:
    // string text_unmodulated_value = 3;
    void clear_text_unmodulated_value();
    const std::string& text_unmodulated_value() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_text_unmodulated_value(Arg_&& arg, Args_... args);
    std::string* mutable_text_unmodulated_value();
    PROTOBUF_NODISCARD std::string* release_text_unmodulated_value();
    void set_allocated_text_unmodulated_value(std::string* value);

   private:
    const std::string& _internal_text_unmodulated_value() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_text_unmodulated_value(
        const std::string& value);
    std::string* _internal_mutable_text_unmodulated_value();

   public:
    // double normalized_unmodulated_value = 4;
    void clear_normalized_unmodulated_value();
    double normalized_unmodulated_value() const;
    void set_normalized_unmodulated_value(double value);

   private:
    double _internal_normalized_unmodulated_value() const;
    void _internal_set_normalized_unmodulated_value(double value);

   public:
    // double normalized_modulated_value = 5;
    void clear_normalized_modulated_value();
    double normalized_modulated_value() const;
    void set_normalized_modulated_value(double value);

   private:
    double _internal_normalized_modulated_value() const;
    void _internal_set_normalized_modulated_value(double value);

   public:
    // int32 sequence_number = 2;
    void clear_sequence_number();
    ::int32_t sequence_number() const;
    void set_sequence_number(::int32_t value);

   private:
    ::int32_t _internal_sequence_number() const;
    void _internal_set_sequence_number(::int32_t value);

   public:
    // .novonotes.audio_engine.v1alpha1.RtParameter.State state = 10;
    void clear_state();
    ::novonotes::audio_engine::v1alpha1::RtParameter_State state() const;
    void set_state(
        ::novonotes::audio_engine::v1alpha1::RtParameter_State value);

   private:
    ::novonotes::audio_engine::v1alpha1::RtParameter_State _internal_state()
        const;
    void _internal_set_state(
        ::novonotes::audio_engine::v1alpha1::RtParameter_State value);

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RtParameter)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 92, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RtParameter_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RtParameter& from_msg);
        ::google::protobuf::internal::ArenaStringPtr parameter_sync_key_;
        ::google::protobuf::internal::ArenaStringPtr text_unmodulated_value_;
        double normalized_unmodulated_value_;
        double normalized_modulated_value_;
        ::int32_t sequence_number_;
        int state_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class RtFinalizeParameterCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand)
 */
{
   public:
    inline RtFinalizeParameterCommand() : RtFinalizeParameterCommand(nullptr) {}
    ~RtFinalizeParameterCommand() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RtFinalizeParameterCommand(
        ::google::protobuf::internal::ConstantInitialized);

    inline RtFinalizeParameterCommand(const RtFinalizeParameterCommand& from)
        : RtFinalizeParameterCommand(nullptr, from)
    {}
    inline RtFinalizeParameterCommand(
        RtFinalizeParameterCommand&& from) noexcept
        : RtFinalizeParameterCommand(nullptr, std::move(from))
    {}
    inline RtFinalizeParameterCommand& operator=(
        const RtFinalizeParameterCommand& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RtFinalizeParameterCommand& operator=(
        RtFinalizeParameterCommand&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RtFinalizeParameterCommand& default_instance()
    {
        return *internal_default_instance();
    }
    enum NewValueCase
    {
        kTextValue = 10,
        kNormalizedValue = 11,
        NEW_VALUE_NOT_SET = 0,
    };
    static inline const RtFinalizeParameterCommand* internal_default_instance()
    {
        return reinterpret_cast<const RtFinalizeParameterCommand*>(
            &_RtFinalizeParameterCommand_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 28;
    friend void swap(RtFinalizeParameterCommand& a,
                     RtFinalizeParameterCommand& b)
    {
        a.Swap(&b);
    }
    inline void Swap(RtFinalizeParameterCommand* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RtFinalizeParameterCommand* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RtFinalizeParameterCommand* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            RtFinalizeParameterCommand>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RtFinalizeParameterCommand& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RtFinalizeParameterCommand& from)
    {
        RtFinalizeParameterCommand::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RtFinalizeParameterCommand* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand";
    }

   protected:
    explicit RtFinalizeParameterCommand(::google::protobuf::Arena* arena);
    RtFinalizeParameterCommand(::google::protobuf::Arena* arena,
                               const RtFinalizeParameterCommand& from);
    RtFinalizeParameterCommand(::google::protobuf::Arena* arena,
                               RtFinalizeParameterCommand&& from) noexcept
        : RtFinalizeParameterCommand(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kParameterSyncKeyFieldNumber = 1,
        kTextValueFieldNumber = 10,
        kNormalizedValueFieldNumber = 11,
    };
    // string parameter_sync_key = 1;
    void clear_parameter_sync_key();
    const std::string& parameter_sync_key() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parameter_sync_key(Arg_&& arg, Args_... args);
    std::string* mutable_parameter_sync_key();
    PROTOBUF_NODISCARD std::string* release_parameter_sync_key();
    void set_allocated_parameter_sync_key(std::string* value);

   private:
    const std::string& _internal_parameter_sync_key() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_parameter_sync_key(
        const std::string& value);
    std::string* _internal_mutable_parameter_sync_key();

   public:
    // string text_value = 10;
    bool has_text_value() const;
    void clear_text_value();
    const std::string& text_value() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_text_value(Arg_&& arg, Args_... args);
    std::string* mutable_text_value();
    PROTOBUF_NODISCARD std::string* release_text_value();
    void set_allocated_text_value(std::string* value);

   private:
    const std::string& _internal_text_value() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_text_value(
        const std::string& value);
    std::string* _internal_mutable_text_value();

   public:
    // double normalized_value = 11;
    bool has_normalized_value() const;
    void clear_normalized_value();
    double normalized_value() const;
    void set_normalized_value(double value);

   private:
    double _internal_normalized_value() const;
    void _internal_set_normalized_value(double value);

   public:
    void clear_new_value();
    NewValueCase new_value_case() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand)
   private:
    class _Internal;
    void set_has_text_value();
    void set_has_normalized_value();
    inline bool has_new_value() const;
    inline void clear_has_new_value();
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 3, 0, 95, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RtFinalizeParameterCommand_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RtFinalizeParameterCommand& from_msg);
        ::google::protobuf::internal::ArenaStringPtr parameter_sync_key_;
        union NewValueUnion
        {
            constexpr NewValueUnion() : _constinit_{} {}
            ::google::protobuf::internal::ConstantInitialized _constinit_;
            ::google::protobuf::internal::ArenaStringPtr text_value_;
            double normalized_value_;
        } new_value_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::uint32_t _oneof_case_[1];
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class RestoreDeviceInstanceStateRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest)
 */
{
   public:
    inline RestoreDeviceInstanceStateRequest()
        : RestoreDeviceInstanceStateRequest(nullptr)
    {}
    ~RestoreDeviceInstanceStateRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RestoreDeviceInstanceStateRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline RestoreDeviceInstanceStateRequest(
        const RestoreDeviceInstanceStateRequest& from)
        : RestoreDeviceInstanceStateRequest(nullptr, from)
    {}
    inline RestoreDeviceInstanceStateRequest(
        RestoreDeviceInstanceStateRequest&& from) noexcept
        : RestoreDeviceInstanceStateRequest(nullptr, std::move(from))
    {}
    inline RestoreDeviceInstanceStateRequest& operator=(
        const RestoreDeviceInstanceStateRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RestoreDeviceInstanceStateRequest& operator=(
        RestoreDeviceInstanceStateRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RestoreDeviceInstanceStateRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const RestoreDeviceInstanceStateRequest*
    internal_default_instance()
    {
        return reinterpret_cast<const RestoreDeviceInstanceStateRequest*>(
            &_RestoreDeviceInstanceStateRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 14;
    friend void swap(RestoreDeviceInstanceStateRequest& a,
                     RestoreDeviceInstanceStateRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(RestoreDeviceInstanceStateRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RestoreDeviceInstanceStateRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RestoreDeviceInstanceStateRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            RestoreDeviceInstanceStateRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RestoreDeviceInstanceStateRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RestoreDeviceInstanceStateRequest& from)
    {
        RestoreDeviceInstanceStateRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RestoreDeviceInstanceStateRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1."
               "RestoreDeviceInstanceStateRequest";
    }

   protected:
    explicit RestoreDeviceInstanceStateRequest(
        ::google::protobuf::Arena* arena);
    RestoreDeviceInstanceStateRequest(
        ::google::protobuf::Arena* arena,
        const RestoreDeviceInstanceStateRequest& from);
    RestoreDeviceInstanceStateRequest(
        ::google::protobuf::Arena* arena,
        RestoreDeviceInstanceStateRequest&& from) noexcept
        : RestoreDeviceInstanceStateRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceIdFieldNumber = 1,
        kStateRestorationTokenFieldNumber = 2,
    };
    // string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
    void clear_device_instance_id();
    const std::string& device_instance_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_device_instance_id(Arg_&& arg, Args_... args);
    std::string* mutable_device_instance_id();
    PROTOBUF_NODISCARD std::string* release_device_instance_id();
    void set_allocated_device_instance_id(std::string* value);

   private:
    const std::string& _internal_device_instance_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_instance_id(
        const std::string& value);
    std::string* _internal_mutable_device_instance_id();

   public:
    // string state_restoration_token = 2 [(.google.api.field_behavior) =
    // REQUIRED];
    void clear_state_restoration_token();
    const std::string& state_restoration_token() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_state_restoration_token(Arg_&& arg, Args_... args);
    std::string* mutable_state_restoration_token();
    PROTOBUF_NODISCARD std::string* release_state_restoration_token();
    void set_allocated_state_restoration_token(std::string* value);

   private:
    const std::string& _internal_state_restoration_token() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_restoration_token(
        const std::string& value);
    std::string* _internal_mutable_state_restoration_token();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 115, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RestoreDeviceInstanceStateRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RestoreDeviceInstanceStateRequest& from_msg);
        ::google::protobuf::internal::ArenaStringPtr device_instance_id_;
        ::google::protobuf::internal::ArenaStringPtr state_restoration_token_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class GetDeviceInstanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.GetDeviceInstanceRequest)
 */
{
   public:
    inline GetDeviceInstanceRequest() : GetDeviceInstanceRequest(nullptr) {}
    ~GetDeviceInstanceRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR GetDeviceInstanceRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline GetDeviceInstanceRequest(const GetDeviceInstanceRequest& from)
        : GetDeviceInstanceRequest(nullptr, from)
    {}
    inline GetDeviceInstanceRequest(GetDeviceInstanceRequest&& from) noexcept
        : GetDeviceInstanceRequest(nullptr, std::move(from))
    {}
    inline GetDeviceInstanceRequest& operator=(
        const GetDeviceInstanceRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline GetDeviceInstanceRequest& operator=(
        GetDeviceInstanceRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const GetDeviceInstanceRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const GetDeviceInstanceRequest* internal_default_instance()
    {
        return reinterpret_cast<const GetDeviceInstanceRequest*>(
            &_GetDeviceInstanceRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 10;
    friend void swap(GetDeviceInstanceRequest& a, GetDeviceInstanceRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(GetDeviceInstanceRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(GetDeviceInstanceRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    GetDeviceInstanceRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            GetDeviceInstanceRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const GetDeviceInstanceRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const GetDeviceInstanceRequest& from)
    {
        GetDeviceInstanceRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(GetDeviceInstanceRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.GetDeviceInstanceRequest";
    }

   protected:
    explicit GetDeviceInstanceRequest(::google::protobuf::Arena* arena);
    GetDeviceInstanceRequest(::google::protobuf::Arena* arena,
                             const GetDeviceInstanceRequest& from);
    GetDeviceInstanceRequest(::google::protobuf::Arena* arena,
                             GetDeviceInstanceRequest&& from) noexcept
        : GetDeviceInstanceRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceIdFieldNumber = 1,
    };
    // string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
    void clear_device_instance_id();
    const std::string& device_instance_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_device_instance_id(Arg_&& arg, Args_... args);
    std::string* mutable_device_instance_id();
    PROTOBUF_NODISCARD std::string* release_device_instance_id();
    void set_allocated_device_instance_id(std::string* value);

   private:
    const std::string& _internal_device_instance_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_instance_id(
        const std::string& value);
    std::string* _internal_mutable_device_instance_id();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.GetDeviceInstanceRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 83, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_GetDeviceInstanceRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const GetDeviceInstanceRequest& from_msg);
        ::google::protobuf::internal::ArenaStringPtr device_instance_id_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeviceParameter_NumericType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType)
 */
{
   public:
    inline DeviceParameter_NumericType() : DeviceParameter_NumericType(nullptr)
    {}
    ~DeviceParameter_NumericType() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeviceParameter_NumericType(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeviceParameter_NumericType(const DeviceParameter_NumericType& from)
        : DeviceParameter_NumericType(nullptr, from)
    {}
    inline DeviceParameter_NumericType(
        DeviceParameter_NumericType&& from) noexcept
        : DeviceParameter_NumericType(nullptr, std::move(from))
    {}
    inline DeviceParameter_NumericType& operator=(
        const DeviceParameter_NumericType& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeviceParameter_NumericType& operator=(
        DeviceParameter_NumericType&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeviceParameter_NumericType& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeviceParameter_NumericType* internal_default_instance()
    {
        return reinterpret_cast<const DeviceParameter_NumericType*>(
            &_DeviceParameter_NumericType_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 2;
    friend void swap(DeviceParameter_NumericType& a,
                     DeviceParameter_NumericType& b)
    {
        a.Swap(&b);
    }
    inline void Swap(DeviceParameter_NumericType* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeviceParameter_NumericType* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeviceParameter_NumericType* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            DeviceParameter_NumericType>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const DeviceParameter_NumericType& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const DeviceParameter_NumericType& from)
    {
        DeviceParameter_NumericType::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(DeviceParameter_NumericType* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType";
    }

   protected:
    explicit DeviceParameter_NumericType(::google::protobuf::Arena* arena);
    DeviceParameter_NumericType(::google::protobuf::Arena* arena,
                                const DeviceParameter_NumericType& from);
    DeviceParameter_NumericType(::google::protobuf::Arena* arena,
                                DeviceParameter_NumericType&& from) noexcept
        : DeviceParameter_NumericType(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kMinValueFieldNumber = 3,
        kMaxValueFieldNumber = 4,
        kNormalizedCurrentValueFieldNumber = 1,
        kNormalizedDefaultValueFieldNumber = 2,
        kStepCountFieldNumber = 5,
    };
    // string min_value = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
    void clear_min_value();
    const std::string& min_value() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_min_value(Arg_&& arg, Args_... args);
    std::string* mutable_min_value();
    PROTOBUF_NODISCARD std::string* release_min_value();
    void set_allocated_min_value(std::string* value);

   private:
    const std::string& _internal_min_value() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_min_value(
        const std::string& value);
    std::string* _internal_mutable_min_value();

   public:
    // string max_value = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
    void clear_max_value();
    const std::string& max_value() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_max_value(Arg_&& arg, Args_... args);
    std::string* mutable_max_value();
    PROTOBUF_NODISCARD std::string* release_max_value();
    void set_allocated_max_value(std::string* value);

   private:
    const std::string& _internal_max_value() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_max_value(
        const std::string& value);
    std::string* _internal_mutable_max_value();

   public:
    // double normalized_current_value = 1 [(.google.api.field_behavior) =
    // OPTIONAL];
    void clear_normalized_current_value();
    double normalized_current_value() const;
    void set_normalized_current_value(double value);

   private:
    double _internal_normalized_current_value() const;
    void _internal_set_normalized_current_value(double value);

   public:
    // double normalized_default_value = 2 [(.google.api.field_behavior) =
    // OUTPUT_ONLY];
    void clear_normalized_default_value();
    double normalized_default_value() const;
    void set_normalized_default_value(double value);

   private:
    double _internal_normalized_default_value() const;
    void _internal_set_normalized_default_value(double value);

   public:
    // int32 step_count = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
    void clear_step_count();
    ::int32_t step_count() const;
    void set_step_count(::int32_t value);

   private:
    ::int32_t _internal_step_count() const;
    void _internal_set_step_count(::int32_t value);

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 86, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeviceParameter_NumericType_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeviceParameter_NumericType& from_msg);
        ::google::protobuf::internal::ArenaStringPtr min_value_;
        ::google::protobuf::internal::ArenaStringPtr max_value_;
        double normalized_current_value_;
        double normalized_default_value_;
        ::int32_t step_count_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeviceParameter_ChoiceType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType)
 */
{
   public:
    inline DeviceParameter_ChoiceType() : DeviceParameter_ChoiceType(nullptr) {}
    ~DeviceParameter_ChoiceType() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeviceParameter_ChoiceType(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeviceParameter_ChoiceType(const DeviceParameter_ChoiceType& from)
        : DeviceParameter_ChoiceType(nullptr, from)
    {}
    inline DeviceParameter_ChoiceType(
        DeviceParameter_ChoiceType&& from) noexcept
        : DeviceParameter_ChoiceType(nullptr, std::move(from))
    {}
    inline DeviceParameter_ChoiceType& operator=(
        const DeviceParameter_ChoiceType& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeviceParameter_ChoiceType& operator=(
        DeviceParameter_ChoiceType&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeviceParameter_ChoiceType& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeviceParameter_ChoiceType* internal_default_instance()
    {
        return reinterpret_cast<const DeviceParameter_ChoiceType*>(
            &_DeviceParameter_ChoiceType_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 3;
    friend void swap(DeviceParameter_ChoiceType& a,
                     DeviceParameter_ChoiceType& b)
    {
        a.Swap(&b);
    }
    inline void Swap(DeviceParameter_ChoiceType* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeviceParameter_ChoiceType* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeviceParameter_ChoiceType* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            DeviceParameter_ChoiceType>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const DeviceParameter_ChoiceType& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const DeviceParameter_ChoiceType& from)
    {
        DeviceParameter_ChoiceType::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(DeviceParameter_ChoiceType* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType";
    }

   protected:
    explicit DeviceParameter_ChoiceType(::google::protobuf::Arena* arena);
    DeviceParameter_ChoiceType(::google::protobuf::Arena* arena,
                               const DeviceParameter_ChoiceType& from);
    DeviceParameter_ChoiceType(::google::protobuf::Arena* arena,
                               DeviceParameter_ChoiceType&& from) noexcept
        : DeviceParameter_ChoiceType(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kOptionsFieldNumber = 1,
    };
    // repeated string options = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
    int options_size() const;

   private:
    int _internal_options_size() const;

   public:
    void clear_options();
    const std::string& options(int index) const;
    std::string* mutable_options(int index);
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_options(int index, Arg_&& value, Args_... args);
    std::string* add_options();
    template <typename Arg_ = const std::string&, typename... Args_>
    void add_options(Arg_&& value, Args_... args);
    const ::google::protobuf::RepeatedPtrField<std::string>& options() const;
    ::google::protobuf::RepeatedPtrField<std::string>* mutable_options();

   private:
    const ::google::protobuf::RepeatedPtrField<std::string>& _internal_options()
        const;
    ::google::protobuf::RepeatedPtrField<std::string>*
    _internal_mutable_options();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 74, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeviceParameter_ChoiceType_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeviceParameter_ChoiceType& from_msg);
        ::google::protobuf::RepeatedPtrField<std::string> options_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeviceIo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeviceIo)
 */
{
   public:
    inline DeviceIo() : DeviceIo(nullptr) {}
    ~DeviceIo() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeviceIo(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeviceIo(const DeviceIo& from) : DeviceIo(nullptr, from) {}
    inline DeviceIo(DeviceIo&& from) noexcept
        : DeviceIo(nullptr, std::move(from))
    {}
    inline DeviceIo& operator=(const DeviceIo& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeviceIo& operator=(DeviceIo&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeviceIo& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeviceIo* internal_default_instance()
    {
        return reinterpret_cast<const DeviceIo*>(&_DeviceIo_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 5;
    friend void swap(DeviceIo& a, DeviceIo& b) { a.Swap(&b); }
    inline void Swap(DeviceIo* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeviceIo* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeviceIo* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<DeviceIo>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const DeviceIo& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const DeviceIo& from) { DeviceIo::MergeImpl(*this, from); }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(DeviceIo* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeviceIo";
    }

   protected:
    explicit DeviceIo(::google::protobuf::Arena* arena);
    DeviceIo(::google::protobuf::Arena* arena, const DeviceIo& from);
    DeviceIo(::google::protobuf::Arena* arena, DeviceIo&& from) noexcept
        : DeviceIo(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDisplayNameFieldNumber = 2,
    };
    // string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
    void clear_display_name();
    const std::string& display_name() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_display_name(Arg_&& arg, Args_... args);
    std::string* mutable_display_name();
    PROTOBUF_NODISCARD std::string* release_display_name();
    void set_allocated_display_name(std::string* value);

   private:
    const std::string& _internal_display_name() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(
        const std::string& value);
    std::string* _internal_mutable_display_name();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeviceIo)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 61, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeviceIo_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeviceIo& from_msg);
        ::google::protobuf::internal::ArenaStringPtr display_name_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeleteDeviceInstanceResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceResponse)
 */
{
   public:
    inline DeleteDeviceInstanceResponse()
        : DeleteDeviceInstanceResponse(nullptr)
    {}
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeleteDeviceInstanceResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeleteDeviceInstanceResponse(
        const DeleteDeviceInstanceResponse& from)
        : DeleteDeviceInstanceResponse(nullptr, from)
    {}
    inline DeleteDeviceInstanceResponse(
        DeleteDeviceInstanceResponse&& from) noexcept
        : DeleteDeviceInstanceResponse(nullptr, std::move(from))
    {}
    inline DeleteDeviceInstanceResponse& operator=(
        const DeleteDeviceInstanceResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeleteDeviceInstanceResponse& operator=(
        DeleteDeviceInstanceResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeleteDeviceInstanceResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeleteDeviceInstanceResponse*
    internal_default_instance()
    {
        return reinterpret_cast<const DeleteDeviceInstanceResponse*>(
            &_DeleteDeviceInstanceResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 9;
    friend void swap(DeleteDeviceInstanceResponse& a,
                     DeleteDeviceInstanceResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(DeleteDeviceInstanceResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeleteDeviceInstanceResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeleteDeviceInstanceResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<
            DeleteDeviceInstanceResponse>(arena);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
    inline void CopyFrom(const DeleteDeviceInstanceResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
    void MergeFrom(const DeleteDeviceInstanceResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
    }

   public:
    bool IsInitialized() const { return true; }

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceResponse";
    }

   protected:
    explicit DeleteDeviceInstanceResponse(::google::protobuf::Arena* arena);
    DeleteDeviceInstanceResponse(::google::protobuf::Arena* arena,
                                 const DeleteDeviceInstanceResponse& from);
    DeleteDeviceInstanceResponse(::google::protobuf::Arena* arena,
                                 DeleteDeviceInstanceResponse&& from) noexcept
        : DeleteDeviceInstanceResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::internal::ZeroFieldsBase::ClassData*
    GetClassData() const PROTOBUF_FINAL;
    static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull
        _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 0, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeleteDeviceInstanceResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeleteDeviceInstanceResponse& from_msg);
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeleteDeviceInstanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceRequest)
 */
{
   public:
    inline DeleteDeviceInstanceRequest() : DeleteDeviceInstanceRequest(nullptr)
    {}
    ~DeleteDeviceInstanceRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeleteDeviceInstanceRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeleteDeviceInstanceRequest(const DeleteDeviceInstanceRequest& from)
        : DeleteDeviceInstanceRequest(nullptr, from)
    {}
    inline DeleteDeviceInstanceRequest(
        DeleteDeviceInstanceRequest&& from) noexcept
        : DeleteDeviceInstanceRequest(nullptr, std::move(from))
    {}
    inline DeleteDeviceInstanceRequest& operator=(
        const DeleteDeviceInstanceRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeleteDeviceInstanceRequest& operator=(
        DeleteDeviceInstanceRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeleteDeviceInstanceRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeleteDeviceInstanceRequest* internal_default_instance()
    {
        return reinterpret_cast<const DeleteDeviceInstanceRequest*>(
            &_DeleteDeviceInstanceRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 8;
    friend void swap(DeleteDeviceInstanceRequest& a,
                     DeleteDeviceInstanceRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(DeleteDeviceInstanceRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeleteDeviceInstanceRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeleteDeviceInstanceRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            DeleteDeviceInstanceRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const DeleteDeviceInstanceRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const DeleteDeviceInstanceRequest& from)
    {
        DeleteDeviceInstanceRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(DeleteDeviceInstanceRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceRequest";
    }

   protected:
    explicit DeleteDeviceInstanceRequest(::google::protobuf::Arena* arena);
    DeleteDeviceInstanceRequest(::google::protobuf::Arena* arena,
                                const DeleteDeviceInstanceRequest& from);
    DeleteDeviceInstanceRequest(::google::protobuf::Arena* arena,
                                DeleteDeviceInstanceRequest&& from) noexcept
        : DeleteDeviceInstanceRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceIdFieldNumber = 1,
    };
    // string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
    void clear_device_instance_id();
    const std::string& device_instance_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_device_instance_id(Arg_&& arg, Args_... args);
    std::string* mutable_device_instance_id();
    PROTOBUF_NODISCARD std::string* release_device_instance_id();
    void set_allocated_device_instance_id(std::string* value);

   private:
    const std::string& _internal_device_instance_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_instance_id(
        const std::string& value);
    std::string* _internal_mutable_device_instance_id();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 86, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeleteDeviceInstanceRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeleteDeviceInstanceRequest& from_msg);
        ::google::protobuf::internal::ArenaStringPtr device_instance_id_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class ExecuteDeviceSpecificCommandResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandResponse)
 */
{
   public:
    inline ExecuteDeviceSpecificCommandResponse()
        : ExecuteDeviceSpecificCommandResponse(nullptr)
    {}
    ~ExecuteDeviceSpecificCommandResponse() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR ExecuteDeviceSpecificCommandResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline ExecuteDeviceSpecificCommandResponse(
        const ExecuteDeviceSpecificCommandResponse& from)
        : ExecuteDeviceSpecificCommandResponse(nullptr, from)
    {}
    inline ExecuteDeviceSpecificCommandResponse(
        ExecuteDeviceSpecificCommandResponse&& from) noexcept
        : ExecuteDeviceSpecificCommandResponse(nullptr, std::move(from))
    {}
    inline ExecuteDeviceSpecificCommandResponse& operator=(
        const ExecuteDeviceSpecificCommandResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline ExecuteDeviceSpecificCommandResponse& operator=(
        ExecuteDeviceSpecificCommandResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const ExecuteDeviceSpecificCommandResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const ExecuteDeviceSpecificCommandResponse*
    internal_default_instance()
    {
        return reinterpret_cast<const ExecuteDeviceSpecificCommandResponse*>(
            &_ExecuteDeviceSpecificCommandResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 22;
    friend void swap(ExecuteDeviceSpecificCommandResponse& a,
                     ExecuteDeviceSpecificCommandResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(ExecuteDeviceSpecificCommandResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(ExecuteDeviceSpecificCommandResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    ExecuteDeviceSpecificCommandResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            ExecuteDeviceSpecificCommandResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const ExecuteDeviceSpecificCommandResponse& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const ExecuteDeviceSpecificCommandResponse& from)
    {
        ExecuteDeviceSpecificCommandResponse::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(ExecuteDeviceSpecificCommandResponse* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1."
               "ExecuteDeviceSpecificCommandResponse";
    }

   protected:
    explicit ExecuteDeviceSpecificCommandResponse(
        ::google::protobuf::Arena* arena);
    ExecuteDeviceSpecificCommandResponse(
        ::google::protobuf::Arena* arena,
        const ExecuteDeviceSpecificCommandResponse& from);
    ExecuteDeviceSpecificCommandResponse(
        ::google::protobuf::Arena* arena,
        ExecuteDeviceSpecificCommandResponse&& from) noexcept
        : ExecuteDeviceSpecificCommandResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kCommandResultFieldNumber = 1,
    };
    // .google.protobuf.Struct command_result = 1;
    bool has_command_result() const;
    void clear_command_result();
    const ::google::protobuf::Struct& command_result() const;
    PROTOBUF_NODISCARD ::google::protobuf::Struct* release_command_result();
    ::google::protobuf::Struct* mutable_command_result();
    void set_allocated_command_result(::google::protobuf::Struct* value);
    void unsafe_arena_set_allocated_command_result(
        ::google::protobuf::Struct* value);
    ::google::protobuf::Struct* unsafe_arena_release_command_result();

   private:
    const ::google::protobuf::Struct& _internal_command_result() const;
    ::google::protobuf::Struct* _internal_mutable_command_result();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_ExecuteDeviceSpecificCommandResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const ExecuteDeviceSpecificCommandResponse& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::google::protobuf::Struct* command_result_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeviceSpecificCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand)
 */
{
   public:
    inline DeviceSpecificCommand() : DeviceSpecificCommand(nullptr) {}
    ~DeviceSpecificCommand() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeviceSpecificCommand(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeviceSpecificCommand(const DeviceSpecificCommand& from)
        : DeviceSpecificCommand(nullptr, from)
    {}
    inline DeviceSpecificCommand(DeviceSpecificCommand&& from) noexcept
        : DeviceSpecificCommand(nullptr, std::move(from))
    {}
    inline DeviceSpecificCommand& operator=(const DeviceSpecificCommand& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeviceSpecificCommand& operator=(
        DeviceSpecificCommand&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeviceSpecificCommand& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeviceSpecificCommand* internal_default_instance()
    {
        return reinterpret_cast<const DeviceSpecificCommand*>(
            &_DeviceSpecificCommand_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 20;
    friend void swap(DeviceSpecificCommand& a, DeviceSpecificCommand& b)
    {
        a.Swap(&b);
    }
    inline void Swap(DeviceSpecificCommand* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeviceSpecificCommand* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeviceSpecificCommand* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            DeviceSpecificCommand>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const DeviceSpecificCommand& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const DeviceSpecificCommand& from)
    {
        DeviceSpecificCommand::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(DeviceSpecificCommand* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeviceSpecificCommand";
    }

   protected:
    explicit DeviceSpecificCommand(::google::protobuf::Arena* arena);
    DeviceSpecificCommand(::google::protobuf::Arena* arena,
                          const DeviceSpecificCommand& from);
    DeviceSpecificCommand(::google::protobuf::Arena* arena,
                          DeviceSpecificCommand&& from) noexcept
        : DeviceSpecificCommand(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kTypeFieldNumber = 2,
        kParameterFieldNumber = 3,
    };
    // string type = 2 [(.google.api.field_behavior) = REQUIRED];
    void clear_type();
    const std::string& type() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_type(Arg_&& arg, Args_... args);
    std::string* mutable_type();
    PROTOBUF_NODISCARD std::string* release_type();
    void set_allocated_type(std::string* value);

   private:
    const std::string& _internal_type() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
        const std::string& value);
    std::string* _internal_mutable_type();

   public:
    // .google.protobuf.Struct parameter = 3 [(.google.api.field_behavior) =
    // REQUIRED];
    bool has_parameter() const;
    void clear_parameter();
    const ::google::protobuf::Struct& parameter() const;
    PROTOBUF_NODISCARD ::google::protobuf::Struct* release_parameter();
    ::google::protobuf::Struct* mutable_parameter();
    void set_allocated_parameter(::google::protobuf::Struct* value);
    void unsafe_arena_set_allocated_parameter(
        ::google::protobuf::Struct* value);
    ::google::protobuf::Struct* unsafe_arena_release_parameter();

   private:
    const ::google::protobuf::Struct& _internal_parameter() const;
    ::google::protobuf::Struct* _internal_mutable_parameter();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 66, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeviceSpecificCommand_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeviceSpecificCommand& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr type_;
        ::google::protobuf::Struct* parameter_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeviceParameter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeviceParameter)
 */
{
   public:
    inline DeviceParameter() : DeviceParameter(nullptr) {}
    ~DeviceParameter() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeviceParameter(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeviceParameter(const DeviceParameter& from)
        : DeviceParameter(nullptr, from)
    {}
    inline DeviceParameter(DeviceParameter&& from) noexcept
        : DeviceParameter(nullptr, std::move(from))
    {}
    inline DeviceParameter& operator=(const DeviceParameter& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeviceParameter& operator=(DeviceParameter&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeviceParameter& default_instance()
    {
        return *internal_default_instance();
    }
    enum ParameterTypeCase
    {
        kNumeric = 101,
        kChoice = 102,
        PARAMETER_TYPE_NOT_SET = 0,
    };
    static inline const DeviceParameter* internal_default_instance()
    {
        return reinterpret_cast<const DeviceParameter*>(
            &_DeviceParameter_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 4;
    friend void swap(DeviceParameter& a, DeviceParameter& b) { a.Swap(&b); }
    inline void Swap(DeviceParameter* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeviceParameter* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeviceParameter* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<DeviceParameter>(
            arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const DeviceParameter& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const DeviceParameter& from)
    {
        DeviceParameter::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(DeviceParameter* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeviceParameter";
    }

   protected:
    explicit DeviceParameter(::google::protobuf::Arena* arena);
    DeviceParameter(::google::protobuf::Arena* arena,
                    const DeviceParameter& from);
    DeviceParameter(::google::protobuf::Arena* arena,
                    DeviceParameter&& from) noexcept
        : DeviceParameter(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------
    using NumericType = DeviceParameter_NumericType;
    using ChoiceType = DeviceParameter_ChoiceType;

    // accessors -------------------------------------------------------
    enum : int
    {
        kIdFieldNumber = 1,
        kDisplayNameFieldNumber = 2,
        kCurrentValueFieldNumber = 3,
        kDefaultValueFieldNumber = 4,
        kParameterSyncKeyFieldNumber = 5,
        kNumericFieldNumber = 101,
        kChoiceFieldNumber = 102,
    };
    // string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
    void clear_id();
    const std::string& id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_id(Arg_&& arg, Args_... args);
    std::string* mutable_id();
    PROTOBUF_NODISCARD std::string* release_id();
    void set_allocated_id(std::string* value);

   private:
    const std::string& _internal_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
        const std::string& value);
    std::string* _internal_mutable_id();

   public:
    // string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
    void clear_display_name();
    const std::string& display_name() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_display_name(Arg_&& arg, Args_... args);
    std::string* mutable_display_name();
    PROTOBUF_NODISCARD std::string* release_display_name();
    void set_allocated_display_name(std::string* value);

   private:
    const std::string& _internal_display_name() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_display_name(
        const std::string& value);
    std::string* _internal_mutable_display_name();

   public:
    // string current_value = 3 [(.google.api.field_behavior) = OPTIONAL];
    void clear_current_value();
    const std::string& current_value() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_current_value(Arg_&& arg, Args_... args);
    std::string* mutable_current_value();
    PROTOBUF_NODISCARD std::string* release_current_value();
    void set_allocated_current_value(std::string* value);

   private:
    const std::string& _internal_current_value() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_current_value(
        const std::string& value);
    std::string* _internal_mutable_current_value();

   public:
    // string default_value = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
    void clear_default_value();
    const std::string& default_value() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_default_value(Arg_&& arg, Args_... args);
    std::string* mutable_default_value();
    PROTOBUF_NODISCARD std::string* release_default_value();
    void set_allocated_default_value(std::string* value);

   private:
    const std::string& _internal_default_value() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_value(
        const std::string& value);
    std::string* _internal_mutable_default_value();

   public:
    // string parameter_sync_key = 5 [(.google.api.field_behavior) =
    // OUTPUT_ONLY];
    void clear_parameter_sync_key();
    const std::string& parameter_sync_key() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parameter_sync_key(Arg_&& arg, Args_... args);
    std::string* mutable_parameter_sync_key();
    PROTOBUF_NODISCARD std::string* release_parameter_sync_key();
    void set_allocated_parameter_sync_key(std::string* value);

   private:
    const std::string& _internal_parameter_sync_key() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_parameter_sync_key(
        const std::string& value);
    std::string* _internal_mutable_parameter_sync_key();

   public:
    // .novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType numeric =
    // 101;
    bool has_numeric() const;

   private:
    bool _internal_has_numeric() const;

   public:
    void clear_numeric();
    const ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType&
    numeric() const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::
        DeviceParameter_NumericType*
        release_numeric();
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
    mutable_numeric();
    void set_allocated_numeric(
        ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
            value);
    void unsafe_arena_set_allocated_numeric(
        ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
            value);
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
    unsafe_arena_release_numeric();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType&
    _internal_numeric() const;
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
    _internal_mutable_numeric();

   public:
    // .novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType choice = 102;
    bool has_choice() const;

   private:
    bool _internal_has_choice() const;

   public:
    void clear_choice();
    const ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType&
    choice() const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::
        DeviceParameter_ChoiceType*
        release_choice();
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType*
    mutable_choice();
    void set_allocated_choice(
        ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType* value);
    void unsafe_arena_set_allocated_choice(
        ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType* value);
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType*
    unsafe_arena_release_choice();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType&
    _internal_choice() const;
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType*
    _internal_mutable_choice();

   public:
    void clear_parameter_type();
    ParameterTypeCase parameter_type_case() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeviceParameter)
   private:
    class _Internal;
    void set_has_numeric();
    void set_has_choice();
    inline bool has_parameter_type() const;
    inline void clear_has_parameter_type();
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<3, 7, 2, 114, 7>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeviceParameter_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeviceParameter& from_msg);
        ::google::protobuf::internal::ArenaStringPtr id_;
        ::google::protobuf::internal::ArenaStringPtr display_name_;
        ::google::protobuf::internal::ArenaStringPtr current_value_;
        ::google::protobuf::internal::ArenaStringPtr default_value_;
        ::google::protobuf::internal::ArenaStringPtr parameter_sync_key_;
        union ParameterTypeUnion
        {
            constexpr ParameterTypeUnion() : _constinit_{} {}
            ::google::protobuf::internal::ConstantInitialized _constinit_;
            ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
                numeric_;
            ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType*
                choice_;
        } parameter_type_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::uint32_t _oneof_case_[1];
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class BatchSetParameterValuesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesRequest)
 */
{
   public:
    inline BatchSetParameterValuesRequest()
        : BatchSetParameterValuesRequest(nullptr)
    {}
    ~BatchSetParameterValuesRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR BatchSetParameterValuesRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline BatchSetParameterValuesRequest(
        const BatchSetParameterValuesRequest& from)
        : BatchSetParameterValuesRequest(nullptr, from)
    {}
    inline BatchSetParameterValuesRequest(
        BatchSetParameterValuesRequest&& from) noexcept
        : BatchSetParameterValuesRequest(nullptr, std::move(from))
    {}
    inline BatchSetParameterValuesRequest& operator=(
        const BatchSetParameterValuesRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline BatchSetParameterValuesRequest& operator=(
        BatchSetParameterValuesRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const BatchSetParameterValuesRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const BatchSetParameterValuesRequest*
    internal_default_instance()
    {
        return reinterpret_cast<const BatchSetParameterValuesRequest*>(
            &_BatchSetParameterValuesRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 18;
    friend void swap(BatchSetParameterValuesRequest& a,
                     BatchSetParameterValuesRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(BatchSetParameterValuesRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(BatchSetParameterValuesRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    BatchSetParameterValuesRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            BatchSetParameterValuesRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const BatchSetParameterValuesRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const BatchSetParameterValuesRequest& from)
    {
        BatchSetParameterValuesRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(BatchSetParameterValuesRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.BatchSetParameterValuesRequest";
    }

   protected:
    explicit BatchSetParameterValuesRequest(::google::protobuf::Arena* arena);
    BatchSetParameterValuesRequest(::google::protobuf::Arena* arena,
                                   const BatchSetParameterValuesRequest& from);
    BatchSetParameterValuesRequest(
        ::google::protobuf::Arena* arena,
        BatchSetParameterValuesRequest&& from) noexcept
        : BatchSetParameterValuesRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kRequestsFieldNumber = 1,
    };
    // repeated .novonotes.audio_engine.v1alpha1.SetParameterValueRequest
    // requests = 1 [(.google.api.field_behavior) = REQUIRED];
    int requests_size() const;

   private:
    int _internal_requests_size() const;

   public:
    void clear_requests();
    ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest*
    mutable_requests(int index);
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>*
    mutable_requests();

   private:
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>&
    _internal_requests() const;
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>*
    _internal_mutable_requests();

   public:
    const ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest&
    requests(int index) const;
    ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest*
    add_requests();
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>&
    requests() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_BatchSetParameterValuesRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const BatchSetParameterValuesRequest& from_msg);
        ::google::protobuf::RepeatedPtrField<
            ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>
            requests_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class ExecuteDeviceSpecificCommandRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest)
 */
{
   public:
    inline ExecuteDeviceSpecificCommandRequest()
        : ExecuteDeviceSpecificCommandRequest(nullptr)
    {}
    ~ExecuteDeviceSpecificCommandRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR ExecuteDeviceSpecificCommandRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline ExecuteDeviceSpecificCommandRequest(
        const ExecuteDeviceSpecificCommandRequest& from)
        : ExecuteDeviceSpecificCommandRequest(nullptr, from)
    {}
    inline ExecuteDeviceSpecificCommandRequest(
        ExecuteDeviceSpecificCommandRequest&& from) noexcept
        : ExecuteDeviceSpecificCommandRequest(nullptr, std::move(from))
    {}
    inline ExecuteDeviceSpecificCommandRequest& operator=(
        const ExecuteDeviceSpecificCommandRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline ExecuteDeviceSpecificCommandRequest& operator=(
        ExecuteDeviceSpecificCommandRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const ExecuteDeviceSpecificCommandRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const ExecuteDeviceSpecificCommandRequest*
    internal_default_instance()
    {
        return reinterpret_cast<const ExecuteDeviceSpecificCommandRequest*>(
            &_ExecuteDeviceSpecificCommandRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 21;
    friend void swap(ExecuteDeviceSpecificCommandRequest& a,
                     ExecuteDeviceSpecificCommandRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(ExecuteDeviceSpecificCommandRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(ExecuteDeviceSpecificCommandRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    ExecuteDeviceSpecificCommandRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            ExecuteDeviceSpecificCommandRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const ExecuteDeviceSpecificCommandRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const ExecuteDeviceSpecificCommandRequest& from)
    {
        ExecuteDeviceSpecificCommandRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(ExecuteDeviceSpecificCommandRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1."
               "ExecuteDeviceSpecificCommandRequest";
    }

   protected:
    explicit ExecuteDeviceSpecificCommandRequest(
        ::google::protobuf::Arena* arena);
    ExecuteDeviceSpecificCommandRequest(
        ::google::protobuf::Arena* arena,
        const ExecuteDeviceSpecificCommandRequest& from);
    ExecuteDeviceSpecificCommandRequest(
        ::google::protobuf::Arena* arena,
        ExecuteDeviceSpecificCommandRequest&& from) noexcept
        : ExecuteDeviceSpecificCommandRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceIdFieldNumber = 1,
        kCommandFieldNumber = 2,
    };
    // string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
    void clear_device_instance_id();
    const std::string& device_instance_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_device_instance_id(Arg_&& arg, Args_... args);
    std::string* mutable_device_instance_id();
    PROTOBUF_NODISCARD std::string* release_device_instance_id();
    void set_allocated_device_instance_id(std::string* value);

   private:
    const std::string& _internal_device_instance_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_instance_id(
        const std::string& value);
    std::string* _internal_mutable_device_instance_id();

   public:
    // .novonotes.audio_engine.v1alpha1.DeviceSpecificCommand command = 2
    // [(.google.api.field_behavior) = REQUIRED];
    bool has_command() const;
    void clear_command();
    const ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand& command()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::
        DeviceSpecificCommand*
        release_command();
    ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*
    mutable_command();
    void set_allocated_command(
        ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* value);
    void unsafe_arena_set_allocated_command(
        ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* value);
    ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*
    unsafe_arena_release_command();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand&
    _internal_command() const;
    ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*
    _internal_mutable_command();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 94, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_ExecuteDeviceSpecificCommandRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const ExecuteDeviceSpecificCommandRequest& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr device_instance_id_;
        ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* command_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeviceInstance_ParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          DeviceInstance_ParametersEntry_DoNotUse, std::string,
          ::novonotes::audio_engine::v1alpha1::DeviceParameter,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
{
   public:
    using SuperType = ::google::protobuf::internal::MapEntry<
        DeviceInstance_ParametersEntry_DoNotUse, std::string,
        ::novonotes::audio_engine::v1alpha1::DeviceParameter,
        ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
        ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
    DeviceInstance_ParametersEntry_DoNotUse();
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeviceInstance_ParametersEntry_DoNotUse(
        ::google::protobuf::internal::ConstantInitialized);
    explicit DeviceInstance_ParametersEntry_DoNotUse(
        ::google::protobuf::Arena* arena);
    static const DeviceInstance_ParametersEntry_DoNotUse*
    internal_default_instance()
    {
        return reinterpret_cast<const DeviceInstance_ParametersEntry_DoNotUse*>(
            &_DeviceInstance_ParametersEntry_DoNotUse_default_instance_);
    }

   private:
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 74, 2>
        _table_;

    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class DeviceInstance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeviceInstance)
 */
{
   public:
    inline DeviceInstance() : DeviceInstance(nullptr) {}
    ~DeviceInstance() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeviceInstance(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeviceInstance(const DeviceInstance& from)
        : DeviceInstance(nullptr, from)
    {}
    inline DeviceInstance(DeviceInstance&& from) noexcept
        : DeviceInstance(nullptr, std::move(from))
    {}
    inline DeviceInstance& operator=(const DeviceInstance& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeviceInstance& operator=(DeviceInstance&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeviceInstance& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeviceInstance* internal_default_instance()
    {
        return reinterpret_cast<const DeviceInstance*>(
            &_DeviceInstance_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 1;
    friend void swap(DeviceInstance& a, DeviceInstance& b) { a.Swap(&b); }
    inline void Swap(DeviceInstance* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeviceInstance* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeviceInstance* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<DeviceInstance>(
            arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const DeviceInstance& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const DeviceInstance& from)
    {
        DeviceInstance::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(DeviceInstance* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeviceInstance";
    }

   protected:
    explicit DeviceInstance(::google::protobuf::Arena* arena);
    DeviceInstance(::google::protobuf::Arena* arena,
                   const DeviceInstance& from);
    DeviceInstance(::google::protobuf::Arena* arena,
                   DeviceInstance&& from) noexcept
        : DeviceInstance(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kParametersFieldNumber = 4,
        kInletsFieldNumber = 5,
        kOutletsFieldNumber = 6,
        kIdFieldNumber = 1,
        kDeviceTypeIdFieldNumber = 2,
        kStateRestorationTokenFieldNumber = 3,
    };
    // map<string, .novonotes.audio_engine.v1alpha1.DeviceParameter> parameters
    // = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
    int parameters_size() const;

   private:
    int _internal_parameters_size() const;

   public:
    void clear_parameters();
    const ::google::protobuf::Map<
        std::string, ::novonotes::audio_engine::v1alpha1::DeviceParameter>&
    parameters() const;
    ::google::protobuf::Map<
        std::string, ::novonotes::audio_engine::v1alpha1::DeviceParameter>*
    mutable_parameters();

   private:
    const ::google::protobuf::Map<
        std::string, ::novonotes::audio_engine::v1alpha1::DeviceParameter>&
    _internal_parameters() const;
    ::google::protobuf::Map<
        std::string, ::novonotes::audio_engine::v1alpha1::DeviceParameter>*
    _internal_mutable_parameters();

   public:
    // repeated .novonotes.audio_engine.v1alpha1.DeviceIo inlets = 5
    // [(.google.api.field_behavior) = OUTPUT_ONLY];
    int inlets_size() const;

   private:
    int _internal_inlets_size() const;

   public:
    void clear_inlets();
    ::novonotes::audio_engine::v1alpha1::DeviceIo* mutable_inlets(int index);
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::DeviceIo>*
    mutable_inlets();

   private:
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::DeviceIo>&
    _internal_inlets() const;
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::DeviceIo>*
    _internal_mutable_inlets();

   public:
    const ::novonotes::audio_engine::v1alpha1::DeviceIo& inlets(
        int index) const;
    ::novonotes::audio_engine::v1alpha1::DeviceIo* add_inlets();
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::DeviceIo>&
    inlets() const;
    // repeated .novonotes.audio_engine.v1alpha1.DeviceIo outlets = 6
    // [(.google.api.field_behavior) = OUTPUT_ONLY];
    int outlets_size() const;

   private:
    int _internal_outlets_size() const;

   public:
    void clear_outlets();
    ::novonotes::audio_engine::v1alpha1::DeviceIo* mutable_outlets(int index);
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::DeviceIo>*
    mutable_outlets();

   private:
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::DeviceIo>&
    _internal_outlets() const;
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::DeviceIo>*
    _internal_mutable_outlets();

   public:
    const ::novonotes::audio_engine::v1alpha1::DeviceIo& outlets(
        int index) const;
    ::novonotes::audio_engine::v1alpha1::DeviceIo* add_outlets();
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::DeviceIo>&
    outlets() const;
    // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
    // (.google.api.field_behavior) = REQUIRED];
    void clear_id();
    const std::string& id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_id(Arg_&& arg, Args_... args);
    std::string* mutable_id();
    PROTOBUF_NODISCARD std::string* release_id();
    void set_allocated_id(std::string* value);

   private:
    const std::string& _internal_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
        const std::string& value);
    std::string* _internal_mutable_id();

   public:
    // string device_type_id = 2 [(.google.api.field_behavior) = REQUIRED];
    void clear_device_type_id();
    const std::string& device_type_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_device_type_id(Arg_&& arg, Args_... args);
    std::string* mutable_device_type_id();
    PROTOBUF_NODISCARD std::string* release_device_type_id();
    void set_allocated_device_type_id(std::string* value);

   private:
    const std::string& _internal_device_type_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_type_id(
        const std::string& value);
    std::string* _internal_mutable_device_type_id();

   public:
    // string state_restoration_token = 3 [(.google.api.field_behavior) =
    // OUTPUT_ONLY];
    void clear_state_restoration_token();
    const std::string& state_restoration_token() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_state_restoration_token(Arg_&& arg, Args_... args);
    std::string* mutable_state_restoration_token();
    PROTOBUF_NODISCARD std::string* release_state_restoration_token();
    void set_allocated_state_restoration_token(std::string* value);

   private:
    const std::string& _internal_state_restoration_token() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_restoration_token(
        const std::string& value);
    std::string* _internal_mutable_state_restoration_token();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeviceInstance)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<3, 6, 4, 104, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeviceInstance_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeviceInstance& from_msg);
        ::google::protobuf::internal::MapField<
            DeviceInstance_ParametersEntry_DoNotUse, std::string,
            ::novonotes::audio_engine::v1alpha1::DeviceParameter,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
            parameters_;
        ::google::protobuf::RepeatedPtrField<
            ::novonotes::audio_engine::v1alpha1::DeviceIo>
            inlets_;
        ::google::protobuf::RepeatedPtrField<
            ::novonotes::audio_engine::v1alpha1::DeviceIo>
            outlets_;
        ::google::protobuf::internal::ArenaStringPtr id_;
        ::google::protobuf::internal::ArenaStringPtr device_type_id_;
        ::google::protobuf::internal::ArenaStringPtr state_restoration_token_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class SubscribeToDeviceInstanceUpdatesResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesResponse)
 */
{
   public:
    inline SubscribeToDeviceInstanceUpdatesResponse()
        : SubscribeToDeviceInstanceUpdatesResponse(nullptr)
    {}
    ~SubscribeToDeviceInstanceUpdatesResponse() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR SubscribeToDeviceInstanceUpdatesResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline SubscribeToDeviceInstanceUpdatesResponse(
        const SubscribeToDeviceInstanceUpdatesResponse& from)
        : SubscribeToDeviceInstanceUpdatesResponse(nullptr, from)
    {}
    inline SubscribeToDeviceInstanceUpdatesResponse(
        SubscribeToDeviceInstanceUpdatesResponse&& from) noexcept
        : SubscribeToDeviceInstanceUpdatesResponse(nullptr, std::move(from))
    {}
    inline SubscribeToDeviceInstanceUpdatesResponse& operator=(
        const SubscribeToDeviceInstanceUpdatesResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline SubscribeToDeviceInstanceUpdatesResponse& operator=(
        SubscribeToDeviceInstanceUpdatesResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const SubscribeToDeviceInstanceUpdatesResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const SubscribeToDeviceInstanceUpdatesResponse*
    internal_default_instance()
    {
        return reinterpret_cast<
            const SubscribeToDeviceInstanceUpdatesResponse*>(
            &_SubscribeToDeviceInstanceUpdatesResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 13;
    friend void swap(SubscribeToDeviceInstanceUpdatesResponse& a,
                     SubscribeToDeviceInstanceUpdatesResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(SubscribeToDeviceInstanceUpdatesResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(SubscribeToDeviceInstanceUpdatesResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    SubscribeToDeviceInstanceUpdatesResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            SubscribeToDeviceInstanceUpdatesResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const SubscribeToDeviceInstanceUpdatesResponse& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const SubscribeToDeviceInstanceUpdatesResponse& from)
    {
        SubscribeToDeviceInstanceUpdatesResponse::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(SubscribeToDeviceInstanceUpdatesResponse* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1."
               "SubscribeToDeviceInstanceUpdatesResponse";
    }

   protected:
    explicit SubscribeToDeviceInstanceUpdatesResponse(
        ::google::protobuf::Arena* arena);
    SubscribeToDeviceInstanceUpdatesResponse(
        ::google::protobuf::Arena* arena,
        const SubscribeToDeviceInstanceUpdatesResponse& from);
    SubscribeToDeviceInstanceUpdatesResponse(
        ::google::protobuf::Arena* arena,
        SubscribeToDeviceInstanceUpdatesResponse&& from) noexcept
        : SubscribeToDeviceInstanceUpdatesResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceFieldNumber = 1,
    };
    // .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
    bool has_device_instance() const;
    void clear_device_instance();
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance& device_instance()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    release_device_instance();
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    mutable_device_instance();
    void set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    void unsafe_arena_set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    unsafe_arena_release_device_instance();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
    _internal_device_instance() const;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    _internal_mutable_device_instance();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_SubscribeToDeviceInstanceUpdatesResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const SubscribeToDeviceInstanceUpdatesResponse& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* device_instance_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class SetParameterValueResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.SetParameterValueResponse)
 */
{
   public:
    inline SetParameterValueResponse() : SetParameterValueResponse(nullptr) {}
    ~SetParameterValueResponse() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR SetParameterValueResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline SetParameterValueResponse(const SetParameterValueResponse& from)
        : SetParameterValueResponse(nullptr, from)
    {}
    inline SetParameterValueResponse(SetParameterValueResponse&& from) noexcept
        : SetParameterValueResponse(nullptr, std::move(from))
    {}
    inline SetParameterValueResponse& operator=(
        const SetParameterValueResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline SetParameterValueResponse& operator=(
        SetParameterValueResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const SetParameterValueResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const SetParameterValueResponse* internal_default_instance()
    {
        return reinterpret_cast<const SetParameterValueResponse*>(
            &_SetParameterValueResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 17;
    friend void swap(SetParameterValueResponse& a, SetParameterValueResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(SetParameterValueResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(SetParameterValueResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    SetParameterValueResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            SetParameterValueResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const SetParameterValueResponse& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const SetParameterValueResponse& from)
    {
        SetParameterValueResponse::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(SetParameterValueResponse* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.SetParameterValueResponse";
    }

   protected:
    explicit SetParameterValueResponse(::google::protobuf::Arena* arena);
    SetParameterValueResponse(::google::protobuf::Arena* arena,
                              const SetParameterValueResponse& from);
    SetParameterValueResponse(::google::protobuf::Arena* arena,
                              SetParameterValueResponse&& from) noexcept
        : SetParameterValueResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceFieldNumber = 1,
    };
    // .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
    bool has_device_instance() const;
    void clear_device_instance();
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance& device_instance()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    release_device_instance();
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    mutable_device_instance();
    void set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    void unsafe_arena_set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    unsafe_arena_release_device_instance();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
    _internal_device_instance() const;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    _internal_mutable_device_instance();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.SetParameterValueResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_SetParameterValueResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const SetParameterValueResponse& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* device_instance_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class RestoreDeviceInstanceStateResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateResponse)
 */
{
   public:
    inline RestoreDeviceInstanceStateResponse()
        : RestoreDeviceInstanceStateResponse(nullptr)
    {}
    ~RestoreDeviceInstanceStateResponse() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RestoreDeviceInstanceStateResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline RestoreDeviceInstanceStateResponse(
        const RestoreDeviceInstanceStateResponse& from)
        : RestoreDeviceInstanceStateResponse(nullptr, from)
    {}
    inline RestoreDeviceInstanceStateResponse(
        RestoreDeviceInstanceStateResponse&& from) noexcept
        : RestoreDeviceInstanceStateResponse(nullptr, std::move(from))
    {}
    inline RestoreDeviceInstanceStateResponse& operator=(
        const RestoreDeviceInstanceStateResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RestoreDeviceInstanceStateResponse& operator=(
        RestoreDeviceInstanceStateResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RestoreDeviceInstanceStateResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const RestoreDeviceInstanceStateResponse*
    internal_default_instance()
    {
        return reinterpret_cast<const RestoreDeviceInstanceStateResponse*>(
            &_RestoreDeviceInstanceStateResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 15;
    friend void swap(RestoreDeviceInstanceStateResponse& a,
                     RestoreDeviceInstanceStateResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(RestoreDeviceInstanceStateResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RestoreDeviceInstanceStateResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RestoreDeviceInstanceStateResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            RestoreDeviceInstanceStateResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RestoreDeviceInstanceStateResponse& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RestoreDeviceInstanceStateResponse& from)
    {
        RestoreDeviceInstanceStateResponse::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RestoreDeviceInstanceStateResponse* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1."
               "RestoreDeviceInstanceStateResponse";
    }

   protected:
    explicit RestoreDeviceInstanceStateResponse(
        ::google::protobuf::Arena* arena);
    RestoreDeviceInstanceStateResponse(
        ::google::protobuf::Arena* arena,
        const RestoreDeviceInstanceStateResponse& from);
    RestoreDeviceInstanceStateResponse(
        ::google::protobuf::Arena* arena,
        RestoreDeviceInstanceStateResponse&& from) noexcept
        : RestoreDeviceInstanceStateResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceFieldNumber = 1,
    };
    // .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
    bool has_device_instance() const;
    void clear_device_instance();
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance& device_instance()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    release_device_instance();
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    mutable_device_instance();
    void set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    void unsafe_arena_set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    unsafe_arena_release_device_instance();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
    _internal_device_instance() const;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    _internal_mutable_device_instance();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RestoreDeviceInstanceStateResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RestoreDeviceInstanceStateResponse& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* device_instance_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class GetDeviceInstanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.GetDeviceInstanceResponse)
 */
{
   public:
    inline GetDeviceInstanceResponse() : GetDeviceInstanceResponse(nullptr) {}
    ~GetDeviceInstanceResponse() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR GetDeviceInstanceResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline GetDeviceInstanceResponse(const GetDeviceInstanceResponse& from)
        : GetDeviceInstanceResponse(nullptr, from)
    {}
    inline GetDeviceInstanceResponse(GetDeviceInstanceResponse&& from) noexcept
        : GetDeviceInstanceResponse(nullptr, std::move(from))
    {}
    inline GetDeviceInstanceResponse& operator=(
        const GetDeviceInstanceResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline GetDeviceInstanceResponse& operator=(
        GetDeviceInstanceResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const GetDeviceInstanceResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const GetDeviceInstanceResponse* internal_default_instance()
    {
        return reinterpret_cast<const GetDeviceInstanceResponse*>(
            &_GetDeviceInstanceResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 11;
    friend void swap(GetDeviceInstanceResponse& a, GetDeviceInstanceResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(GetDeviceInstanceResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(GetDeviceInstanceResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    GetDeviceInstanceResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            GetDeviceInstanceResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const GetDeviceInstanceResponse& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const GetDeviceInstanceResponse& from)
    {
        GetDeviceInstanceResponse::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(GetDeviceInstanceResponse* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.GetDeviceInstanceResponse";
    }

   protected:
    explicit GetDeviceInstanceResponse(::google::protobuf::Arena* arena);
    GetDeviceInstanceResponse(::google::protobuf::Arena* arena,
                              const GetDeviceInstanceResponse& from);
    GetDeviceInstanceResponse(::google::protobuf::Arena* arena,
                              GetDeviceInstanceResponse&& from) noexcept
        : GetDeviceInstanceResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceFieldNumber = 1,
    };
    // .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
    bool has_device_instance() const;
    void clear_device_instance();
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance& device_instance()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    release_device_instance();
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    mutable_device_instance();
    void set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    void unsafe_arena_set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    unsafe_arena_release_device_instance();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
    _internal_device_instance() const;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    _internal_mutable_device_instance();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.GetDeviceInstanceResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_GetDeviceInstanceResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const GetDeviceInstanceResponse& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* device_instance_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class CreateDeviceInstanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceResponse)
 */
{
   public:
    inline CreateDeviceInstanceResponse()
        : CreateDeviceInstanceResponse(nullptr)
    {}
    ~CreateDeviceInstanceResponse() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR CreateDeviceInstanceResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline CreateDeviceInstanceResponse(
        const CreateDeviceInstanceResponse& from)
        : CreateDeviceInstanceResponse(nullptr, from)
    {}
    inline CreateDeviceInstanceResponse(
        CreateDeviceInstanceResponse&& from) noexcept
        : CreateDeviceInstanceResponse(nullptr, std::move(from))
    {}
    inline CreateDeviceInstanceResponse& operator=(
        const CreateDeviceInstanceResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline CreateDeviceInstanceResponse& operator=(
        CreateDeviceInstanceResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const CreateDeviceInstanceResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const CreateDeviceInstanceResponse*
    internal_default_instance()
    {
        return reinterpret_cast<const CreateDeviceInstanceResponse*>(
            &_CreateDeviceInstanceResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 7;
    friend void swap(CreateDeviceInstanceResponse& a,
                     CreateDeviceInstanceResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(CreateDeviceInstanceResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(CreateDeviceInstanceResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    CreateDeviceInstanceResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            CreateDeviceInstanceResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const CreateDeviceInstanceResponse& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const CreateDeviceInstanceResponse& from)
    {
        CreateDeviceInstanceResponse::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(CreateDeviceInstanceResponse* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.CreateDeviceInstanceResponse";
    }

   protected:
    explicit CreateDeviceInstanceResponse(::google::protobuf::Arena* arena);
    CreateDeviceInstanceResponse(::google::protobuf::Arena* arena,
                                 const CreateDeviceInstanceResponse& from);
    CreateDeviceInstanceResponse(::google::protobuf::Arena* arena,
                                 CreateDeviceInstanceResponse&& from) noexcept
        : CreateDeviceInstanceResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceFieldNumber = 1,
    };
    // .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
    bool has_device_instance() const;
    void clear_device_instance();
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance& device_instance()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    release_device_instance();
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    mutable_device_instance();
    void set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    void unsafe_arena_set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    unsafe_arena_release_device_instance();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
    _internal_device_instance() const;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    _internal_mutable_device_instance();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_CreateDeviceInstanceResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const CreateDeviceInstanceResponse& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* device_instance_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class CreateDeviceInstanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceRequest)
 */
{
   public:
    inline CreateDeviceInstanceRequest() : CreateDeviceInstanceRequest(nullptr)
    {}
    ~CreateDeviceInstanceRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR CreateDeviceInstanceRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline CreateDeviceInstanceRequest(const CreateDeviceInstanceRequest& from)
        : CreateDeviceInstanceRequest(nullptr, from)
    {}
    inline CreateDeviceInstanceRequest(
        CreateDeviceInstanceRequest&& from) noexcept
        : CreateDeviceInstanceRequest(nullptr, std::move(from))
    {}
    inline CreateDeviceInstanceRequest& operator=(
        const CreateDeviceInstanceRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline CreateDeviceInstanceRequest& operator=(
        CreateDeviceInstanceRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const CreateDeviceInstanceRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const CreateDeviceInstanceRequest* internal_default_instance()
    {
        return reinterpret_cast<const CreateDeviceInstanceRequest*>(
            &_CreateDeviceInstanceRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 6;
    friend void swap(CreateDeviceInstanceRequest& a,
                     CreateDeviceInstanceRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(CreateDeviceInstanceRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(CreateDeviceInstanceRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    CreateDeviceInstanceRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            CreateDeviceInstanceRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const CreateDeviceInstanceRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const CreateDeviceInstanceRequest& from)
    {
        CreateDeviceInstanceRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(CreateDeviceInstanceRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.CreateDeviceInstanceRequest";
    }

   protected:
    explicit CreateDeviceInstanceRequest(::google::protobuf::Arena* arena);
    CreateDeviceInstanceRequest(::google::protobuf::Arena* arena,
                                const CreateDeviceInstanceRequest& from);
    CreateDeviceInstanceRequest(::google::protobuf::Arena* arena,
                                CreateDeviceInstanceRequest&& from) noexcept
        : CreateDeviceInstanceRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDeviceInstanceFieldNumber = 1,
    };
    // .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1
    // [(.google.api.field_behavior) = REQUIRED];
    bool has_device_instance() const;
    void clear_device_instance();
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance& device_instance()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    release_device_instance();
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    mutable_device_instance();
    void set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    void unsafe_arena_set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value);
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    unsafe_arena_release_device_instance();

   private:
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
    _internal_device_instance() const;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance*
    _internal_mutable_device_instance();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_CreateDeviceInstanceRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const CreateDeviceInstanceRequest& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* device_instance_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};
// -------------------------------------------------------------------

class BatchSetParameterValuesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesResponse)
 */
{
   public:
    inline BatchSetParameterValuesResponse()
        : BatchSetParameterValuesResponse(nullptr)
    {}
    ~BatchSetParameterValuesResponse() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR BatchSetParameterValuesResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline BatchSetParameterValuesResponse(
        const BatchSetParameterValuesResponse& from)
        : BatchSetParameterValuesResponse(nullptr, from)
    {}
    inline BatchSetParameterValuesResponse(
        BatchSetParameterValuesResponse&& from) noexcept
        : BatchSetParameterValuesResponse(nullptr, std::move(from))
    {}
    inline BatchSetParameterValuesResponse& operator=(
        const BatchSetParameterValuesResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline BatchSetParameterValuesResponse& operator=(
        BatchSetParameterValuesResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const BatchSetParameterValuesResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const BatchSetParameterValuesResponse*
    internal_default_instance()
    {
        return reinterpret_cast<const BatchSetParameterValuesResponse*>(
            &_BatchSetParameterValuesResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 19;
    friend void swap(BatchSetParameterValuesResponse& a,
                     BatchSetParameterValuesResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(BatchSetParameterValuesResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(BatchSetParameterValuesResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    BatchSetParameterValuesResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            BatchSetParameterValuesResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const BatchSetParameterValuesResponse& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const BatchSetParameterValuesResponse& from)
    {
        BatchSetParameterValuesResponse::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(BatchSetParameterValuesResponse* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1."
               "BatchSetParameterValuesResponse";
    }

   protected:
    explicit BatchSetParameterValuesResponse(::google::protobuf::Arena* arena);
    BatchSetParameterValuesResponse(
        ::google::protobuf::Arena* arena,
        const BatchSetParameterValuesResponse& from);
    BatchSetParameterValuesResponse(
        ::google::protobuf::Arena* arena,
        BatchSetParameterValuesResponse&& from) noexcept
        : BatchSetParameterValuesResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kResponsesFieldNumber = 1,
    };
    // repeated .novonotes.audio_engine.v1alpha1.SetParameterValueResponse
    // responses = 1;
    int responses_size() const;

   private:
    int _internal_responses_size() const;

   public:
    void clear_responses();
    ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse*
    mutable_responses(int index);
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>*
    mutable_responses();

   private:
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>&
    _internal_responses() const;
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>*
    _internal_mutable_responses();

   public:
    const ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse&
    responses(int index) const;
    ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse*
    add_responses();
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>&
    responses() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_BatchSetParameterValuesResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const BatchSetParameterValuesResponse& from_msg);
        ::google::protobuf::RepeatedPtrField<
            ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>
            responses_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto;
};

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DeviceInstance

// string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
// (.google.api.field_behavior) = REQUIRED];
inline void DeviceInstance::clear_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.ClearToEmpty();
}
inline const std::string& DeviceInstance::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceInstance.id)
    return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceInstance::set_id(Arg_&& arg,
                                                          Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceInstance.id)
}
inline std::string* DeviceInstance::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceInstance.id)
    return _s;
}
inline const std::string& DeviceInstance::_internal_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.id_.Get();
}
inline void DeviceInstance::_internal_set_id(const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.Set(value, GetArena());
}
inline std::string* DeviceInstance::_internal_mutable_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.id_.Mutable(GetArena());
}
inline std::string* DeviceInstance::release_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceInstance.id)
    return _impl_.id_.Release();
}
inline void DeviceInstance::set_allocated_id(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.id_.IsDefault())
    {
        _impl_.id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceInstance.id)
}

// string device_type_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void DeviceInstance::clear_device_type_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_type_id_.ClearToEmpty();
}
inline const std::string& DeviceInstance::device_type_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceInstance.device_type_id)
    return _internal_device_type_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceInstance::set_device_type_id(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_type_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceInstance.device_type_id)
}
inline std::string* DeviceInstance::mutable_device_type_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_device_type_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceInstance.device_type_id)
    return _s;
}
inline const std::string& DeviceInstance::_internal_device_type_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.device_type_id_.Get();
}
inline void DeviceInstance::_internal_set_device_type_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_type_id_.Set(value, GetArena());
}
inline std::string* DeviceInstance::_internal_mutable_device_type_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.device_type_id_.Mutable(GetArena());
}
inline std::string* DeviceInstance::release_device_type_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceInstance.device_type_id)
    return _impl_.device_type_id_.Release();
}
inline void DeviceInstance::set_allocated_device_type_id(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_type_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.device_type_id_.IsDefault())
    {
        _impl_.device_type_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceInstance.device_type_id)
}

// string state_restoration_token = 3 [(.google.api.field_behavior) =
// OUTPUT_ONLY];
inline void DeviceInstance::clear_state_restoration_token()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_restoration_token_.ClearToEmpty();
}
inline const std::string& DeviceInstance::state_restoration_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceInstance.state_restoration_token)
    return _internal_state_restoration_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceInstance::set_state_restoration_token(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_restoration_token_.Set(static_cast<Arg_&&>(arg), args...,
                                        GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceInstance.state_restoration_token)
}
inline std::string* DeviceInstance::mutable_state_restoration_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_state_restoration_token();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceInstance.state_restoration_token)
    return _s;
}
inline const std::string& DeviceInstance::_internal_state_restoration_token()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.state_restoration_token_.Get();
}
inline void DeviceInstance::_internal_set_state_restoration_token(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_restoration_token_.Set(value, GetArena());
}
inline std::string* DeviceInstance::_internal_mutable_state_restoration_token()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.state_restoration_token_.Mutable(GetArena());
}
inline std::string* DeviceInstance::release_state_restoration_token()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceInstance.state_restoration_token)
    return _impl_.state_restoration_token_.Release();
}
inline void DeviceInstance::set_allocated_state_restoration_token(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_restoration_token_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.state_restoration_token_.IsDefault())
    {
        _impl_.state_restoration_token_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceInstance.state_restoration_token)
}

// map<string, .novonotes.audio_engine.v1alpha1.DeviceParameter> parameters = 4
// [(.google.api.field_behavior) = OUTPUT_ONLY];
inline int DeviceInstance::_internal_parameters_size() const
{
    return _internal_parameters().size();
}
inline int DeviceInstance::parameters_size() const
{
    return _internal_parameters_size();
}
inline void DeviceInstance::clear_parameters()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameters_.Clear();
}
inline const ::google::protobuf::Map<
    std::string, ::novonotes::audio_engine::v1alpha1::DeviceParameter>&
DeviceInstance::_internal_parameters() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parameters_.GetMap();
}
inline const ::google::protobuf::Map<
    std::string, ::novonotes::audio_engine::v1alpha1::DeviceParameter>&
DeviceInstance::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_map:novonotes.audio_engine.v1alpha1.DeviceInstance.parameters)
    return _internal_parameters();
}
inline ::google::protobuf::Map<
    std::string, ::novonotes::audio_engine::v1alpha1::DeviceParameter>*
DeviceInstance::_internal_mutable_parameters()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.parameters_.MutableMap();
}
inline ::google::protobuf::Map<
    std::string, ::novonotes::audio_engine::v1alpha1::DeviceParameter>*
DeviceInstance::mutable_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_map:novonotes.audio_engine.v1alpha1.DeviceInstance.parameters)
    return _internal_mutable_parameters();
}

// repeated .novonotes.audio_engine.v1alpha1.DeviceIo inlets = 5
// [(.google.api.field_behavior) = OUTPUT_ONLY];
inline int DeviceInstance::_internal_inlets_size() const
{
    return _internal_inlets().size();
}
inline int DeviceInstance::inlets_size() const
{
    return _internal_inlets_size();
}
inline void DeviceInstance::clear_inlets()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.inlets_.Clear();
}
inline ::novonotes::audio_engine::v1alpha1::DeviceIo*
DeviceInstance::mutable_inlets(int index) ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceInstance.inlets)
    return _internal_mutable_inlets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::DeviceIo>*
DeviceInstance::mutable_inlets() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.DeviceInstance.inlets)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_inlets();
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceIo&
DeviceInstance::inlets(int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceInstance.inlets)
    return _internal_inlets().Get(index);
}
inline ::novonotes::audio_engine::v1alpha1::DeviceIo*
DeviceInstance::add_inlets() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::novonotes::audio_engine::v1alpha1::DeviceIo* _add =
        _internal_mutable_inlets()->Add();
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.DeviceInstance.inlets)
    return _add;
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::DeviceIo>&
DeviceInstance::inlets() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.DeviceInstance.inlets)
    return _internal_inlets();
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::DeviceIo>&
DeviceInstance::_internal_inlets() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.inlets_;
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::DeviceIo>*
DeviceInstance::_internal_mutable_inlets()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.inlets_;
}

// repeated .novonotes.audio_engine.v1alpha1.DeviceIo outlets = 6
// [(.google.api.field_behavior) = OUTPUT_ONLY];
inline int DeviceInstance::_internal_outlets_size() const
{
    return _internal_outlets().size();
}
inline int DeviceInstance::outlets_size() const
{
    return _internal_outlets_size();
}
inline void DeviceInstance::clear_outlets()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.outlets_.Clear();
}
inline ::novonotes::audio_engine::v1alpha1::DeviceIo*
DeviceInstance::mutable_outlets(int index) ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceInstance.outlets)
    return _internal_mutable_outlets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::DeviceIo>*
DeviceInstance::mutable_outlets() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.DeviceInstance.outlets)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_outlets();
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceIo&
DeviceInstance::outlets(int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceInstance.outlets)
    return _internal_outlets().Get(index);
}
inline ::novonotes::audio_engine::v1alpha1::DeviceIo*
DeviceInstance::add_outlets() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::novonotes::audio_engine::v1alpha1::DeviceIo* _add =
        _internal_mutable_outlets()->Add();
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.DeviceInstance.outlets)
    return _add;
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::DeviceIo>&
DeviceInstance::outlets() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.DeviceInstance.outlets)
    return _internal_outlets();
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::DeviceIo>&
DeviceInstance::_internal_outlets() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.outlets_;
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::DeviceIo>*
DeviceInstance::_internal_mutable_outlets()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.outlets_;
}

// -------------------------------------------------------------------

// DeviceParameter_NumericType

// double normalized_current_value = 1 [(.google.api.field_behavior) =
// OPTIONAL];
inline void DeviceParameter_NumericType::clear_normalized_current_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.normalized_current_value_ = 0;
}
inline double DeviceParameter_NumericType::normalized_current_value() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.normalized_current_value)
    return _internal_normalized_current_value();
}
inline void DeviceParameter_NumericType::set_normalized_current_value(
    double value)
{
    _internal_set_normalized_current_value(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.normalized_current_value)
}
inline double DeviceParameter_NumericType::_internal_normalized_current_value()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.normalized_current_value_;
}
inline void DeviceParameter_NumericType::_internal_set_normalized_current_value(
    double value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.normalized_current_value_ = value;
}

// double normalized_default_value = 2 [(.google.api.field_behavior) =
// OUTPUT_ONLY];
inline void DeviceParameter_NumericType::clear_normalized_default_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.normalized_default_value_ = 0;
}
inline double DeviceParameter_NumericType::normalized_default_value() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.normalized_default_value)
    return _internal_normalized_default_value();
}
inline void DeviceParameter_NumericType::set_normalized_default_value(
    double value)
{
    _internal_set_normalized_default_value(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.normalized_default_value)
}
inline double DeviceParameter_NumericType::_internal_normalized_default_value()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.normalized_default_value_;
}
inline void DeviceParameter_NumericType::_internal_set_normalized_default_value(
    double value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.normalized_default_value_ = value;
}

// string min_value = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void DeviceParameter_NumericType::clear_min_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.min_value_.ClearToEmpty();
}
inline const std::string& DeviceParameter_NumericType::min_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.min_value)
    return _internal_min_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceParameter_NumericType::set_min_value(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.min_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.min_value)
}
inline std::string* DeviceParameter_NumericType::mutable_min_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_min_value();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.min_value)
    return _s;
}
inline const std::string& DeviceParameter_NumericType::_internal_min_value()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.min_value_.Get();
}
inline void DeviceParameter_NumericType::_internal_set_min_value(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.min_value_.Set(value, GetArena());
}
inline std::string* DeviceParameter_NumericType::_internal_mutable_min_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.min_value_.Mutable(GetArena());
}
inline std::string* DeviceParameter_NumericType::release_min_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.min_value)
    return _impl_.min_value_.Release();
}
inline void DeviceParameter_NumericType::set_allocated_min_value(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.min_value_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.min_value_.IsDefault())
    {
        _impl_.min_value_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.min_value)
}

// string max_value = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void DeviceParameter_NumericType::clear_max_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.max_value_.ClearToEmpty();
}
inline const std::string& DeviceParameter_NumericType::max_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.max_value)
    return _internal_max_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceParameter_NumericType::set_max_value(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.max_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.max_value)
}
inline std::string* DeviceParameter_NumericType::mutable_max_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_max_value();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.max_value)
    return _s;
}
inline const std::string& DeviceParameter_NumericType::_internal_max_value()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.max_value_.Get();
}
inline void DeviceParameter_NumericType::_internal_set_max_value(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.max_value_.Set(value, GetArena());
}
inline std::string* DeviceParameter_NumericType::_internal_mutable_max_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.max_value_.Mutable(GetArena());
}
inline std::string* DeviceParameter_NumericType::release_max_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.max_value)
    return _impl_.max_value_.Release();
}
inline void DeviceParameter_NumericType::set_allocated_max_value(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.max_value_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.max_value_.IsDefault())
    {
        _impl_.max_value_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.max_value)
}

// int32 step_count = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void DeviceParameter_NumericType::clear_step_count()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.step_count_ = 0;
}
inline ::int32_t DeviceParameter_NumericType::step_count() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.step_count)
    return _internal_step_count();
}
inline void DeviceParameter_NumericType::set_step_count(::int32_t value)
{
    _internal_set_step_count(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType.step_count)
}
inline ::int32_t DeviceParameter_NumericType::_internal_step_count() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.step_count_;
}
inline void DeviceParameter_NumericType::_internal_set_step_count(
    ::int32_t value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.step_count_ = value;
}

// -------------------------------------------------------------------

// DeviceParameter_ChoiceType

// repeated string options = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline int DeviceParameter_ChoiceType::_internal_options_size() const
{
    return _internal_options().size();
}
inline int DeviceParameter_ChoiceType::options_size() const
{
    return _internal_options_size();
}
inline void DeviceParameter_ChoiceType::clear_options()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.options_.Clear();
}
inline std::string* DeviceParameter_ChoiceType::add_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    std::string* _s = _internal_mutable_options()->Add();
    // @@protoc_insertion_point(field_add_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType.options)
    return _s;
}
inline const std::string& DeviceParameter_ChoiceType::options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType.options)
    return _internal_options().Get(index);
}
inline std::string* DeviceParameter_ChoiceType::mutable_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType.options)
    return _internal_mutable_options()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeviceParameter_ChoiceType::set_options(int index, Arg_&& value,
                                                    Args_... args)
{
    ::google::protobuf::internal::AssignToString(
        *_internal_mutable_options()->Mutable(index), std::forward<Arg_>(value),
        args...);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType.options)
}
template <typename Arg_, typename... Args_>
inline void DeviceParameter_ChoiceType::add_options(Arg_&& value, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::google::protobuf::internal::AddToRepeatedPtrField(
        *_internal_mutable_options(), std::forward<Arg_>(value), args...);
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType.options)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceParameter_ChoiceType::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType.options)
    return _internal_options();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceParameter_ChoiceType::mutable_options() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType.options)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_options();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceParameter_ChoiceType::_internal_options() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.options_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceParameter_ChoiceType::_internal_mutable_options()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.options_;
}

// -------------------------------------------------------------------

// DeviceParameter

// string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void DeviceParameter::clear_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.ClearToEmpty();
}
inline const std::string& DeviceParameter::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.id)
    return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceParameter::set_id(Arg_&& arg,
                                                           Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.id)
}
inline std::string* DeviceParameter::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.id)
    return _s;
}
inline const std::string& DeviceParameter::_internal_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.id_.Get();
}
inline void DeviceParameter::_internal_set_id(const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.Set(value, GetArena());
}
inline std::string* DeviceParameter::_internal_mutable_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.id_.Mutable(GetArena());
}
inline std::string* DeviceParameter::release_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.id)
    return _impl_.id_.Release();
}
inline void DeviceParameter::set_allocated_id(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.id_.IsDefault())
    {
        _impl_.id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.id)
}

// string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void DeviceParameter::clear_display_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.display_name_.ClearToEmpty();
}
inline const std::string& DeviceParameter::display_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.display_name)
    return _internal_display_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceParameter::set_display_name(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.display_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.display_name)
}
inline std::string* DeviceParameter::mutable_display_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_display_name();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.display_name)
    return _s;
}
inline const std::string& DeviceParameter::_internal_display_name() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.display_name_.Get();
}
inline void DeviceParameter::_internal_set_display_name(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.display_name_.Set(value, GetArena());
}
inline std::string* DeviceParameter::_internal_mutable_display_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.display_name_.Mutable(GetArena());
}
inline std::string* DeviceParameter::release_display_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.display_name)
    return _impl_.display_name_.Release();
}
inline void DeviceParameter::set_allocated_display_name(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.display_name_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.display_name_.IsDefault())
    {
        _impl_.display_name_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.display_name)
}

// string current_value = 3 [(.google.api.field_behavior) = OPTIONAL];
inline void DeviceParameter::clear_current_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.current_value_.ClearToEmpty();
}
inline const std::string& DeviceParameter::current_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.current_value)
    return _internal_current_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceParameter::set_current_value(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.current_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.current_value)
}
inline std::string* DeviceParameter::mutable_current_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_current_value();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.current_value)
    return _s;
}
inline const std::string& DeviceParameter::_internal_current_value() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.current_value_.Get();
}
inline void DeviceParameter::_internal_set_current_value(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.current_value_.Set(value, GetArena());
}
inline std::string* DeviceParameter::_internal_mutable_current_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.current_value_.Mutable(GetArena());
}
inline std::string* DeviceParameter::release_current_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.current_value)
    return _impl_.current_value_.Release();
}
inline void DeviceParameter::set_allocated_current_value(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.current_value_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.current_value_.IsDefault())
    {
        _impl_.current_value_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.current_value)
}

// string default_value = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void DeviceParameter::clear_default_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.default_value_.ClearToEmpty();
}
inline const std::string& DeviceParameter::default_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.default_value)
    return _internal_default_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceParameter::set_default_value(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.default_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.default_value)
}
inline std::string* DeviceParameter::mutable_default_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_default_value();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.default_value)
    return _s;
}
inline const std::string& DeviceParameter::_internal_default_value() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.default_value_.Get();
}
inline void DeviceParameter::_internal_set_default_value(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.default_value_.Set(value, GetArena());
}
inline std::string* DeviceParameter::_internal_mutable_default_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.default_value_.Mutable(GetArena());
}
inline std::string* DeviceParameter::release_default_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.default_value)
    return _impl_.default_value_.Release();
}
inline void DeviceParameter::set_allocated_default_value(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.default_value_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.default_value_.IsDefault())
    {
        _impl_.default_value_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.default_value)
}

// string parameter_sync_key = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void DeviceParameter::clear_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.ClearToEmpty();
}
inline const std::string& DeviceParameter::parameter_sync_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.parameter_sync_key)
    return _internal_parameter_sync_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceParameter::set_parameter_sync_key(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceParameter.parameter_sync_key)
}
inline std::string* DeviceParameter::mutable_parameter_sync_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_parameter_sync_key();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.parameter_sync_key)
    return _s;
}
inline const std::string& DeviceParameter::_internal_parameter_sync_key() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parameter_sync_key_.Get();
}
inline void DeviceParameter::_internal_set_parameter_sync_key(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.Set(value, GetArena());
}
inline std::string* DeviceParameter::_internal_mutable_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.parameter_sync_key_.Mutable(GetArena());
}
inline std::string* DeviceParameter::release_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.parameter_sync_key)
    return _impl_.parameter_sync_key_.Release();
}
inline void DeviceParameter::set_allocated_parameter_sync_key(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.parameter_sync_key_.IsDefault())
    {
        _impl_.parameter_sync_key_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.parameter_sync_key)
}

// .novonotes.audio_engine.v1alpha1.DeviceParameter.NumericType numeric = 101;
inline bool DeviceParameter::has_numeric() const
{
    return parameter_type_case() == kNumeric;
}
inline bool DeviceParameter::_internal_has_numeric() const
{
    return parameter_type_case() == kNumeric;
}
inline void DeviceParameter::set_has_numeric()
{
    _impl_._oneof_case_[0] = kNumeric;
}
inline void DeviceParameter::clear_numeric()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(parameter_type_case() == kNumeric)
    {
        if(GetArena() == nullptr)
        {
            delete _impl_.parameter_type_.numeric_;
        }
        else if(::google::protobuf::internal::
                    DebugHardenClearOneofMessageOnArena())
        {
            ::google::protobuf::internal::MaybePoisonAfterClear(
                _impl_.parameter_type_.numeric_);
        }
        clear_has_parameter_type();
    }
}
inline ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
DeviceParameter::release_numeric()
{
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.numeric)
    if(parameter_type_case() == kNumeric)
    {
        clear_has_parameter_type();
        auto* temp = _impl_.parameter_type_.numeric_;
        if(GetArena() != nullptr)
        {
            temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
        }
        _impl_.parameter_type_.numeric_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType&
DeviceParameter::_internal_numeric() const
{
    return parameter_type_case() == kNumeric
               ? *_impl_.parameter_type_.numeric_
               : reinterpret_cast<::novonotes::audio_engine::v1alpha1::
                                      DeviceParameter_NumericType&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _DeviceParameter_NumericType_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType&
DeviceParameter::numeric() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.numeric)
    return _internal_numeric();
}
inline ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
DeviceParameter::unsafe_arena_release_numeric()
{
    // @@protoc_insertion_point(field_unsafe_arena_release:novonotes.audio_engine.v1alpha1.DeviceParameter.numeric)
    if(parameter_type_case() == kNumeric)
    {
        clear_has_parameter_type();
        auto* temp = _impl_.parameter_type_.numeric_;
        _impl_.parameter_type_.numeric_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline void DeviceParameter::unsafe_arena_set_allocated_numeric(
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType* value)
{
    // We rely on the oneof clear method to free the earlier contents
    // of this oneof. We can directly use the pointer we're given to
    // set the new value.
    clear_parameter_type();
    if(value)
    {
        set_has_numeric();
        _impl_.parameter_type_.numeric_ = value;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.numeric)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
DeviceParameter::_internal_mutable_numeric()
{
    if(parameter_type_case() != kNumeric)
    {
        clear_parameter_type();
        set_has_numeric();
        _impl_.parameter_type_
            .numeric_ = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType>(
            GetArena());
    }
    return _impl_.parameter_type_.numeric_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType*
DeviceParameter::mutable_numeric() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_NumericType* _msg =
        _internal_mutable_numeric();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.numeric)
    return _msg;
}

// .novonotes.audio_engine.v1alpha1.DeviceParameter.ChoiceType choice = 102;
inline bool DeviceParameter::has_choice() const
{
    return parameter_type_case() == kChoice;
}
inline bool DeviceParameter::_internal_has_choice() const
{
    return parameter_type_case() == kChoice;
}
inline void DeviceParameter::set_has_choice()
{
    _impl_._oneof_case_[0] = kChoice;
}
inline void DeviceParameter::clear_choice()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(parameter_type_case() == kChoice)
    {
        if(GetArena() == nullptr)
        {
            delete _impl_.parameter_type_.choice_;
        }
        else if(::google::protobuf::internal::
                    DebugHardenClearOneofMessageOnArena())
        {
            ::google::protobuf::internal::MaybePoisonAfterClear(
                _impl_.parameter_type_.choice_);
        }
        clear_has_parameter_type();
    }
}
inline ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType*
DeviceParameter::release_choice()
{
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceParameter.choice)
    if(parameter_type_case() == kChoice)
    {
        clear_has_parameter_type();
        auto* temp = _impl_.parameter_type_.choice_;
        if(GetArena() != nullptr)
        {
            temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
        }
        _impl_.parameter_type_.choice_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType&
DeviceParameter::_internal_choice() const
{
    return parameter_type_case() == kChoice
               ? *_impl_.parameter_type_.choice_
               : reinterpret_cast<::novonotes::audio_engine::v1alpha1::
                                      DeviceParameter_ChoiceType&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _DeviceParameter_ChoiceType_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType&
DeviceParameter::choice() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceParameter.choice)
    return _internal_choice();
}
inline ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType*
DeviceParameter::unsafe_arena_release_choice()
{
    // @@protoc_insertion_point(field_unsafe_arena_release:novonotes.audio_engine.v1alpha1.DeviceParameter.choice)
    if(parameter_type_case() == kChoice)
    {
        clear_has_parameter_type();
        auto* temp = _impl_.parameter_type_.choice_;
        _impl_.parameter_type_.choice_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline void DeviceParameter::unsafe_arena_set_allocated_choice(
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType* value)
{
    // We rely on the oneof clear method to free the earlier contents
    // of this oneof. We can directly use the pointer we're given to
    // set the new value.
    clear_parameter_type();
    if(value)
    {
        set_has_choice();
        _impl_.parameter_type_.choice_ = value;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.DeviceParameter.choice)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType*
DeviceParameter::_internal_mutable_choice()
{
    if(parameter_type_case() != kChoice)
    {
        clear_parameter_type();
        set_has_choice();
        _impl_.parameter_type_
            .choice_ = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType>(
            GetArena());
    }
    return _impl_.parameter_type_.choice_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType*
DeviceParameter::mutable_choice() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::novonotes::audio_engine::v1alpha1::DeviceParameter_ChoiceType* _msg =
        _internal_mutable_choice();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceParameter.choice)
    return _msg;
}

inline bool DeviceParameter::has_parameter_type() const
{
    return parameter_type_case() != PARAMETER_TYPE_NOT_SET;
}
inline void DeviceParameter::clear_has_parameter_type()
{
    _impl_._oneof_case_[0] = PARAMETER_TYPE_NOT_SET;
}
inline DeviceParameter::ParameterTypeCase DeviceParameter::parameter_type_case()
    const
{
    return DeviceParameter::ParameterTypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// DeviceIo

// string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void DeviceIo::clear_display_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.display_name_.ClearToEmpty();
}
inline const std::string& DeviceIo::display_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceIo.display_name)
    return _internal_display_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceIo::set_display_name(Arg_&& arg,
                                                              Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.display_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceIo.display_name)
}
inline std::string* DeviceIo::mutable_display_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_display_name();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceIo.display_name)
    return _s;
}
inline const std::string& DeviceIo::_internal_display_name() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.display_name_.Get();
}
inline void DeviceIo::_internal_set_display_name(const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.display_name_.Set(value, GetArena());
}
inline std::string* DeviceIo::_internal_mutable_display_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.display_name_.Mutable(GetArena());
}
inline std::string* DeviceIo::release_display_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceIo.display_name)
    return _impl_.display_name_.Release();
}
inline void DeviceIo::set_allocated_display_name(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.display_name_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.display_name_.IsDefault())
    {
        _impl_.display_name_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceIo.display_name)
}

// -------------------------------------------------------------------

// CreateDeviceInstanceRequest

// .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1
// [(.google.api.field_behavior) = REQUIRED];
inline bool CreateDeviceInstanceRequest::has_device_instance() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.device_instance_ != nullptr);
    return value;
}
inline void CreateDeviceInstanceRequest::clear_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ != nullptr) _impl_.device_instance_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
CreateDeviceInstanceRequest::_internal_device_instance() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance* p =
        _impl_.device_instance_;
    return p != nullptr ? *p
                        : reinterpret_cast<const ::novonotes::audio_engine::
                                               v1alpha1::DeviceInstance&>(
                              ::novonotes::audio_engine::v1alpha1::
                                  _DeviceInstance_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
CreateDeviceInstanceRequest::device_instance() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceRequest.device_instance)
    return _internal_device_instance();
}
inline void
CreateDeviceInstanceRequest::unsafe_arena_set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.device_instance_);
    }
    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceRequest.device_instance)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
CreateDeviceInstanceRequest::release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* released =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
CreateDeviceInstanceRequest::unsafe_arena_release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceRequest.device_instance)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* temp =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
CreateDeviceInstanceRequest::_internal_mutable_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance>(GetArena());
        _impl_.device_instance_ = reinterpret_cast<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance*>(p);
    }
    return _impl_.device_instance_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
CreateDeviceInstanceRequest::mutable_device_instance()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* _msg =
        _internal_mutable_device_instance();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceRequest.device_instance)
    return _msg;
}
inline void CreateDeviceInstanceRequest::set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.device_instance_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceRequest.device_instance)
}

// -------------------------------------------------------------------

// CreateDeviceInstanceResponse

// .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
inline bool CreateDeviceInstanceResponse::has_device_instance() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.device_instance_ != nullptr);
    return value;
}
inline void CreateDeviceInstanceResponse::clear_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ != nullptr) _impl_.device_instance_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
CreateDeviceInstanceResponse::_internal_device_instance() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance* p =
        _impl_.device_instance_;
    return p != nullptr ? *p
                        : reinterpret_cast<const ::novonotes::audio_engine::
                                               v1alpha1::DeviceInstance&>(
                              ::novonotes::audio_engine::v1alpha1::
                                  _DeviceInstance_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
CreateDeviceInstanceResponse::device_instance() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceResponse.device_instance)
    return _internal_device_instance();
}
inline void
CreateDeviceInstanceResponse::unsafe_arena_set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.device_instance_);
    }
    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceResponse.device_instance)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
CreateDeviceInstanceResponse::release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* released =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
CreateDeviceInstanceResponse::unsafe_arena_release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceResponse.device_instance)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* temp =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
CreateDeviceInstanceResponse::_internal_mutable_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance>(GetArena());
        _impl_.device_instance_ = reinterpret_cast<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance*>(p);
    }
    return _impl_.device_instance_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
CreateDeviceInstanceResponse::mutable_device_instance()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* _msg =
        _internal_mutable_device_instance();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceResponse.device_instance)
    return _msg;
}
inline void CreateDeviceInstanceResponse::set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.device_instance_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.CreateDeviceInstanceResponse.device_instance)
}

// -------------------------------------------------------------------

// DeleteDeviceInstanceRequest

// string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void DeleteDeviceInstanceRequest::clear_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.ClearToEmpty();
}
inline const std::string& DeleteDeviceInstanceRequest::device_instance_id()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceRequest.device_instance_id)
    return _internal_device_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
DeleteDeviceInstanceRequest::set_device_instance_id(Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceRequest.device_instance_id)
}
inline std::string* DeleteDeviceInstanceRequest::mutable_device_instance_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_device_instance_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceRequest.device_instance_id)
    return _s;
}
inline const std::string&
DeleteDeviceInstanceRequest::_internal_device_instance_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.device_instance_id_.Get();
}
inline void DeleteDeviceInstanceRequest::_internal_set_device_instance_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(value, GetArena());
}
inline std::string*
DeleteDeviceInstanceRequest::_internal_mutable_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.device_instance_id_.Mutable(GetArena());
}
inline std::string* DeleteDeviceInstanceRequest::release_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceRequest.device_instance_id)
    return _impl_.device_instance_id_.Release();
}
inline void DeleteDeviceInstanceRequest::set_allocated_device_instance_id(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.device_instance_id_.IsDefault())
    {
        _impl_.device_instance_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeleteDeviceInstanceRequest.device_instance_id)
}

// -------------------------------------------------------------------

// DeleteDeviceInstanceResponse

// -------------------------------------------------------------------

// GetDeviceInstanceRequest

// string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void GetDeviceInstanceRequest::clear_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.ClearToEmpty();
}
inline const std::string& GetDeviceInstanceRequest::device_instance_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.GetDeviceInstanceRequest.device_instance_id)
    return _internal_device_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
GetDeviceInstanceRequest::set_device_instance_id(Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.GetDeviceInstanceRequest.device_instance_id)
}
inline std::string* GetDeviceInstanceRequest::mutable_device_instance_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_device_instance_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.GetDeviceInstanceRequest.device_instance_id)
    return _s;
}
inline const std::string&
GetDeviceInstanceRequest::_internal_device_instance_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.device_instance_id_.Get();
}
inline void GetDeviceInstanceRequest::_internal_set_device_instance_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(value, GetArena());
}
inline std::string*
GetDeviceInstanceRequest::_internal_mutable_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.device_instance_id_.Mutable(GetArena());
}
inline std::string* GetDeviceInstanceRequest::release_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.GetDeviceInstanceRequest.device_instance_id)
    return _impl_.device_instance_id_.Release();
}
inline void GetDeviceInstanceRequest::set_allocated_device_instance_id(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.device_instance_id_.IsDefault())
    {
        _impl_.device_instance_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.GetDeviceInstanceRequest.device_instance_id)
}

// -------------------------------------------------------------------

// GetDeviceInstanceResponse

// .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
inline bool GetDeviceInstanceResponse::has_device_instance() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.device_instance_ != nullptr);
    return value;
}
inline void GetDeviceInstanceResponse::clear_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ != nullptr) _impl_.device_instance_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
GetDeviceInstanceResponse::_internal_device_instance() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance* p =
        _impl_.device_instance_;
    return p != nullptr ? *p
                        : reinterpret_cast<const ::novonotes::audio_engine::
                                               v1alpha1::DeviceInstance&>(
                              ::novonotes::audio_engine::v1alpha1::
                                  _DeviceInstance_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
GetDeviceInstanceResponse::device_instance() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.GetDeviceInstanceResponse.device_instance)
    return _internal_device_instance();
}
inline void
GetDeviceInstanceResponse::unsafe_arena_set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.device_instance_);
    }
    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.GetDeviceInstanceResponse.device_instance)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
GetDeviceInstanceResponse::release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* released =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
GetDeviceInstanceResponse::unsafe_arena_release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.GetDeviceInstanceResponse.device_instance)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* temp =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
GetDeviceInstanceResponse::_internal_mutable_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance>(GetArena());
        _impl_.device_instance_ = reinterpret_cast<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance*>(p);
    }
    return _impl_.device_instance_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
GetDeviceInstanceResponse::mutable_device_instance()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* _msg =
        _internal_mutable_device_instance();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.GetDeviceInstanceResponse.device_instance)
    return _msg;
}
inline void GetDeviceInstanceResponse::set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.device_instance_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.GetDeviceInstanceResponse.device_instance)
}

// -------------------------------------------------------------------

// SubscribeToDeviceInstanceUpdatesRequest

// -------------------------------------------------------------------

// SubscribeToDeviceInstanceUpdatesResponse

// .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
inline bool SubscribeToDeviceInstanceUpdatesResponse::has_device_instance()
    const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.device_instance_ != nullptr);
    return value;
}
inline void SubscribeToDeviceInstanceUpdatesResponse::clear_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ != nullptr) _impl_.device_instance_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
SubscribeToDeviceInstanceUpdatesResponse::_internal_device_instance() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance* p =
        _impl_.device_instance_;
    return p != nullptr ? *p
                        : reinterpret_cast<const ::novonotes::audio_engine::
                                               v1alpha1::DeviceInstance&>(
                              ::novonotes::audio_engine::v1alpha1::
                                  _DeviceInstance_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
SubscribeToDeviceInstanceUpdatesResponse::device_instance() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesResponse.device_instance)
    return _internal_device_instance();
}
inline void SubscribeToDeviceInstanceUpdatesResponse::
    unsafe_arena_set_allocated_device_instance(
        ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.device_instance_);
    }
    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesResponse.device_instance)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
SubscribeToDeviceInstanceUpdatesResponse::release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* released =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
SubscribeToDeviceInstanceUpdatesResponse::unsafe_arena_release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesResponse.device_instance)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* temp =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
SubscribeToDeviceInstanceUpdatesResponse::_internal_mutable_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance>(GetArena());
        _impl_.device_instance_ = reinterpret_cast<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance*>(p);
    }
    return _impl_.device_instance_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
SubscribeToDeviceInstanceUpdatesResponse::mutable_device_instance()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* _msg =
        _internal_mutable_device_instance();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesResponse.device_instance)
    return _msg;
}
inline void
SubscribeToDeviceInstanceUpdatesResponse::set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.device_instance_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.SubscribeToDeviceInstanceUpdatesResponse.device_instance)
}

// -------------------------------------------------------------------

// RestoreDeviceInstanceStateRequest

// string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void RestoreDeviceInstanceStateRequest::clear_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.ClearToEmpty();
}
inline const std::string&
RestoreDeviceInstanceStateRequest::device_instance_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.device_instance_id)
    return _internal_device_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
RestoreDeviceInstanceStateRequest::set_device_instance_id(Arg_&& arg,
                                                          Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.device_instance_id)
}
inline std::string*
RestoreDeviceInstanceStateRequest::mutable_device_instance_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_device_instance_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.device_instance_id)
    return _s;
}
inline const std::string&
RestoreDeviceInstanceStateRequest::_internal_device_instance_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.device_instance_id_.Get();
}
inline void RestoreDeviceInstanceStateRequest::_internal_set_device_instance_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(value, GetArena());
}
inline std::string*
RestoreDeviceInstanceStateRequest::_internal_mutable_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.device_instance_id_.Mutable(GetArena());
}
inline std::string*
RestoreDeviceInstanceStateRequest::release_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.device_instance_id)
    return _impl_.device_instance_id_.Release();
}
inline void RestoreDeviceInstanceStateRequest::set_allocated_device_instance_id(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.device_instance_id_.IsDefault())
    {
        _impl_.device_instance_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.device_instance_id)
}

// string state_restoration_token = 2 [(.google.api.field_behavior) = REQUIRED];
inline void RestoreDeviceInstanceStateRequest::clear_state_restoration_token()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_restoration_token_.ClearToEmpty();
}
inline const std::string&
RestoreDeviceInstanceStateRequest::state_restoration_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.state_restoration_token)
    return _internal_state_restoration_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
RestoreDeviceInstanceStateRequest::set_state_restoration_token(Arg_&& arg,
                                                               Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_restoration_token_.Set(static_cast<Arg_&&>(arg), args...,
                                        GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.state_restoration_token)
}
inline std::string*
RestoreDeviceInstanceStateRequest::mutable_state_restoration_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_state_restoration_token();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.state_restoration_token)
    return _s;
}
inline const std::string&
RestoreDeviceInstanceStateRequest::_internal_state_restoration_token() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.state_restoration_token_.Get();
}
inline void
RestoreDeviceInstanceStateRequest::_internal_set_state_restoration_token(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_restoration_token_.Set(value, GetArena());
}
inline std::string*
RestoreDeviceInstanceStateRequest::_internal_mutable_state_restoration_token()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.state_restoration_token_.Mutable(GetArena());
}
inline std::string*
RestoreDeviceInstanceStateRequest::release_state_restoration_token()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.state_restoration_token)
    return _impl_.state_restoration_token_.Release();
}
inline void
RestoreDeviceInstanceStateRequest::set_allocated_state_restoration_token(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_restoration_token_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.state_restoration_token_.IsDefault())
    {
        _impl_.state_restoration_token_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateRequest.state_restoration_token)
}

// -------------------------------------------------------------------

// RestoreDeviceInstanceStateResponse

// .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
inline bool RestoreDeviceInstanceStateResponse::has_device_instance() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.device_instance_ != nullptr);
    return value;
}
inline void RestoreDeviceInstanceStateResponse::clear_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ != nullptr) _impl_.device_instance_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
RestoreDeviceInstanceStateResponse::_internal_device_instance() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance* p =
        _impl_.device_instance_;
    return p != nullptr ? *p
                        : reinterpret_cast<const ::novonotes::audio_engine::
                                               v1alpha1::DeviceInstance&>(
                              ::novonotes::audio_engine::v1alpha1::
                                  _DeviceInstance_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
RestoreDeviceInstanceStateResponse::device_instance() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateResponse.device_instance)
    return _internal_device_instance();
}
inline void
RestoreDeviceInstanceStateResponse::unsafe_arena_set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.device_instance_);
    }
    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateResponse.device_instance)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
RestoreDeviceInstanceStateResponse::release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* released =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
RestoreDeviceInstanceStateResponse::unsafe_arena_release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateResponse.device_instance)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* temp =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
RestoreDeviceInstanceStateResponse::_internal_mutable_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance>(GetArena());
        _impl_.device_instance_ = reinterpret_cast<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance*>(p);
    }
    return _impl_.device_instance_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
RestoreDeviceInstanceStateResponse::mutable_device_instance()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* _msg =
        _internal_mutable_device_instance();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateResponse.device_instance)
    return _msg;
}
inline void RestoreDeviceInstanceStateResponse::set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.device_instance_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RestoreDeviceInstanceStateResponse.device_instance)
}

// -------------------------------------------------------------------

// SetParameterValueRequest

// string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void SetParameterValueRequest::clear_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.ClearToEmpty();
}
inline const std::string& SetParameterValueRequest::device_instance_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.device_instance_id)
    return _internal_device_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
SetParameterValueRequest::set_device_instance_id(Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.device_instance_id)
}
inline std::string* SetParameterValueRequest::mutable_device_instance_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_device_instance_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.device_instance_id)
    return _s;
}
inline const std::string&
SetParameterValueRequest::_internal_device_instance_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.device_instance_id_.Get();
}
inline void SetParameterValueRequest::_internal_set_device_instance_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(value, GetArena());
}
inline std::string*
SetParameterValueRequest::_internal_mutable_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.device_instance_id_.Mutable(GetArena());
}
inline std::string* SetParameterValueRequest::release_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.device_instance_id)
    return _impl_.device_instance_id_.Release();
}
inline void SetParameterValueRequest::set_allocated_device_instance_id(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.device_instance_id_.IsDefault())
    {
        _impl_.device_instance_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.device_instance_id)
}

// string parameter_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void SetParameterValueRequest::clear_parameter_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_id_.ClearToEmpty();
}
inline const std::string& SetParameterValueRequest::parameter_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.parameter_id)
    return _internal_parameter_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetParameterValueRequest::set_parameter_id(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.parameter_id)
}
inline std::string* SetParameterValueRequest::mutable_parameter_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_parameter_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.parameter_id)
    return _s;
}
inline const std::string& SetParameterValueRequest::_internal_parameter_id()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parameter_id_.Get();
}
inline void SetParameterValueRequest::_internal_set_parameter_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_id_.Set(value, GetArena());
}
inline std::string* SetParameterValueRequest::_internal_mutable_parameter_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.parameter_id_.Mutable(GetArena());
}
inline std::string* SetParameterValueRequest::release_parameter_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.parameter_id)
    return _impl_.parameter_id_.Release();
}
inline void SetParameterValueRequest::set_allocated_parameter_id(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.parameter_id_.IsDefault())
    {
        _impl_.parameter_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.parameter_id)
}

// string text_value = 3;
inline bool SetParameterValueRequest::has_text_value() const
{
    return new_value_case() == kTextValue;
}
inline void SetParameterValueRequest::set_has_text_value()
{
    _impl_._oneof_case_[0] = kTextValue;
}
inline void SetParameterValueRequest::clear_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() == kTextValue)
    {
        _impl_.new_value_.text_value_.Destroy();
        clear_has_new_value();
    }
}
inline const std::string& SetParameterValueRequest::text_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.text_value)
    return _internal_text_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetParameterValueRequest::set_text_value(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    _impl_.new_value_.text_value_.Set(static_cast<Arg_&&>(arg), args...,
                                      GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.text_value)
}
inline std::string* SetParameterValueRequest::mutable_text_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_text_value();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.text_value)
    return _s;
}
inline const std::string& SetParameterValueRequest::_internal_text_value() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    if(new_value_case() != kTextValue)
    {
        return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
    }
    return _impl_.new_value_.text_value_.Get();
}
inline void SetParameterValueRequest::_internal_set_text_value(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    _impl_.new_value_.text_value_.Set(value, GetArena());
}
inline std::string* SetParameterValueRequest::_internal_mutable_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    return _impl_.new_value_.text_value_.Mutable(GetArena());
}
inline std::string* SetParameterValueRequest::release_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.text_value)
    if(new_value_case() != kTextValue)
    {
        return nullptr;
    }
    clear_has_new_value();
    return _impl_.new_value_.text_value_.Release();
}
inline void SetParameterValueRequest::set_allocated_text_value(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(has_new_value())
    {
        clear_new_value();
    }
    if(value != nullptr)
    {
        set_has_text_value();
        _impl_.new_value_.text_value_.InitAllocated(value, GetArena());
    }
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.text_value)
}

// double normalized_value = 4;
inline bool SetParameterValueRequest::has_normalized_value() const
{
    return new_value_case() == kNormalizedValue;
}
inline void SetParameterValueRequest::set_has_normalized_value()
{
    _impl_._oneof_case_[0] = kNormalizedValue;
}
inline void SetParameterValueRequest::clear_normalized_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() == kNormalizedValue)
    {
        _impl_.new_value_.normalized_value_ = 0;
        clear_has_new_value();
    }
}
inline double SetParameterValueRequest::normalized_value() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.normalized_value)
    return _internal_normalized_value();
}
inline void SetParameterValueRequest::set_normalized_value(double value)
{
    if(new_value_case() != kNormalizedValue)
    {
        clear_new_value();
        set_has_normalized_value();
    }
    _impl_.new_value_.normalized_value_ = value;
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.SetParameterValueRequest.normalized_value)
}
inline double SetParameterValueRequest::_internal_normalized_value() const
{
    if(new_value_case() == kNormalizedValue)
    {
        return _impl_.new_value_.normalized_value_;
    }
    return 0;
}

inline bool SetParameterValueRequest::has_new_value() const
{
    return new_value_case() != NEW_VALUE_NOT_SET;
}
inline void SetParameterValueRequest::clear_has_new_value()
{
    _impl_._oneof_case_[0] = NEW_VALUE_NOT_SET;
}
inline SetParameterValueRequest::NewValueCase
SetParameterValueRequest::new_value_case() const
{
    return SetParameterValueRequest::NewValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// SetParameterValueResponse

// .novonotes.audio_engine.v1alpha1.DeviceInstance device_instance = 1;
inline bool SetParameterValueResponse::has_device_instance() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.device_instance_ != nullptr);
    return value;
}
inline void SetParameterValueResponse::clear_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ != nullptr) _impl_.device_instance_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
SetParameterValueResponse::_internal_device_instance() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::DeviceInstance* p =
        _impl_.device_instance_;
    return p != nullptr ? *p
                        : reinterpret_cast<const ::novonotes::audio_engine::
                                               v1alpha1::DeviceInstance&>(
                              ::novonotes::audio_engine::v1alpha1::
                                  _DeviceInstance_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceInstance&
SetParameterValueResponse::device_instance() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.SetParameterValueResponse.device_instance)
    return _internal_device_instance();
}
inline void
SetParameterValueResponse::unsafe_arena_set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.device_instance_);
    }
    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.SetParameterValueResponse.device_instance)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
SetParameterValueResponse::release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* released =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
SetParameterValueResponse::unsafe_arena_release_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.SetParameterValueResponse.device_instance)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* temp =
        _impl_.device_instance_;
    _impl_.device_instance_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
SetParameterValueResponse::_internal_mutable_device_instance()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.device_instance_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance>(GetArena());
        _impl_.device_instance_ = reinterpret_cast<
            ::novonotes::audio_engine::v1alpha1::DeviceInstance*>(p);
    }
    return _impl_.device_instance_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceInstance*
SetParameterValueResponse::mutable_device_instance()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* _msg =
        _internal_mutable_device_instance();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.SetParameterValueResponse.device_instance)
    return _msg;
}
inline void SetParameterValueResponse::set_allocated_device_instance(
    ::novonotes::audio_engine::v1alpha1::DeviceInstance* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.device_instance_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.device_instance_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::DeviceInstance*>(
            value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.SetParameterValueResponse.device_instance)
}

// -------------------------------------------------------------------

// BatchSetParameterValuesRequest

// repeated .novonotes.audio_engine.v1alpha1.SetParameterValueRequest requests =
// 1 [(.google.api.field_behavior) = REQUIRED];
inline int BatchSetParameterValuesRequest::_internal_requests_size() const
{
    return _internal_requests().size();
}
inline int BatchSetParameterValuesRequest::requests_size() const
{
    return _internal_requests_size();
}
inline void BatchSetParameterValuesRequest::clear_requests()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.requests_.Clear();
}
inline ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest*
BatchSetParameterValuesRequest::mutable_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesRequest.requests)
    return _internal_mutable_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>*
BatchSetParameterValuesRequest::mutable_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesRequest.requests)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_requests();
}
inline const ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest&
BatchSetParameterValuesRequest::requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesRequest.requests)
    return _internal_requests().Get(index);
}
inline ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest*
BatchSetParameterValuesRequest::add_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest* _add =
        _internal_mutable_requests()->Add();
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesRequest.requests)
    return _add;
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>&
BatchSetParameterValuesRequest::requests() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesRequest.requests)
    return _internal_requests();
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>&
BatchSetParameterValuesRequest::_internal_requests() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.requests_;
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::SetParameterValueRequest>*
BatchSetParameterValuesRequest::_internal_mutable_requests()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.requests_;
}

// -------------------------------------------------------------------

// BatchSetParameterValuesResponse

// repeated .novonotes.audio_engine.v1alpha1.SetParameterValueResponse responses
// = 1;
inline int BatchSetParameterValuesResponse::_internal_responses_size() const
{
    return _internal_responses().size();
}
inline int BatchSetParameterValuesResponse::responses_size() const
{
    return _internal_responses_size();
}
inline void BatchSetParameterValuesResponse::clear_responses()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.responses_.Clear();
}
inline ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse*
BatchSetParameterValuesResponse::mutable_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesResponse.responses)
    return _internal_mutable_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>*
BatchSetParameterValuesResponse::mutable_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesResponse.responses)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_responses();
}
inline const ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse&
BatchSetParameterValuesResponse::responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesResponse.responses)
    return _internal_responses().Get(index);
}
inline ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse*
BatchSetParameterValuesResponse::add_responses() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse* _add =
        _internal_mutable_responses()->Add();
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesResponse.responses)
    return _add;
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>&
BatchSetParameterValuesResponse::responses() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.BatchSetParameterValuesResponse.responses)
    return _internal_responses();
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>&
BatchSetParameterValuesResponse::_internal_responses() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.responses_;
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::SetParameterValueResponse>*
BatchSetParameterValuesResponse::_internal_mutable_responses()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.responses_;
}

// -------------------------------------------------------------------

// DeviceSpecificCommand

// string type = 2 [(.google.api.field_behavior) = REQUIRED];
inline void DeviceSpecificCommand::clear_type()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.type_.ClearToEmpty();
}
inline const std::string& DeviceSpecificCommand::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.type)
    return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceSpecificCommand::set_type(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.type)
}
inline std::string* DeviceSpecificCommand::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_type();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.type)
    return _s;
}
inline const std::string& DeviceSpecificCommand::_internal_type() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.type_.Get();
}
inline void DeviceSpecificCommand::_internal_set_type(const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.type_.Set(value, GetArena());
}
inline std::string* DeviceSpecificCommand::_internal_mutable_type()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.type_.Mutable(GetArena());
}
inline std::string* DeviceSpecificCommand::release_type()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.type)
    return _impl_.type_.Release();
}
inline void DeviceSpecificCommand::set_allocated_type(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.type_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.type_.IsDefault())
    {
        _impl_.type_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.type)
}

// .google.protobuf.Struct parameter = 3 [(.google.api.field_behavior) =
// REQUIRED];
inline bool DeviceSpecificCommand::has_parameter() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.parameter_ != nullptr);
    return value;
}
inline const ::google::protobuf::Struct&
DeviceSpecificCommand::_internal_parameter() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::google::protobuf::Struct* p = _impl_.parameter_;
    return p != nullptr ? *p
                        : reinterpret_cast<const ::google::protobuf::Struct&>(
                              ::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& DeviceSpecificCommand::parameter()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.parameter)
    return _internal_parameter();
}
inline void DeviceSpecificCommand::unsafe_arena_set_allocated_parameter(
    ::google::protobuf::Struct* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.parameter_);
    }
    _impl_.parameter_ = reinterpret_cast<::google::protobuf::Struct*>(value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.parameter)
}
inline ::google::protobuf::Struct* DeviceSpecificCommand::release_parameter()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::google::protobuf::Struct* released = _impl_.parameter_;
    _impl_.parameter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::google::protobuf::Struct*
DeviceSpecificCommand::unsafe_arena_release_parameter()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.parameter)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::google::protobuf::Struct* temp = _impl_.parameter_;
    _impl_.parameter_ = nullptr;
    return temp;
}
inline ::google::protobuf::Struct*
DeviceSpecificCommand::_internal_mutable_parameter()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.parameter_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::google::protobuf::Struct>(GetArena());
        _impl_.parameter_ = reinterpret_cast<::google::protobuf::Struct*>(p);
    }
    return _impl_.parameter_;
}
inline ::google::protobuf::Struct* DeviceSpecificCommand::mutable_parameter()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::google::protobuf::Struct* _msg = _internal_mutable_parameter();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.parameter)
    return _msg;
}
inline void DeviceSpecificCommand::set_allocated_parameter(
    ::google::protobuf::Struct* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.parameter_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena =
            reinterpret_cast<::google::protobuf::MessageLite*>(value)
                ->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.parameter_ = reinterpret_cast<::google::protobuf::Struct*>(value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeviceSpecificCommand.parameter)
}

// -------------------------------------------------------------------

// ExecuteDeviceSpecificCommandRequest

// string device_instance_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void ExecuteDeviceSpecificCommandRequest::clear_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.ClearToEmpty();
}
inline const std::string&
ExecuteDeviceSpecificCommandRequest::device_instance_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.device_instance_id)
    return _internal_device_instance_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
ExecuteDeviceSpecificCommandRequest::set_device_instance_id(Arg_&& arg,
                                                            Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.device_instance_id)
}
inline std::string*
ExecuteDeviceSpecificCommandRequest::mutable_device_instance_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_device_instance_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.device_instance_id)
    return _s;
}
inline const std::string&
ExecuteDeviceSpecificCommandRequest::_internal_device_instance_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.device_instance_id_.Get();
}
inline void
ExecuteDeviceSpecificCommandRequest::_internal_set_device_instance_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.Set(value, GetArena());
}
inline std::string*
ExecuteDeviceSpecificCommandRequest::_internal_mutable_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.device_instance_id_.Mutable(GetArena());
}
inline std::string*
ExecuteDeviceSpecificCommandRequest::release_device_instance_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.device_instance_id)
    return _impl_.device_instance_id_.Release();
}
inline void
ExecuteDeviceSpecificCommandRequest::set_allocated_device_instance_id(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.device_instance_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.device_instance_id_.IsDefault())
    {
        _impl_.device_instance_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.device_instance_id)
}

// .novonotes.audio_engine.v1alpha1.DeviceSpecificCommand command = 2
// [(.google.api.field_behavior) = REQUIRED];
inline bool ExecuteDeviceSpecificCommandRequest::has_command() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.command_ != nullptr);
    return value;
}
inline void ExecuteDeviceSpecificCommandRequest::clear_command()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.command_ != nullptr) _impl_.command_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand&
ExecuteDeviceSpecificCommandRequest::_internal_command() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* p =
        _impl_.command_;
    return p != nullptr
               ? *p
               : reinterpret_cast<const ::novonotes::audio_engine::v1alpha1::
                                      DeviceSpecificCommand&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _DeviceSpecificCommand_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand&
ExecuteDeviceSpecificCommandRequest::command() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.command)
    return _internal_command();
}
inline void
ExecuteDeviceSpecificCommandRequest::unsafe_arena_set_allocated_command(
    ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.command_);
    }
    _impl_.command_ = reinterpret_cast<
        ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*>(value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.command)
}
inline ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*
ExecuteDeviceSpecificCommandRequest::release_command()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* released =
        _impl_.command_;
    _impl_.command_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*
ExecuteDeviceSpecificCommandRequest::unsafe_arena_release_command()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.command)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* temp =
        _impl_.command_;
    _impl_.command_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*
ExecuteDeviceSpecificCommandRequest::_internal_mutable_command()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.command_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand>(
            GetArena());
        _impl_.command_ = reinterpret_cast<
            ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*>(p);
    }
    return _impl_.command_;
}
inline ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*
ExecuteDeviceSpecificCommandRequest::mutable_command()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* _msg =
        _internal_mutable_command();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.command)
    return _msg;
}
inline void ExecuteDeviceSpecificCommandRequest::set_allocated_command(
    ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.command_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.command_ = reinterpret_cast<
        ::novonotes::audio_engine::v1alpha1::DeviceSpecificCommand*>(value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandRequest.command)
}

// -------------------------------------------------------------------

// ExecuteDeviceSpecificCommandResponse

// .google.protobuf.Struct command_result = 1;
inline bool ExecuteDeviceSpecificCommandResponse::has_command_result() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.command_result_ != nullptr);
    return value;
}
inline const ::google::protobuf::Struct&
ExecuteDeviceSpecificCommandResponse::_internal_command_result() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::google::protobuf::Struct* p = _impl_.command_result_;
    return p != nullptr ? *p
                        : reinterpret_cast<const ::google::protobuf::Struct&>(
                              ::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct&
ExecuteDeviceSpecificCommandResponse::command_result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandResponse.command_result)
    return _internal_command_result();
}
inline void
ExecuteDeviceSpecificCommandResponse::unsafe_arena_set_allocated_command_result(
    ::google::protobuf::Struct* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.command_result_);
    }
    _impl_.command_result_ =
        reinterpret_cast<::google::protobuf::Struct*>(value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandResponse.command_result)
}
inline ::google::protobuf::Struct*
ExecuteDeviceSpecificCommandResponse::release_command_result()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::google::protobuf::Struct* released = _impl_.command_result_;
    _impl_.command_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::google::protobuf::Struct*
ExecuteDeviceSpecificCommandResponse::unsafe_arena_release_command_result()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandResponse.command_result)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::google::protobuf::Struct* temp = _impl_.command_result_;
    _impl_.command_result_ = nullptr;
    return temp;
}
inline ::google::protobuf::Struct*
ExecuteDeviceSpecificCommandResponse::_internal_mutable_command_result()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.command_result_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::google::protobuf::Struct>(GetArena());
        _impl_.command_result_ =
            reinterpret_cast<::google::protobuf::Struct*>(p);
    }
    return _impl_.command_result_;
}
inline ::google::protobuf::Struct*
ExecuteDeviceSpecificCommandResponse::mutable_command_result()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::google::protobuf::Struct* _msg = _internal_mutable_command_result();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandResponse.command_result)
    return _msg;
}
inline void ExecuteDeviceSpecificCommandResponse::set_allocated_command_result(
    ::google::protobuf::Struct* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.command_result_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena =
            reinterpret_cast<::google::protobuf::MessageLite*>(value)
                ->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.command_result_ =
        reinterpret_cast<::google::protobuf::Struct*>(value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.ExecuteDeviceSpecificCommandResponse.command_result)
}

// -------------------------------------------------------------------

// StartParameterSyncRequest

// int32 rt_session_id = 1;
inline void StartParameterSyncRequest::clear_rt_session_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.rt_session_id_ = 0;
}
inline ::int32_t StartParameterSyncRequest::rt_session_id() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.rt_session_id)
    return _internal_rt_session_id();
}
inline void StartParameterSyncRequest::set_rt_session_id(::int32_t value)
{
    _internal_set_rt_session_id(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.rt_session_id)
}
inline ::int32_t StartParameterSyncRequest::_internal_rt_session_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.rt_session_id_;
}
inline void StartParameterSyncRequest::_internal_set_rt_session_id(
    ::int32_t value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.rt_session_id_ = value;
}

// repeated string parameter_sync_keys = 2;
inline int StartParameterSyncRequest::_internal_parameter_sync_keys_size() const
{
    return _internal_parameter_sync_keys().size();
}
inline int StartParameterSyncRequest::parameter_sync_keys_size() const
{
    return _internal_parameter_sync_keys_size();
}
inline void StartParameterSyncRequest::clear_parameter_sync_keys()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_keys_.Clear();
}
inline std::string* StartParameterSyncRequest::add_parameter_sync_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    std::string* _s = _internal_mutable_parameter_sync_keys()->Add();
    // @@protoc_insertion_point(field_add_mutable:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.parameter_sync_keys)
    return _s;
}
inline const std::string& StartParameterSyncRequest::parameter_sync_keys(
    int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.parameter_sync_keys)
    return _internal_parameter_sync_keys().Get(index);
}
inline std::string* StartParameterSyncRequest::mutable_parameter_sync_keys(
    int index) ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.parameter_sync_keys)
    return _internal_mutable_parameter_sync_keys()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void StartParameterSyncRequest::set_parameter_sync_keys(int index,
                                                               Arg_&& value,
                                                               Args_... args)
{
    ::google::protobuf::internal::AssignToString(
        *_internal_mutable_parameter_sync_keys()->Mutable(index),
        std::forward<Arg_>(value), args...);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.parameter_sync_keys)
}
template <typename Arg_, typename... Args_>
inline void StartParameterSyncRequest::add_parameter_sync_keys(Arg_&& value,
                                                               Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::google::protobuf::internal::AddToRepeatedPtrField(
        *_internal_mutable_parameter_sync_keys(), std::forward<Arg_>(value),
        args...);
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.parameter_sync_keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StartParameterSyncRequest::parameter_sync_keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.parameter_sync_keys)
    return _internal_parameter_sync_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StartParameterSyncRequest::mutable_parameter_sync_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.StartParameterSyncRequest.parameter_sync_keys)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_parameter_sync_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StartParameterSyncRequest::_internal_parameter_sync_keys() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parameter_sync_keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StartParameterSyncRequest::_internal_mutable_parameter_sync_keys()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.parameter_sync_keys_;
}

// -------------------------------------------------------------------

// StartParameterSyncResponse

// -------------------------------------------------------------------

// StopParameterSyncRequest

// int32 rt_session_id = 1;
inline void StopParameterSyncRequest::clear_rt_session_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.rt_session_id_ = 0;
}
inline ::int32_t StopParameterSyncRequest::rt_session_id() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.rt_session_id)
    return _internal_rt_session_id();
}
inline void StopParameterSyncRequest::set_rt_session_id(::int32_t value)
{
    _internal_set_rt_session_id(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.rt_session_id)
}
inline ::int32_t StopParameterSyncRequest::_internal_rt_session_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.rt_session_id_;
}
inline void StopParameterSyncRequest::_internal_set_rt_session_id(
    ::int32_t value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.rt_session_id_ = value;
}

// repeated string parameter_sync_keys = 2;
inline int StopParameterSyncRequest::_internal_parameter_sync_keys_size() const
{
    return _internal_parameter_sync_keys().size();
}
inline int StopParameterSyncRequest::parameter_sync_keys_size() const
{
    return _internal_parameter_sync_keys_size();
}
inline void StopParameterSyncRequest::clear_parameter_sync_keys()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_keys_.Clear();
}
inline std::string* StopParameterSyncRequest::add_parameter_sync_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    std::string* _s = _internal_mutable_parameter_sync_keys()->Add();
    // @@protoc_insertion_point(field_add_mutable:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.parameter_sync_keys)
    return _s;
}
inline const std::string& StopParameterSyncRequest::parameter_sync_keys(
    int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.parameter_sync_keys)
    return _internal_parameter_sync_keys().Get(index);
}
inline std::string* StopParameterSyncRequest::mutable_parameter_sync_keys(
    int index) ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.parameter_sync_keys)
    return _internal_mutable_parameter_sync_keys()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void StopParameterSyncRequest::set_parameter_sync_keys(int index,
                                                              Arg_&& value,
                                                              Args_... args)
{
    ::google::protobuf::internal::AssignToString(
        *_internal_mutable_parameter_sync_keys()->Mutable(index),
        std::forward<Arg_>(value), args...);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.parameter_sync_keys)
}
template <typename Arg_, typename... Args_>
inline void StopParameterSyncRequest::add_parameter_sync_keys(Arg_&& value,
                                                              Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::google::protobuf::internal::AddToRepeatedPtrField(
        *_internal_mutable_parameter_sync_keys(), std::forward<Arg_>(value),
        args...);
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.parameter_sync_keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StopParameterSyncRequest::parameter_sync_keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.parameter_sync_keys)
    return _internal_parameter_sync_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StopParameterSyncRequest::mutable_parameter_sync_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.StopParameterSyncRequest.parameter_sync_keys)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_parameter_sync_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StopParameterSyncRequest::_internal_parameter_sync_keys() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parameter_sync_keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StopParameterSyncRequest::_internal_mutable_parameter_sync_keys()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.parameter_sync_keys_;
}

// -------------------------------------------------------------------

// StopParameterSyncResponse

// -------------------------------------------------------------------

// RtUpdateParameterCommand

// string parameter_sync_key = 1;
inline void RtUpdateParameterCommand::clear_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.ClearToEmpty();
}
inline const std::string& RtUpdateParameterCommand::parameter_sync_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.parameter_sync_key)
    return _internal_parameter_sync_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
RtUpdateParameterCommand::set_parameter_sync_key(Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.parameter_sync_key)
}
inline std::string* RtUpdateParameterCommand::mutable_parameter_sync_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_parameter_sync_key();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.parameter_sync_key)
    return _s;
}
inline const std::string&
RtUpdateParameterCommand::_internal_parameter_sync_key() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parameter_sync_key_.Get();
}
inline void RtUpdateParameterCommand::_internal_set_parameter_sync_key(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.Set(value, GetArena());
}
inline std::string*
RtUpdateParameterCommand::_internal_mutable_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.parameter_sync_key_.Mutable(GetArena());
}
inline std::string* RtUpdateParameterCommand::release_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.parameter_sync_key)
    return _impl_.parameter_sync_key_.Release();
}
inline void RtUpdateParameterCommand::set_allocated_parameter_sync_key(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.parameter_sync_key_.IsDefault())
    {
        _impl_.parameter_sync_key_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.parameter_sync_key)
}

// string text_value = 10;
inline bool RtUpdateParameterCommand::has_text_value() const
{
    return new_value_case() == kTextValue;
}
inline void RtUpdateParameterCommand::set_has_text_value()
{
    _impl_._oneof_case_[0] = kTextValue;
}
inline void RtUpdateParameterCommand::clear_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() == kTextValue)
    {
        _impl_.new_value_.text_value_.Destroy();
        clear_has_new_value();
    }
}
inline const std::string& RtUpdateParameterCommand::text_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.text_value)
    return _internal_text_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RtUpdateParameterCommand::set_text_value(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    _impl_.new_value_.text_value_.Set(static_cast<Arg_&&>(arg), args...,
                                      GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.text_value)
}
inline std::string* RtUpdateParameterCommand::mutable_text_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_text_value();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.text_value)
    return _s;
}
inline const std::string& RtUpdateParameterCommand::_internal_text_value() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    if(new_value_case() != kTextValue)
    {
        return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
    }
    return _impl_.new_value_.text_value_.Get();
}
inline void RtUpdateParameterCommand::_internal_set_text_value(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    _impl_.new_value_.text_value_.Set(value, GetArena());
}
inline std::string* RtUpdateParameterCommand::_internal_mutable_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    return _impl_.new_value_.text_value_.Mutable(GetArena());
}
inline std::string* RtUpdateParameterCommand::release_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.text_value)
    if(new_value_case() != kTextValue)
    {
        return nullptr;
    }
    clear_has_new_value();
    return _impl_.new_value_.text_value_.Release();
}
inline void RtUpdateParameterCommand::set_allocated_text_value(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(has_new_value())
    {
        clear_new_value();
    }
    if(value != nullptr)
    {
        set_has_text_value();
        _impl_.new_value_.text_value_.InitAllocated(value, GetArena());
    }
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.text_value)
}

// double normalized_value = 11;
inline bool RtUpdateParameterCommand::has_normalized_value() const
{
    return new_value_case() == kNormalizedValue;
}
inline void RtUpdateParameterCommand::set_has_normalized_value()
{
    _impl_._oneof_case_[0] = kNormalizedValue;
}
inline void RtUpdateParameterCommand::clear_normalized_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() == kNormalizedValue)
    {
        _impl_.new_value_.normalized_value_ = 0;
        clear_has_new_value();
    }
}
inline double RtUpdateParameterCommand::normalized_value() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.normalized_value)
    return _internal_normalized_value();
}
inline void RtUpdateParameterCommand::set_normalized_value(double value)
{
    if(new_value_case() != kNormalizedValue)
    {
        clear_new_value();
        set_has_normalized_value();
    }
    _impl_.new_value_.normalized_value_ = value;
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand.normalized_value)
}
inline double RtUpdateParameterCommand::_internal_normalized_value() const
{
    if(new_value_case() == kNormalizedValue)
    {
        return _impl_.new_value_.normalized_value_;
    }
    return 0;
}

inline bool RtUpdateParameterCommand::has_new_value() const
{
    return new_value_case() != NEW_VALUE_NOT_SET;
}
inline void RtUpdateParameterCommand::clear_has_new_value()
{
    _impl_._oneof_case_[0] = NEW_VALUE_NOT_SET;
}
inline RtUpdateParameterCommand::NewValueCase
RtUpdateParameterCommand::new_value_case() const
{
    return RtUpdateParameterCommand::NewValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RtFinalizeParameterCommand

// string parameter_sync_key = 1;
inline void RtFinalizeParameterCommand::clear_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.ClearToEmpty();
}
inline const std::string& RtFinalizeParameterCommand::parameter_sync_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.parameter_sync_key)
    return _internal_parameter_sync_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
RtFinalizeParameterCommand::set_parameter_sync_key(Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.parameter_sync_key)
}
inline std::string* RtFinalizeParameterCommand::mutable_parameter_sync_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_parameter_sync_key();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.parameter_sync_key)
    return _s;
}
inline const std::string&
RtFinalizeParameterCommand::_internal_parameter_sync_key() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parameter_sync_key_.Get();
}
inline void RtFinalizeParameterCommand::_internal_set_parameter_sync_key(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.Set(value, GetArena());
}
inline std::string*
RtFinalizeParameterCommand::_internal_mutable_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.parameter_sync_key_.Mutable(GetArena());
}
inline std::string* RtFinalizeParameterCommand::release_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.parameter_sync_key)
    return _impl_.parameter_sync_key_.Release();
}
inline void RtFinalizeParameterCommand::set_allocated_parameter_sync_key(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.parameter_sync_key_.IsDefault())
    {
        _impl_.parameter_sync_key_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.parameter_sync_key)
}

// string text_value = 10;
inline bool RtFinalizeParameterCommand::has_text_value() const
{
    return new_value_case() == kTextValue;
}
inline void RtFinalizeParameterCommand::set_has_text_value()
{
    _impl_._oneof_case_[0] = kTextValue;
}
inline void RtFinalizeParameterCommand::clear_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() == kTextValue)
    {
        _impl_.new_value_.text_value_.Destroy();
        clear_has_new_value();
    }
}
inline const std::string& RtFinalizeParameterCommand::text_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.text_value)
    return _internal_text_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RtFinalizeParameterCommand::set_text_value(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    _impl_.new_value_.text_value_.Set(static_cast<Arg_&&>(arg), args...,
                                      GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.text_value)
}
inline std::string* RtFinalizeParameterCommand::mutable_text_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_text_value();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.text_value)
    return _s;
}
inline const std::string& RtFinalizeParameterCommand::_internal_text_value()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    if(new_value_case() != kTextValue)
    {
        return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
    }
    return _impl_.new_value_.text_value_.Get();
}
inline void RtFinalizeParameterCommand::_internal_set_text_value(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    _impl_.new_value_.text_value_.Set(value, GetArena());
}
inline std::string* RtFinalizeParameterCommand::_internal_mutable_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() != kTextValue)
    {
        clear_new_value();

        set_has_text_value();
        _impl_.new_value_.text_value_.InitDefault();
    }
    return _impl_.new_value_.text_value_.Mutable(GetArena());
}
inline std::string* RtFinalizeParameterCommand::release_text_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.text_value)
    if(new_value_case() != kTextValue)
    {
        return nullptr;
    }
    clear_has_new_value();
    return _impl_.new_value_.text_value_.Release();
}
inline void RtFinalizeParameterCommand::set_allocated_text_value(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(has_new_value())
    {
        clear_new_value();
    }
    if(value != nullptr)
    {
        set_has_text_value();
        _impl_.new_value_.text_value_.InitAllocated(value, GetArena());
    }
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.text_value)
}

// double normalized_value = 11;
inline bool RtFinalizeParameterCommand::has_normalized_value() const
{
    return new_value_case() == kNormalizedValue;
}
inline void RtFinalizeParameterCommand::set_has_normalized_value()
{
    _impl_._oneof_case_[0] = kNormalizedValue;
}
inline void RtFinalizeParameterCommand::clear_normalized_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(new_value_case() == kNormalizedValue)
    {
        _impl_.new_value_.normalized_value_ = 0;
        clear_has_new_value();
    }
}
inline double RtFinalizeParameterCommand::normalized_value() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.normalized_value)
    return _internal_normalized_value();
}
inline void RtFinalizeParameterCommand::set_normalized_value(double value)
{
    if(new_value_case() != kNormalizedValue)
    {
        clear_new_value();
        set_has_normalized_value();
    }
    _impl_.new_value_.normalized_value_ = value;
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand.normalized_value)
}
inline double RtFinalizeParameterCommand::_internal_normalized_value() const
{
    if(new_value_case() == kNormalizedValue)
    {
        return _impl_.new_value_.normalized_value_;
    }
    return 0;
}

inline bool RtFinalizeParameterCommand::has_new_value() const
{
    return new_value_case() != NEW_VALUE_NOT_SET;
}
inline void RtFinalizeParameterCommand::clear_has_new_value()
{
    _impl_._oneof_case_[0] = NEW_VALUE_NOT_SET;
}
inline RtFinalizeParameterCommand::NewValueCase
RtFinalizeParameterCommand::new_value_case() const
{
    return RtFinalizeParameterCommand::NewValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RtParameter

// string parameter_sync_key = 1;
inline void RtParameter::clear_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.ClearToEmpty();
}
inline const std::string& RtParameter::parameter_sync_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtParameter.parameter_sync_key)
    return _internal_parameter_sync_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RtParameter::set_parameter_sync_key(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtParameter.parameter_sync_key)
}
inline std::string* RtParameter::mutable_parameter_sync_key()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_parameter_sync_key();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtParameter.parameter_sync_key)
    return _s;
}
inline const std::string& RtParameter::_internal_parameter_sync_key() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parameter_sync_key_.Get();
}
inline void RtParameter::_internal_set_parameter_sync_key(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.Set(value, GetArena());
}
inline std::string* RtParameter::_internal_mutable_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.parameter_sync_key_.Mutable(GetArena());
}
inline std::string* RtParameter::release_parameter_sync_key()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtParameter.parameter_sync_key)
    return _impl_.parameter_sync_key_.Release();
}
inline void RtParameter::set_allocated_parameter_sync_key(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parameter_sync_key_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.parameter_sync_key_.IsDefault())
    {
        _impl_.parameter_sync_key_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtParameter.parameter_sync_key)
}

// int32 sequence_number = 2;
inline void RtParameter::clear_sequence_number()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.sequence_number_ = 0;
}
inline ::int32_t RtParameter::sequence_number() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtParameter.sequence_number)
    return _internal_sequence_number();
}
inline void RtParameter::set_sequence_number(::int32_t value)
{
    _internal_set_sequence_number(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtParameter.sequence_number)
}
inline ::int32_t RtParameter::_internal_sequence_number() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.sequence_number_;
}
inline void RtParameter::_internal_set_sequence_number(::int32_t value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.sequence_number_ = value;
}

// string text_unmodulated_value = 3;
inline void RtParameter::clear_text_unmodulated_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.text_unmodulated_value_.ClearToEmpty();
}
inline const std::string& RtParameter::text_unmodulated_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtParameter.text_unmodulated_value)
    return _internal_text_unmodulated_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RtParameter::set_text_unmodulated_value(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.text_unmodulated_value_.Set(static_cast<Arg_&&>(arg), args...,
                                       GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtParameter.text_unmodulated_value)
}
inline std::string* RtParameter::mutable_text_unmodulated_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_text_unmodulated_value();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtParameter.text_unmodulated_value)
    return _s;
}
inline const std::string& RtParameter::_internal_text_unmodulated_value() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.text_unmodulated_value_.Get();
}
inline void RtParameter::_internal_set_text_unmodulated_value(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.text_unmodulated_value_.Set(value, GetArena());
}
inline std::string* RtParameter::_internal_mutable_text_unmodulated_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.text_unmodulated_value_.Mutable(GetArena());
}
inline std::string* RtParameter::release_text_unmodulated_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtParameter.text_unmodulated_value)
    return _impl_.text_unmodulated_value_.Release();
}
inline void RtParameter::set_allocated_text_unmodulated_value(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.text_unmodulated_value_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.text_unmodulated_value_.IsDefault())
    {
        _impl_.text_unmodulated_value_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtParameter.text_unmodulated_value)
}

// double normalized_unmodulated_value = 4;
inline void RtParameter::clear_normalized_unmodulated_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.normalized_unmodulated_value_ = 0;
}
inline double RtParameter::normalized_unmodulated_value() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtParameter.normalized_unmodulated_value)
    return _internal_normalized_unmodulated_value();
}
inline void RtParameter::set_normalized_unmodulated_value(double value)
{
    _internal_set_normalized_unmodulated_value(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtParameter.normalized_unmodulated_value)
}
inline double RtParameter::_internal_normalized_unmodulated_value() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.normalized_unmodulated_value_;
}
inline void RtParameter::_internal_set_normalized_unmodulated_value(
    double value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.normalized_unmodulated_value_ = value;
}

// double normalized_modulated_value = 5;
inline void RtParameter::clear_normalized_modulated_value()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.normalized_modulated_value_ = 0;
}
inline double RtParameter::normalized_modulated_value() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtParameter.normalized_modulated_value)
    return _internal_normalized_modulated_value();
}
inline void RtParameter::set_normalized_modulated_value(double value)
{
    _internal_set_normalized_modulated_value(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtParameter.normalized_modulated_value)
}
inline double RtParameter::_internal_normalized_modulated_value() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.normalized_modulated_value_;
}
inline void RtParameter::_internal_set_normalized_modulated_value(double value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.normalized_modulated_value_ = value;
}

// .novonotes.audio_engine.v1alpha1.RtParameter.State state = 10;
inline void RtParameter::clear_state()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_ = 0;
}
inline ::novonotes::audio_engine::v1alpha1::RtParameter_State
RtParameter::state() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtParameter.state)
    return _internal_state();
}
inline void RtParameter::set_state(
    ::novonotes::audio_engine::v1alpha1::RtParameter_State value)
{
    _internal_set_state(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.RtParameter.state)
}
inline ::novonotes::audio_engine::v1alpha1::RtParameter_State
RtParameter::_internal_state() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return static_cast<::novonotes::audio_engine::v1alpha1::RtParameter_State>(
        _impl_.state_);
}
inline void RtParameter::_internal_set_state(
    ::novonotes::audio_engine::v1alpha1::RtParameter_State value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes

namespace google
{
namespace protobuf
{

template <>
struct is_proto_enum<::novonotes::audio_engine::v1alpha1::RtParameter_State>
    : std::true_type
{};
template <>
inline const EnumDescriptor*
GetEnumDescriptor<::novonotes::audio_engine::v1alpha1::RtParameter_State>()
{
    return ::novonotes::audio_engine::v1alpha1::RtParameter_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto_2epb_2eh
