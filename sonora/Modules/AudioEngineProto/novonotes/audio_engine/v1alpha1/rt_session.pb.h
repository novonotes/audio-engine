// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/rt_session.proto
// Protobuf C++ Version: 5.28.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "novonotes/audio_engine/v1alpha1/device_instance.pb.h"
#include "novonotes/audio_engine/v1alpha1/transport.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto

namespace google
{
namespace protobuf
{
namespace internal
{
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto
{
    static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
class RtCommandBatch;
struct RtCommandBatchDefaultTypeInternal;
extern RtCommandBatchDefaultTypeInternal _RtCommandBatch_default_instance_;
class RtCommandBatch_Command;
struct RtCommandBatch_CommandDefaultTypeInternal;
extern RtCommandBatch_CommandDefaultTypeInternal
    _RtCommandBatch_Command_default_instance_;
class RtStateFragment;
struct RtStateFragmentDefaultTypeInternal;
extern RtStateFragmentDefaultTypeInternal _RtStateFragment_default_instance_;
class RtStateFragment_EngineEntity;
struct RtStateFragment_EngineEntityDefaultTypeInternal;
extern RtStateFragment_EngineEntityDefaultTypeInternal
    _RtStateFragment_EngineEntity_default_instance_;
class StartRtSessionRequest;
struct StartRtSessionRequestDefaultTypeInternal;
extern StartRtSessionRequestDefaultTypeInternal
    _StartRtSessionRequest_default_instance_;
class StartRtSessionResponse;
struct StartRtSessionResponseDefaultTypeInternal;
extern StartRtSessionResponseDefaultTypeInternal
    _StartRtSessionResponse_default_instance_;
class StopRtSessionRequest;
struct StopRtSessionRequestDefaultTypeInternal;
extern StopRtSessionRequestDefaultTypeInternal
    _StopRtSessionRequest_default_instance_;
class StopRtSessionResponse;
struct StopRtSessionResponseDefaultTypeInternal;
extern StopRtSessionResponseDefaultTypeInternal
    _StopRtSessionResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google

namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{

// ===================================================================

// -------------------------------------------------------------------

class StopRtSessionResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.StopRtSessionResponse)
 */
{
   public:
    inline StopRtSessionResponse() : StopRtSessionResponse(nullptr) {}
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR StopRtSessionResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline StopRtSessionResponse(const StopRtSessionResponse& from)
        : StopRtSessionResponse(nullptr, from)
    {}
    inline StopRtSessionResponse(StopRtSessionResponse&& from) noexcept
        : StopRtSessionResponse(nullptr, std::move(from))
    {}
    inline StopRtSessionResponse& operator=(const StopRtSessionResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline StopRtSessionResponse& operator=(
        StopRtSessionResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const StopRtSessionResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const StopRtSessionResponse* internal_default_instance()
    {
        return reinterpret_cast<const StopRtSessionResponse*>(
            &_StopRtSessionResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 3;
    friend void swap(StopRtSessionResponse& a, StopRtSessionResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(StopRtSessionResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(StopRtSessionResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    StopRtSessionResponse* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<
            StopRtSessionResponse>(arena);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
    inline void CopyFrom(const StopRtSessionResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
    void MergeFrom(const StopRtSessionResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
    }

   public:
    bool IsInitialized() const { return true; }

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.StopRtSessionResponse";
    }

   protected:
    explicit StopRtSessionResponse(::google::protobuf::Arena* arena);
    StopRtSessionResponse(::google::protobuf::Arena* arena,
                          const StopRtSessionResponse& from);
    StopRtSessionResponse(::google::protobuf::Arena* arena,
                          StopRtSessionResponse&& from) noexcept
        : StopRtSessionResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::internal::ZeroFieldsBase::ClassData*
    GetClassData() const PROTOBUF_FINAL;
    static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull
        _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.StopRtSessionResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 0, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_StopRtSessionResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const StopRtSessionResponse& from_msg);
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
};
// -------------------------------------------------------------------

class StopRtSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
 */
{
   public:
    inline StopRtSessionRequest() : StopRtSessionRequest(nullptr) {}
    ~StopRtSessionRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR StopRtSessionRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline StopRtSessionRequest(const StopRtSessionRequest& from)
        : StopRtSessionRequest(nullptr, from)
    {}
    inline StopRtSessionRequest(StopRtSessionRequest&& from) noexcept
        : StopRtSessionRequest(nullptr, std::move(from))
    {}
    inline StopRtSessionRequest& operator=(const StopRtSessionRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline StopRtSessionRequest& operator=(StopRtSessionRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const StopRtSessionRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const StopRtSessionRequest* internal_default_instance()
    {
        return reinterpret_cast<const StopRtSessionRequest*>(
            &_StopRtSessionRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 2;
    friend void swap(StopRtSessionRequest& a, StopRtSessionRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(StopRtSessionRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(StopRtSessionRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    StopRtSessionRequest* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            StopRtSessionRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const StopRtSessionRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const StopRtSessionRequest& from)
    {
        StopRtSessionRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(StopRtSessionRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.StopRtSessionRequest";
    }

   protected:
    explicit StopRtSessionRequest(::google::protobuf::Arena* arena);
    StopRtSessionRequest(::google::protobuf::Arena* arena,
                         const StopRtSessionRequest& from);
    StopRtSessionRequest(::google::protobuf::Arena* arena,
                         StopRtSessionRequest&& from) noexcept
        : StopRtSessionRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kRtSessionIdFieldNumber = 3,
    };
    // int32 rt_session_id = 3;
    void clear_rt_session_id();
    ::int32_t rt_session_id() const;
    void set_rt_session_id(::int32_t value);

   private:
    ::int32_t _internal_rt_session_id() const;
    void _internal_set_rt_session_id(::int32_t value);

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_StopRtSessionRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const StopRtSessionRequest& from_msg);
        ::int32_t rt_session_id_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
};
// -------------------------------------------------------------------

class StartRtSessionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
 */
{
   public:
    inline StartRtSessionResponse() : StartRtSessionResponse(nullptr) {}
    ~StartRtSessionResponse() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR StartRtSessionResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline StartRtSessionResponse(const StartRtSessionResponse& from)
        : StartRtSessionResponse(nullptr, from)
    {}
    inline StartRtSessionResponse(StartRtSessionResponse&& from) noexcept
        : StartRtSessionResponse(nullptr, std::move(from))
    {}
    inline StartRtSessionResponse& operator=(const StartRtSessionResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline StartRtSessionResponse& operator=(
        StartRtSessionResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const StartRtSessionResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const StartRtSessionResponse* internal_default_instance()
    {
        return reinterpret_cast<const StartRtSessionResponse*>(
            &_StartRtSessionResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 1;
    friend void swap(StartRtSessionResponse& a, StartRtSessionResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(StartRtSessionResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(StartRtSessionResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    StartRtSessionResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            StartRtSessionResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const StartRtSessionResponse& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const StartRtSessionResponse& from)
    {
        StartRtSessionResponse::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(StartRtSessionResponse* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.StartRtSessionResponse";
    }

   protected:
    explicit StartRtSessionResponse(::google::protobuf::Arena* arena);
    StartRtSessionResponse(::google::protobuf::Arena* arena,
                           const StartRtSessionResponse& from);
    StartRtSessionResponse(::google::protobuf::Arena* arena,
                           StartRtSessionResponse&& from) noexcept
        : StartRtSessionResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kCommandReceiverUriFieldNumber = 1,
    };
    // string command_receiver_uri = 1;
    void clear_command_receiver_uri();
    const std::string& command_receiver_uri() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_command_receiver_uri(Arg_&& arg, Args_... args);
    std::string* mutable_command_receiver_uri();
    PROTOBUF_NODISCARD std::string* release_command_receiver_uri();
    void set_allocated_command_receiver_uri(std::string* value);

   private:
    const std::string& _internal_command_receiver_uri() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_command_receiver_uri(
        const std::string& value);
    std::string* _internal_mutable_command_receiver_uri();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 83, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_StartRtSessionResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const StartRtSessionResponse& from_msg);
        ::google::protobuf::internal::ArenaStringPtr command_receiver_uri_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
};
// -------------------------------------------------------------------

class StartRtSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
 */
{
   public:
    inline StartRtSessionRequest() : StartRtSessionRequest(nullptr) {}
    ~StartRtSessionRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR StartRtSessionRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline StartRtSessionRequest(const StartRtSessionRequest& from)
        : StartRtSessionRequest(nullptr, from)
    {}
    inline StartRtSessionRequest(StartRtSessionRequest&& from) noexcept
        : StartRtSessionRequest(nullptr, std::move(from))
    {}
    inline StartRtSessionRequest& operator=(const StartRtSessionRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline StartRtSessionRequest& operator=(
        StartRtSessionRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const StartRtSessionRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const StartRtSessionRequest* internal_default_instance()
    {
        return reinterpret_cast<const StartRtSessionRequest*>(
            &_StartRtSessionRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 0;
    friend void swap(StartRtSessionRequest& a, StartRtSessionRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(StartRtSessionRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(StartRtSessionRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    StartRtSessionRequest* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            StartRtSessionRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const StartRtSessionRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const StartRtSessionRequest& from)
    {
        StartRtSessionRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(StartRtSessionRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.StartRtSessionRequest";
    }

   protected:
    explicit StartRtSessionRequest(::google::protobuf::Arena* arena);
    StartRtSessionRequest(::google::protobuf::Arena* arena,
                          const StartRtSessionRequest& from);
    StartRtSessionRequest(::google::protobuf::Arena* arena,
                          StartRtSessionRequest&& from) noexcept
        : StartRtSessionRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kStateReceiverUriFieldNumber = 1,
        kRtSessionIdFieldNumber = 2,
    };
    // string state_receiver_uri = 1;
    void clear_state_receiver_uri();
    const std::string& state_receiver_uri() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_state_receiver_uri(Arg_&& arg, Args_... args);
    std::string* mutable_state_receiver_uri();
    PROTOBUF_NODISCARD std::string* release_state_receiver_uri();
    void set_allocated_state_receiver_uri(std::string* value);

   private:
    const std::string& _internal_state_receiver_uri() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_receiver_uri(
        const std::string& value);
    std::string* _internal_mutable_state_receiver_uri();

   public:
    // int32 rt_session_id = 2;
    void clear_rt_session_id();
    ::int32_t rt_session_id() const;
    void set_rt_session_id(::int32_t value);

   private:
    ::int32_t _internal_rt_session_id() const;
    void _internal_set_rt_session_id(::int32_t value);

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 80, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_StartRtSessionRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const StartRtSessionRequest& from_msg);
        ::google::protobuf::internal::ArenaStringPtr state_receiver_uri_;
        ::int32_t rt_session_id_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
};
// -------------------------------------------------------------------

class RtStateFragment_EngineEntity final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
 */
{
   public:
    inline RtStateFragment_EngineEntity()
        : RtStateFragment_EngineEntity(nullptr)
    {}
    ~RtStateFragment_EngineEntity() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RtStateFragment_EngineEntity(
        ::google::protobuf::internal::ConstantInitialized);

    inline RtStateFragment_EngineEntity(
        const RtStateFragment_EngineEntity& from)
        : RtStateFragment_EngineEntity(nullptr, from)
    {}
    inline RtStateFragment_EngineEntity(
        RtStateFragment_EngineEntity&& from) noexcept
        : RtStateFragment_EngineEntity(nullptr, std::move(from))
    {}
    inline RtStateFragment_EngineEntity& operator=(
        const RtStateFragment_EngineEntity& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RtStateFragment_EngineEntity& operator=(
        RtStateFragment_EngineEntity&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RtStateFragment_EngineEntity& default_instance()
    {
        return *internal_default_instance();
    }
    enum TypeCase
    {
        kParameter = 100,
        kPlayhead = 101,
        TYPE_NOT_SET = 0,
    };
    static inline const RtStateFragment_EngineEntity*
    internal_default_instance()
    {
        return reinterpret_cast<const RtStateFragment_EngineEntity*>(
            &_RtStateFragment_EngineEntity_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 6;
    friend void swap(RtStateFragment_EngineEntity& a,
                     RtStateFragment_EngineEntity& b)
    {
        a.Swap(&b);
    }
    inline void Swap(RtStateFragment_EngineEntity* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RtStateFragment_EngineEntity* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RtStateFragment_EngineEntity* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            RtStateFragment_EngineEntity>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RtStateFragment_EngineEntity& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RtStateFragment_EngineEntity& from)
    {
        RtStateFragment_EngineEntity::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RtStateFragment_EngineEntity* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity";
    }

   protected:
    explicit RtStateFragment_EngineEntity(::google::protobuf::Arena* arena);
    RtStateFragment_EngineEntity(::google::protobuf::Arena* arena,
                                 const RtStateFragment_EngineEntity& from);
    RtStateFragment_EngineEntity(::google::protobuf::Arena* arena,
                                 RtStateFragment_EngineEntity&& from) noexcept
        : RtStateFragment_EngineEntity(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kParameterFieldNumber = 100,
        kPlayheadFieldNumber = 101,
    };
    // .novonotes.audio_engine.v1alpha1.RtParameter parameter = 100;
    bool has_parameter() const;

   private:
    bool _internal_has_parameter() const;

   public:
    void clear_parameter();
    const ::novonotes::audio_engine::v1alpha1::RtParameter& parameter() const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::RtParameter*
    release_parameter();
    ::novonotes::audio_engine::v1alpha1::RtParameter* mutable_parameter();
    void set_allocated_parameter(
        ::novonotes::audio_engine::v1alpha1::RtParameter* value);
    void unsafe_arena_set_allocated_parameter(
        ::novonotes::audio_engine::v1alpha1::RtParameter* value);
    ::novonotes::audio_engine::v1alpha1::RtParameter*
    unsafe_arena_release_parameter();

   private:
    const ::novonotes::audio_engine::v1alpha1::RtParameter&
    _internal_parameter() const;
    ::novonotes::audio_engine::v1alpha1::RtParameter*
    _internal_mutable_parameter();

   public:
    // .novonotes.audio_engine.v1alpha1.RtPlayheadPosition playhead = 101;
    bool has_playhead() const;

   private:
    bool _internal_has_playhead() const;

   public:
    void clear_playhead();
    const ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition& playhead()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition*
    release_playhead();
    ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition* mutable_playhead();
    void set_allocated_playhead(
        ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition* value);
    void unsafe_arena_set_allocated_playhead(
        ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition* value);
    ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition*
    unsafe_arena_release_playhead();

   private:
    const ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition&
    _internal_playhead() const;
    ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition*
    _internal_mutable_playhead();

   public:
    void clear_type();
    TypeCase type_case() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
   private:
    class _Internal;
    void set_has_parameter();
    void set_has_playhead();
    inline bool has_type() const;
    inline void clear_has_type();
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 2, 2, 0, 7>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RtStateFragment_EngineEntity_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RtStateFragment_EngineEntity& from_msg);
        union TypeUnion
        {
            constexpr TypeUnion() : _constinit_{} {}
            ::google::protobuf::internal::ConstantInitialized _constinit_;
            ::novonotes::audio_engine::v1alpha1::RtParameter* parameter_;
            ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition* playhead_;
        } type_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::uint32_t _oneof_case_[1];
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
};
// -------------------------------------------------------------------

class RtCommandBatch_Command final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
 */
{
   public:
    inline RtCommandBatch_Command() : RtCommandBatch_Command(nullptr) {}
    ~RtCommandBatch_Command() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RtCommandBatch_Command(
        ::google::protobuf::internal::ConstantInitialized);

    inline RtCommandBatch_Command(const RtCommandBatch_Command& from)
        : RtCommandBatch_Command(nullptr, from)
    {}
    inline RtCommandBatch_Command(RtCommandBatch_Command&& from) noexcept
        : RtCommandBatch_Command(nullptr, std::move(from))
    {}
    inline RtCommandBatch_Command& operator=(const RtCommandBatch_Command& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RtCommandBatch_Command& operator=(
        RtCommandBatch_Command&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RtCommandBatch_Command& default_instance()
    {
        return *internal_default_instance();
    }
    enum TypeCase
    {
        kUpdateParameter = 100,
        kFinalizeParameter = 101,
        TYPE_NOT_SET = 0,
    };
    static inline const RtCommandBatch_Command* internal_default_instance()
    {
        return reinterpret_cast<const RtCommandBatch_Command*>(
            &_RtCommandBatch_Command_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 4;
    friend void swap(RtCommandBatch_Command& a, RtCommandBatch_Command& b)
    {
        a.Swap(&b);
    }
    inline void Swap(RtCommandBatch_Command* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RtCommandBatch_Command* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RtCommandBatch_Command* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            RtCommandBatch_Command>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RtCommandBatch_Command& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RtCommandBatch_Command& from)
    {
        RtCommandBatch_Command::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RtCommandBatch_Command* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.RtCommandBatch.Command";
    }

   protected:
    explicit RtCommandBatch_Command(::google::protobuf::Arena* arena);
    RtCommandBatch_Command(::google::protobuf::Arena* arena,
                           const RtCommandBatch_Command& from);
    RtCommandBatch_Command(::google::protobuf::Arena* arena,
                           RtCommandBatch_Command&& from) noexcept
        : RtCommandBatch_Command(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kUpdateParameterFieldNumber = 100,
        kFinalizeParameterFieldNumber = 101,
    };
    // .novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand
    // update_parameter = 100;
    bool has_update_parameter() const;

   private:
    bool _internal_has_update_parameter() const;

   public:
    void clear_update_parameter();
    const ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand&
    update_parameter() const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::
        RtUpdateParameterCommand*
        release_update_parameter();
    ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
    mutable_update_parameter();
    void set_allocated_update_parameter(
        ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand* value);
    void unsafe_arena_set_allocated_update_parameter(
        ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand* value);
    ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
    unsafe_arena_release_update_parameter();

   private:
    const ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand&
    _internal_update_parameter() const;
    ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
    _internal_mutable_update_parameter();

   public:
    // .novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand
    // finalize_parameter = 101;
    bool has_finalize_parameter() const;

   private:
    bool _internal_has_finalize_parameter() const;

   public:
    void clear_finalize_parameter();
    const ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand&
    finalize_parameter() const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::
        RtFinalizeParameterCommand*
        release_finalize_parameter();
    ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
    mutable_finalize_parameter();
    void set_allocated_finalize_parameter(
        ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand* value);
    void unsafe_arena_set_allocated_finalize_parameter(
        ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand* value);
    ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
    unsafe_arena_release_finalize_parameter();

   private:
    const ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand&
    _internal_finalize_parameter() const;
    ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
    _internal_mutable_finalize_parameter();

   public:
    void clear_type();
    TypeCase type_case() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
   private:
    class _Internal;
    void set_has_update_parameter();
    void set_has_finalize_parameter();
    inline bool has_type() const;
    inline void clear_has_type();
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 2, 2, 0, 7>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RtCommandBatch_Command_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RtCommandBatch_Command& from_msg);
        union TypeUnion
        {
            constexpr TypeUnion() : _constinit_{} {}
            ::google::protobuf::internal::ConstantInitialized _constinit_;
            ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
                update_parameter_;
            ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
                finalize_parameter_;
        } type_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::uint32_t _oneof_case_[1];
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
};
// -------------------------------------------------------------------

class RtStateFragment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RtStateFragment)
 */
{
   public:
    inline RtStateFragment() : RtStateFragment(nullptr) {}
    ~RtStateFragment() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RtStateFragment(
        ::google::protobuf::internal::ConstantInitialized);

    inline RtStateFragment(const RtStateFragment& from)
        : RtStateFragment(nullptr, from)
    {}
    inline RtStateFragment(RtStateFragment&& from) noexcept
        : RtStateFragment(nullptr, std::move(from))
    {}
    inline RtStateFragment& operator=(const RtStateFragment& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RtStateFragment& operator=(RtStateFragment&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RtStateFragment& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const RtStateFragment* internal_default_instance()
    {
        return reinterpret_cast<const RtStateFragment*>(
            &_RtStateFragment_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 7;
    friend void swap(RtStateFragment& a, RtStateFragment& b) { a.Swap(&b); }
    inline void Swap(RtStateFragment* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RtStateFragment* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RtStateFragment* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<RtStateFragment>(
            arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RtStateFragment& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RtStateFragment& from)
    {
        RtStateFragment::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RtStateFragment* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.RtStateFragment";
    }

   protected:
    explicit RtStateFragment(::google::protobuf::Arena* arena);
    RtStateFragment(::google::protobuf::Arena* arena,
                    const RtStateFragment& from);
    RtStateFragment(::google::protobuf::Arena* arena,
                    RtStateFragment&& from) noexcept
        : RtStateFragment(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------
    using EngineEntity = RtStateFragment_EngineEntity;

    // accessors -------------------------------------------------------
    enum : int
    {
        kEntitySubsetFieldNumber = 1,
    };
    // repeated .novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity
    // entity_subset = 1;
    int entity_subset_size() const;

   private:
    int _internal_entity_subset_size() const;

   public:
    void clear_entity_subset();
    ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity*
    mutable_entity_subset(int index);
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>*
    mutable_entity_subset();

   private:
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>&
    _internal_entity_subset() const;
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>*
    _internal_mutable_entity_subset();

   public:
    const ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity&
    entity_subset(int index) const;
    ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity*
    add_entity_subset();
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>&
    entity_subset() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RtStateFragment)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RtStateFragment_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RtStateFragment& from_msg);
        ::google::protobuf::RepeatedPtrField<
            ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>
            entity_subset_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
};
// -------------------------------------------------------------------

class RtCommandBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.RtCommandBatch)
 */
{
   public:
    inline RtCommandBatch() : RtCommandBatch(nullptr) {}
    ~RtCommandBatch() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR RtCommandBatch(
        ::google::protobuf::internal::ConstantInitialized);

    inline RtCommandBatch(const RtCommandBatch& from)
        : RtCommandBatch(nullptr, from)
    {}
    inline RtCommandBatch(RtCommandBatch&& from) noexcept
        : RtCommandBatch(nullptr, std::move(from))
    {}
    inline RtCommandBatch& operator=(const RtCommandBatch& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline RtCommandBatch& operator=(RtCommandBatch&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const RtCommandBatch& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const RtCommandBatch* internal_default_instance()
    {
        return reinterpret_cast<const RtCommandBatch*>(
            &_RtCommandBatch_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 5;
    friend void swap(RtCommandBatch& a, RtCommandBatch& b) { a.Swap(&b); }
    inline void Swap(RtCommandBatch* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(RtCommandBatch* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    RtCommandBatch* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<RtCommandBatch>(
            arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const RtCommandBatch& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const RtCommandBatch& from)
    {
        RtCommandBatch::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(RtCommandBatch* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.RtCommandBatch";
    }

   protected:
    explicit RtCommandBatch(::google::protobuf::Arena* arena);
    RtCommandBatch(::google::protobuf::Arena* arena,
                   const RtCommandBatch& from);
    RtCommandBatch(::google::protobuf::Arena* arena,
                   RtCommandBatch&& from) noexcept
        : RtCommandBatch(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------
    using Command = RtCommandBatch_Command;

    // accessors -------------------------------------------------------
    enum : int
    {
        kCommandsFieldNumber = 1,
    };
    // repeated .novonotes.audio_engine.v1alpha1.RtCommandBatch.Command commands
    // = 1;
    int commands_size() const;

   private:
    int _internal_commands_size() const;

   public:
    void clear_commands();
    ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command*
    mutable_commands(int index);
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>*
    mutable_commands();

   private:
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>&
    _internal_commands() const;
    ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>*
    _internal_mutable_commands();

   public:
    const ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command& commands(
        int index) const;
    ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command* add_commands();
    const ::google::protobuf::RepeatedPtrField<
        ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>&
    commands() const;
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.RtCommandBatch)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_RtCommandBatch_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const RtCommandBatch& from_msg);
        ::google::protobuf::RepeatedPtrField<
            ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>
            commands_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto;
};

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StartRtSessionRequest

// string state_receiver_uri = 1;
inline void StartRtSessionRequest::clear_state_receiver_uri()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_receiver_uri_.ClearToEmpty();
}
inline const std::string& StartRtSessionRequest::state_receiver_uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.StartRtSessionRequest.state_receiver_uri)
    return _internal_state_receiver_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
StartRtSessionRequest::set_state_receiver_uri(Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_receiver_uri_.Set(static_cast<Arg_&&>(arg), args...,
                                   GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.StartRtSessionRequest.state_receiver_uri)
}
inline std::string* StartRtSessionRequest::mutable_state_receiver_uri()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_state_receiver_uri();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.StartRtSessionRequest.state_receiver_uri)
    return _s;
}
inline const std::string& StartRtSessionRequest::_internal_state_receiver_uri()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.state_receiver_uri_.Get();
}
inline void StartRtSessionRequest::_internal_set_state_receiver_uri(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_receiver_uri_.Set(value, GetArena());
}
inline std::string*
StartRtSessionRequest::_internal_mutable_state_receiver_uri()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.state_receiver_uri_.Mutable(GetArena());
}
inline std::string* StartRtSessionRequest::release_state_receiver_uri()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.StartRtSessionRequest.state_receiver_uri)
    return _impl_.state_receiver_uri_.Release();
}
inline void StartRtSessionRequest::set_allocated_state_receiver_uri(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.state_receiver_uri_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.state_receiver_uri_.IsDefault())
    {
        _impl_.state_receiver_uri_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.StartRtSessionRequest.state_receiver_uri)
}

// int32 rt_session_id = 2;
inline void StartRtSessionRequest::clear_rt_session_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.rt_session_id_ = 0;
}
inline ::int32_t StartRtSessionRequest::rt_session_id() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.StartRtSessionRequest.rt_session_id)
    return _internal_rt_session_id();
}
inline void StartRtSessionRequest::set_rt_session_id(::int32_t value)
{
    _internal_set_rt_session_id(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.StartRtSessionRequest.rt_session_id)
}
inline ::int32_t StartRtSessionRequest::_internal_rt_session_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.rt_session_id_;
}
inline void StartRtSessionRequest::_internal_set_rt_session_id(::int32_t value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.rt_session_id_ = value;
}

// -------------------------------------------------------------------

// StartRtSessionResponse

// string command_receiver_uri = 1;
inline void StartRtSessionResponse::clear_command_receiver_uri()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.command_receiver_uri_.ClearToEmpty();
}
inline const std::string& StartRtSessionResponse::command_receiver_uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.StartRtSessionResponse.command_receiver_uri)
    return _internal_command_receiver_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
StartRtSessionResponse::set_command_receiver_uri(Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.command_receiver_uri_.Set(static_cast<Arg_&&>(arg), args...,
                                     GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.StartRtSessionResponse.command_receiver_uri)
}
inline std::string* StartRtSessionResponse::mutable_command_receiver_uri()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_command_receiver_uri();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.StartRtSessionResponse.command_receiver_uri)
    return _s;
}
inline const std::string&
StartRtSessionResponse::_internal_command_receiver_uri() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.command_receiver_uri_.Get();
}
inline void StartRtSessionResponse::_internal_set_command_receiver_uri(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.command_receiver_uri_.Set(value, GetArena());
}
inline std::string*
StartRtSessionResponse::_internal_mutable_command_receiver_uri()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.command_receiver_uri_.Mutable(GetArena());
}
inline std::string* StartRtSessionResponse::release_command_receiver_uri()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.StartRtSessionResponse.command_receiver_uri)
    return _impl_.command_receiver_uri_.Release();
}
inline void StartRtSessionResponse::set_allocated_command_receiver_uri(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.command_receiver_uri_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.command_receiver_uri_.IsDefault())
    {
        _impl_.command_receiver_uri_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.StartRtSessionResponse.command_receiver_uri)
}

// -------------------------------------------------------------------

// StopRtSessionRequest

// int32 rt_session_id = 3;
inline void StopRtSessionRequest::clear_rt_session_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.rt_session_id_ = 0;
}
inline ::int32_t StopRtSessionRequest::rt_session_id() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.StopRtSessionRequest.rt_session_id)
    return _internal_rt_session_id();
}
inline void StopRtSessionRequest::set_rt_session_id(::int32_t value)
{
    _internal_set_rt_session_id(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.StopRtSessionRequest.rt_session_id)
}
inline ::int32_t StopRtSessionRequest::_internal_rt_session_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.rt_session_id_;
}
inline void StopRtSessionRequest::_internal_set_rt_session_id(::int32_t value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.rt_session_id_ = value;
}

// -------------------------------------------------------------------

// StopRtSessionResponse

// -------------------------------------------------------------------

// RtCommandBatch_Command

// .novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand update_parameter =
// 100;
inline bool RtCommandBatch_Command::has_update_parameter() const
{
    return type_case() == kUpdateParameter;
}
inline bool RtCommandBatch_Command::_internal_has_update_parameter() const
{
    return type_case() == kUpdateParameter;
}
inline void RtCommandBatch_Command::set_has_update_parameter()
{
    _impl_._oneof_case_[0] = kUpdateParameter;
}
inline ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
RtCommandBatch_Command::release_update_parameter()
{
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.update_parameter)
    if(type_case() == kUpdateParameter)
    {
        clear_has_type();
        auto* temp = _impl_.type_.update_parameter_;
        if(GetArena() != nullptr)
        {
            temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
        }
        _impl_.type_.update_parameter_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline const ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand&
RtCommandBatch_Command::_internal_update_parameter() const
{
    return type_case() == kUpdateParameter
               ? *_impl_.type_.update_parameter_
               : reinterpret_cast<::novonotes::audio_engine::v1alpha1::
                                      RtUpdateParameterCommand&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _RtUpdateParameterCommand_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand&
RtCommandBatch_Command::update_parameter() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.update_parameter)
    return _internal_update_parameter();
}
inline ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
RtCommandBatch_Command::unsafe_arena_release_update_parameter()
{
    // @@protoc_insertion_point(field_unsafe_arena_release:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.update_parameter)
    if(type_case() == kUpdateParameter)
    {
        clear_has_type();
        auto* temp = _impl_.type_.update_parameter_;
        _impl_.type_.update_parameter_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline void RtCommandBatch_Command::unsafe_arena_set_allocated_update_parameter(
    ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand* value)
{
    // We rely on the oneof clear method to free the earlier contents
    // of this oneof. We can directly use the pointer we're given to
    // set the new value.
    clear_type();
    if(value)
    {
        set_has_update_parameter();
        _impl_.type_.update_parameter_ = value;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.update_parameter)
}
inline ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
RtCommandBatch_Command::_internal_mutable_update_parameter()
{
    if(type_case() != kUpdateParameter)
    {
        clear_type();
        set_has_update_parameter();
        _impl_.type_.update_parameter_ =
            ::google::protobuf::Message::DefaultConstruct<
                ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand>(
                GetArena());
    }
    return _impl_.type_.update_parameter_;
}
inline ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
RtCommandBatch_Command::mutable_update_parameter() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand* _msg =
        _internal_mutable_update_parameter();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.update_parameter)
    return _msg;
}

// .novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand
// finalize_parameter = 101;
inline bool RtCommandBatch_Command::has_finalize_parameter() const
{
    return type_case() == kFinalizeParameter;
}
inline bool RtCommandBatch_Command::_internal_has_finalize_parameter() const
{
    return type_case() == kFinalizeParameter;
}
inline void RtCommandBatch_Command::set_has_finalize_parameter()
{
    _impl_._oneof_case_[0] = kFinalizeParameter;
}
inline ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
RtCommandBatch_Command::release_finalize_parameter()
{
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.finalize_parameter)
    if(type_case() == kFinalizeParameter)
    {
        clear_has_type();
        auto* temp = _impl_.type_.finalize_parameter_;
        if(GetArena() != nullptr)
        {
            temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
        }
        _impl_.type_.finalize_parameter_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline const ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand&
RtCommandBatch_Command::_internal_finalize_parameter() const
{
    return type_case() == kFinalizeParameter
               ? *_impl_.type_.finalize_parameter_
               : reinterpret_cast<::novonotes::audio_engine::v1alpha1::
                                      RtFinalizeParameterCommand&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _RtFinalizeParameterCommand_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand&
RtCommandBatch_Command::finalize_parameter() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.finalize_parameter)
    return _internal_finalize_parameter();
}
inline ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
RtCommandBatch_Command::unsafe_arena_release_finalize_parameter()
{
    // @@protoc_insertion_point(field_unsafe_arena_release:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.finalize_parameter)
    if(type_case() == kFinalizeParameter)
    {
        clear_has_type();
        auto* temp = _impl_.type_.finalize_parameter_;
        _impl_.type_.finalize_parameter_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline void
RtCommandBatch_Command::unsafe_arena_set_allocated_finalize_parameter(
    ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand* value)
{
    // We rely on the oneof clear method to free the earlier contents
    // of this oneof. We can directly use the pointer we're given to
    // set the new value.
    clear_type();
    if(value)
    {
        set_has_finalize_parameter();
        _impl_.type_.finalize_parameter_ = value;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.finalize_parameter)
}
inline ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
RtCommandBatch_Command::_internal_mutable_finalize_parameter()
{
    if(type_case() != kFinalizeParameter)
    {
        clear_type();
        set_has_finalize_parameter();
        _impl_.type_.finalize_parameter_ =
            ::google::protobuf::Message::DefaultConstruct<
                ::novonotes::audio_engine::v1alpha1::
                    RtFinalizeParameterCommand>(GetArena());
    }
    return _impl_.type_.finalize_parameter_;
}
inline ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
RtCommandBatch_Command::mutable_finalize_parameter()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand* _msg =
        _internal_mutable_finalize_parameter();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.finalize_parameter)
    return _msg;
}

inline bool RtCommandBatch_Command::has_type() const
{
    return type_case() != TYPE_NOT_SET;
}
inline void RtCommandBatch_Command::clear_has_type()
{
    _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline RtCommandBatch_Command::TypeCase RtCommandBatch_Command::type_case()
    const
{
    return RtCommandBatch_Command::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RtCommandBatch

// repeated .novonotes.audio_engine.v1alpha1.RtCommandBatch.Command commands =
// 1;
inline int RtCommandBatch::_internal_commands_size() const
{
    return _internal_commands().size();
}
inline int RtCommandBatch::commands_size() const
{
    return _internal_commands_size();
}
inline void RtCommandBatch::clear_commands()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.commands_.Clear();
}
inline ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command*
RtCommandBatch::mutable_commands(int index) ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtCommandBatch.commands)
    return _internal_mutable_commands()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>*
RtCommandBatch::mutable_commands() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.RtCommandBatch.commands)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_commands();
}
inline const ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command&
RtCommandBatch::commands(int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtCommandBatch.commands)
    return _internal_commands().Get(index);
}
inline ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command*
RtCommandBatch::add_commands() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command* _add =
        _internal_mutable_commands()->Add();
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.RtCommandBatch.commands)
    return _add;
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>&
RtCommandBatch::commands() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.RtCommandBatch.commands)
    return _internal_commands();
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>&
RtCommandBatch::_internal_commands() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.commands_;
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>*
RtCommandBatch::_internal_mutable_commands()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.commands_;
}

// -------------------------------------------------------------------

// RtStateFragment_EngineEntity

// .novonotes.audio_engine.v1alpha1.RtParameter parameter = 100;
inline bool RtStateFragment_EngineEntity::has_parameter() const
{
    return type_case() == kParameter;
}
inline bool RtStateFragment_EngineEntity::_internal_has_parameter() const
{
    return type_case() == kParameter;
}
inline void RtStateFragment_EngineEntity::set_has_parameter()
{
    _impl_._oneof_case_[0] = kParameter;
}
inline ::novonotes::audio_engine::v1alpha1::RtParameter*
RtStateFragment_EngineEntity::release_parameter()
{
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.parameter)
    if(type_case() == kParameter)
    {
        clear_has_type();
        auto* temp = _impl_.type_.parameter_;
        if(GetArena() != nullptr)
        {
            temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
        }
        _impl_.type_.parameter_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline const ::novonotes::audio_engine::v1alpha1::RtParameter&
RtStateFragment_EngineEntity::_internal_parameter() const
{
    return type_case() == kParameter
               ? *_impl_.type_.parameter_
               : reinterpret_cast<
                     ::novonotes::audio_engine::v1alpha1::RtParameter&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _RtParameter_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::RtParameter&
RtStateFragment_EngineEntity::parameter() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.parameter)
    return _internal_parameter();
}
inline ::novonotes::audio_engine::v1alpha1::RtParameter*
RtStateFragment_EngineEntity::unsafe_arena_release_parameter()
{
    // @@protoc_insertion_point(field_unsafe_arena_release:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.parameter)
    if(type_case() == kParameter)
    {
        clear_has_type();
        auto* temp = _impl_.type_.parameter_;
        _impl_.type_.parameter_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline void RtStateFragment_EngineEntity::unsafe_arena_set_allocated_parameter(
    ::novonotes::audio_engine::v1alpha1::RtParameter* value)
{
    // We rely on the oneof clear method to free the earlier contents
    // of this oneof. We can directly use the pointer we're given to
    // set the new value.
    clear_type();
    if(value)
    {
        set_has_parameter();
        _impl_.type_.parameter_ = value;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.parameter)
}
inline ::novonotes::audio_engine::v1alpha1::RtParameter*
RtStateFragment_EngineEntity::_internal_mutable_parameter()
{
    if(type_case() != kParameter)
    {
        clear_type();
        set_has_parameter();
        _impl_.type_.parameter_ = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::RtParameter>(GetArena());
    }
    return _impl_.type_.parameter_;
}
inline ::novonotes::audio_engine::v1alpha1::RtParameter*
RtStateFragment_EngineEntity::mutable_parameter() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::novonotes::audio_engine::v1alpha1::RtParameter* _msg =
        _internal_mutable_parameter();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.parameter)
    return _msg;
}

// .novonotes.audio_engine.v1alpha1.RtPlayheadPosition playhead = 101;
inline bool RtStateFragment_EngineEntity::has_playhead() const
{
    return type_case() == kPlayhead;
}
inline bool RtStateFragment_EngineEntity::_internal_has_playhead() const
{
    return type_case() == kPlayhead;
}
inline void RtStateFragment_EngineEntity::set_has_playhead()
{
    _impl_._oneof_case_[0] = kPlayhead;
}
inline ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition*
RtStateFragment_EngineEntity::release_playhead()
{
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.playhead)
    if(type_case() == kPlayhead)
    {
        clear_has_type();
        auto* temp = _impl_.type_.playhead_;
        if(GetArena() != nullptr)
        {
            temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
        }
        _impl_.type_.playhead_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline const ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition&
RtStateFragment_EngineEntity::_internal_playhead() const
{
    return type_case() == kPlayhead
               ? *_impl_.type_.playhead_
               : reinterpret_cast<
                     ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _RtPlayheadPosition_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition&
RtStateFragment_EngineEntity::playhead() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.playhead)
    return _internal_playhead();
}
inline ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition*
RtStateFragment_EngineEntity::unsafe_arena_release_playhead()
{
    // @@protoc_insertion_point(field_unsafe_arena_release:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.playhead)
    if(type_case() == kPlayhead)
    {
        clear_has_type();
        auto* temp = _impl_.type_.playhead_;
        _impl_.type_.playhead_ = nullptr;
        return temp;
    }
    else
    {
        return nullptr;
    }
}
inline void RtStateFragment_EngineEntity::unsafe_arena_set_allocated_playhead(
    ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition* value)
{
    // We rely on the oneof clear method to free the earlier contents
    // of this oneof. We can directly use the pointer we're given to
    // set the new value.
    clear_type();
    if(value)
    {
        set_has_playhead();
        _impl_.type_.playhead_ = value;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.playhead)
}
inline ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition*
RtStateFragment_EngineEntity::_internal_mutable_playhead()
{
    if(type_case() != kPlayhead)
    {
        clear_type();
        set_has_playhead();
        _impl_.type_.playhead_ = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition>(
            GetArena());
    }
    return _impl_.type_.playhead_;
}
inline ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition*
RtStateFragment_EngineEntity::mutable_playhead() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition* _msg =
        _internal_mutable_playhead();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.playhead)
    return _msg;
}

inline bool RtStateFragment_EngineEntity::has_type() const
{
    return type_case() != TYPE_NOT_SET;
}
inline void RtStateFragment_EngineEntity::clear_has_type()
{
    _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline RtStateFragment_EngineEntity::TypeCase
RtStateFragment_EngineEntity::type_case() const
{
    return RtStateFragment_EngineEntity::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RtStateFragment

// repeated .novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity
// entity_subset = 1;
inline int RtStateFragment::_internal_entity_subset_size() const
{
    return _internal_entity_subset().size();
}
inline int RtStateFragment::entity_subset_size() const
{
    return _internal_entity_subset_size();
}
inline void RtStateFragment::clear_entity_subset()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.entity_subset_.Clear();
}
inline ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity*
RtStateFragment::mutable_entity_subset(int index) ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.RtStateFragment.entity_subset)
    return _internal_mutable_entity_subset()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>*
RtStateFragment::mutable_entity_subset() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.RtStateFragment.entity_subset)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_entity_subset();
}
inline const ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity&
RtStateFragment::entity_subset(int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.RtStateFragment.entity_subset)
    return _internal_entity_subset().Get(index);
}
inline ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity*
RtStateFragment::add_entity_subset() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity* _add =
        _internal_mutable_entity_subset()->Add();
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.RtStateFragment.entity_subset)
    return _add;
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>&
RtStateFragment::entity_subset() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.RtStateFragment.entity_subset)
    return _internal_entity_subset();
}
inline const ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>&
RtStateFragment::_internal_entity_subset() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.entity_subset_;
}
inline ::google::protobuf::RepeatedPtrField<
    ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity>*
RtStateFragment::_internal_mutable_entity_subset()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.entity_subset_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto_2epb_2eh
