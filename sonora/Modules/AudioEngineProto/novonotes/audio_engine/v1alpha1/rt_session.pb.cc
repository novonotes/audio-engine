// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/rt_session.proto
// Protobuf C++ Version: 5.28.1

#include "novonotes/audio_engine/v1alpha1/rt_session.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
template <typename>
PROTOBUF_CONSTEXPR StopRtSessionResponse::StopRtSessionResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct StopRtSessionResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR StopRtSessionResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~StopRtSessionResponseDefaultTypeInternal() {}
    union
    {
        StopRtSessionResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopRtSessionResponseDefaultTypeInternal
        _StopRtSessionResponse_default_instance_;

inline constexpr StopRtSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : rt_session_id_{0}
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR StopRtSessionRequest::StopRtSessionRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct StopRtSessionRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR StopRtSessionRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~StopRtSessionRequestDefaultTypeInternal() {}
    union
    {
        StopRtSessionRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopRtSessionRequestDefaultTypeInternal
        _StopRtSessionRequest_default_instance_;

inline constexpr StartRtSessionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : command_receiver_uri_(
          &::google::protobuf::internal::fixed_address_empty_string,
          ::_pbi::ConstantInitialized())
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR StartRtSessionResponse::StartRtSessionResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct StartRtSessionResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR StartRtSessionResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~StartRtSessionResponseDefaultTypeInternal() {}
    union
    {
        StartRtSessionResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartRtSessionResponseDefaultTypeInternal
        _StartRtSessionResponse_default_instance_;

inline constexpr StartRtSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : state_receiver_uri_(
          &::google::protobuf::internal::fixed_address_empty_string,
          ::_pbi::ConstantInitialized())
    , rt_session_id_{0}
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR StartRtSessionRequest::StartRtSessionRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct StartRtSessionRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR StartRtSessionRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~StartRtSessionRequestDefaultTypeInternal() {}
    union
    {
        StartRtSessionRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartRtSessionRequestDefaultTypeInternal
        _StartRtSessionRequest_default_instance_;

inline constexpr RtStateFragment_EngineEntity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : type_{}
    , _cached_size_{0}
    , _oneof_case_{}
{}

template <typename>
PROTOBUF_CONSTEXPR RtStateFragment_EngineEntity::RtStateFragment_EngineEntity(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct RtStateFragment_EngineEntityDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR RtStateFragment_EngineEntityDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~RtStateFragment_EngineEntityDefaultTypeInternal() {}
    union
    {
        RtStateFragment_EngineEntity _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        RtStateFragment_EngineEntityDefaultTypeInternal
            _RtStateFragment_EngineEntity_default_instance_;

inline constexpr RtCommandBatch_Command::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : type_{}
    , _cached_size_{0}
    , _oneof_case_{}
{}

template <typename>
PROTOBUF_CONSTEXPR RtCommandBatch_Command::RtCommandBatch_Command(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct RtCommandBatch_CommandDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR RtCommandBatch_CommandDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~RtCommandBatch_CommandDefaultTypeInternal() {}
    union
    {
        RtCommandBatch_Command _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RtCommandBatch_CommandDefaultTypeInternal
        _RtCommandBatch_Command_default_instance_;

inline constexpr RtStateFragment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : entity_subset_{}
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR RtStateFragment::RtStateFragment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct RtStateFragmentDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR RtStateFragmentDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~RtStateFragmentDefaultTypeInternal() {}
    union
    {
        RtStateFragment _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RtStateFragmentDefaultTypeInternal
        _RtStateFragment_default_instance_;

inline constexpr RtCommandBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : commands_{}
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR RtCommandBatch::RtCommandBatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct RtCommandBatchDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR RtCommandBatchDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~RtCommandBatchDefaultTypeInternal() {}
    union
    {
        RtCommandBatch _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RtCommandBatchDefaultTypeInternal
        _RtCommandBatch_default_instance_;
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto =
        nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto =
        nullptr;
const ::uint32_t
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto::
        offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::StartRtSessionRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::StartRtSessionRequest,
                _impl_.state_receiver_uri_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::StartRtSessionRequest,
                _impl_.rt_session_id_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::StartRtSessionResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::StartRtSessionResponse,
                _impl_.command_receiver_uri_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::StopRtSessionRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::StopRtSessionRequest,
                _impl_.rt_session_id_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::StopRtSessionResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command,
                _internal_metadata_),
            ~0u,  // no _extensions_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command,
                _impl_._oneof_case_[0]),
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            ::_pbi::kInvalidFieldOffsetTag,
            ::_pbi::kInvalidFieldOffsetTag,
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command,
                _impl_.type_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::RtCommandBatch,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::RtCommandBatch,
                _impl_.commands_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::
                                      RtStateFragment_EngineEntity,
                                  _internal_metadata_),
            ~0u,  // no _extensions_
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::
                                      RtStateFragment_EngineEntity,
                                  _impl_._oneof_case_[0]),
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            ::_pbi::kInvalidFieldOffsetTag,
            ::_pbi::kInvalidFieldOffsetTag,
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::
                                      RtStateFragment_EngineEntity,
                                  _impl_.type_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::RtStateFragment,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::RtStateFragment,
                _impl_.entity_subset_),
};

static const ::_pbi::MigrationSchema schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::StartRtSessionRequest)},
    {10, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::StartRtSessionResponse)},
    {19, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::StopRtSessionRequest)},
    {28, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::StopRtSessionResponse)},
    {36, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command)},
    {47, -1, -1, sizeof(::novonotes::audio_engine::v1alpha1::RtCommandBatch)},
    {56, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity)},
    {67, -1, -1, sizeof(::novonotes::audio_engine::v1alpha1::RtStateFragment)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::novonotes::audio_engine::v1alpha1::
         _StartRtSessionRequest_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _StartRtSessionResponse_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _StopRtSessionRequest_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _StopRtSessionResponse_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _RtCommandBatch_Command_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::_RtCommandBatch_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::
         _RtStateFragment_EngineEntity_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::_RtStateFragment_default_instance_
         ._instance,
};
const char
    descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto
        [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            "\n0novonotes/audio_engine/v1alpha1/rt_ses"
            "sion.proto\022\037novonotes.audio_engine.v1alp"
            "ha1\0325novonotes/audio_engine/v1alpha1/dev"
            "ice_instance.proto\032/novonotes/audio_engi"
            "ne/v1alpha1/transport.proto\"J\n\025StartRtSe"
            "ssionRequest\022\032\n\022state_receiver_uri\030\001 \001(\t"
            "\022\025\n\rrt_session_id\030\002 \001(\005\"6\n\026StartRtSessio"
            "nResponse\022\034\n\024command_receiver_uri\030\001 \001(\t\""
            "-\n\024StopRtSessionRequest\022\025\n\rrt_session_id"
            "\030\003 "
            "\001(\005\"\027\n\025StopRtSessionResponse\"\241\002\n\016RtCo"
            "mmandBatch\022I\n\010commands\030\001 \003(\01327.novonotes"
            ".audio_engine.v1alpha1.RtCommandBatch.Co"
            "mmand\032\303\001\n\007Command\022U\n\020update_parameter\030d "
            "\001(\01329.novonotes.audio_engine.v1alpha1.Rt"
            "UpdateParameterCommandH\000\022Y\n\022finalize_par"
            "ameter\030e \001(\0132;.novonotes.audio_engine.v1"
            "alpha1.RtFinalizeParameterCommandH\000B\006\n\004t"
            "ype\"\214\002\n\017RtStateFragment\022T\n\rentity_subset"
            "\030\001 \003(\0132=.novonotes.audio_engine.v1alpha1"
            ".RtStateFragment.EngineEntity\032\242\001\n\014Engine"
            "Entity\022A\n\tparameter\030d \001(\0132,.novonotes.au"
            "dio_engine.v1alpha1.RtParameterH\000\022G\n\010pla"
            "yhead\030e \001(\01323.novonotes.audio_engine.v1a"
            "lpha1.RtPlayheadPositionH\000B\006\n\004typeb\006prot"
            "o3"};
static const ::_pbi::DescriptorTable* const
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto_deps
        [2] = {
            &::descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5finstance_2eproto,
            &::descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftransport_2eproto,
};
static ::absl::once_flag
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto = {
        false,
        false,
        962,
        descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        "novonotes/audio_engine/v1alpha1/rt_session.proto",
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto_once,
        descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto_deps,
        2,
        8,
        schemas,
        file_default_instances,
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto::
            offsets,
        file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
};
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
// ===================================================================

class StartRtSessionRequest::_Internal
{
   public:
};

StartRtSessionRequest::StartRtSessionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE StartRtSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::StartRtSessionRequest& from_msg)
    : state_receiver_uri_(arena, from.state_receiver_uri_)
    , _cached_size_{0}
{}

StartRtSessionRequest::StartRtSessionRequest(::google::protobuf::Arena* arena,
                                             const StartRtSessionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    StartRtSessionRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    _impl_.rt_session_id_ = from._impl_.rt_session_id_;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE StartRtSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : state_receiver_uri_(arena)
    , _cached_size_{0}
{}

inline void StartRtSessionRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.rt_session_id_ = {};
}
StartRtSessionRequest::~StartRtSessionRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void StartRtSessionRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.state_receiver_uri_.Destroy();
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StartRtSessionRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StartRtSessionRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StartRtSessionRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StartRtSessionRequest>(),
            ::google::protobuf::Message::GetNewImpl<StartRtSessionRequest>(),
            ::google::protobuf::Message::GetClearImpl<StartRtSessionRequest>(),
            &StartRtSessionRequest::ByteSizeLong,
            &StartRtSessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StartRtSessionRequest, _impl_._cached_size_),
            false,
        },
        &StartRtSessionRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
StartRtSessionRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    1, 2, 0, 80, 2>
    StartRtSessionRequest::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            2, 8,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967292,  // skipmap
            offsetof(decltype(_table_), field_entries),
            2,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    StartRtSessionRequest>(),  // to_prefetch
#endif                                         // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // int32 rt_session_id = 2;
            {::_pbi::TcParser::SingularVarintNoZag1<
                 ::uint32_t,
                 offsetof(StartRtSessionRequest, _impl_.rt_session_id_), 63>(),
             {16, 63, 0,
              PROTOBUF_FIELD_OFFSET(StartRtSessionRequest,
                                    _impl_.rt_session_id_)}},
            // string state_receiver_uri = 1;
            {::_pbi::TcParser::FastUS1,
             {10, 63, 0,
              PROTOBUF_FIELD_OFFSET(StartRtSessionRequest,
                                    _impl_.state_receiver_uri_)}},
        }},
        {{65535, 65535}},
        {{
            // string state_receiver_uri = 1;
            {PROTOBUF_FIELD_OFFSET(StartRtSessionRequest,
                                   _impl_.state_receiver_uri_),
             0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // int32 rt_session_id = 2;
            {PROTOBUF_FIELD_OFFSET(StartRtSessionRequest,
                                   _impl_.rt_session_id_),
             0, 0, (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
        }},
        // no aux_entries
        {{"\65\22\0\0\0\0\0\0"
          "novonotes.audio_engine.v1alpha1.StartRtSessionRequest"
          "state_receiver_uri"}},
    };

PROTOBUF_NOINLINE void StartRtSessionRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.state_receiver_uri_.ClearToEmpty();
    _impl_.rt_session_id_ = 0;
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* StartRtSessionRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const StartRtSessionRequest& this_ =
        static_cast<const StartRtSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* StartRtSessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const StartRtSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string state_receiver_uri = 1;
    if(!this_._internal_state_receiver_uri().empty())
    {
        const std::string& _s = this_._internal_state_receiver_uri();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.StartRtSessionRequest.state_"
            "receiver_uri");
        target = stream->WriteStringMaybeAliased(1, _s, target);
    }

    // int32 rt_session_id = 2;
    if(this_._internal_rt_session_id() != 0)
    {
        target = ::google::protobuf::internal::WireFormatLite::
            WriteInt32ToArrayWithField<2>(
                stream, this_._internal_rt_session_id(), target);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StartRtSessionRequest::ByteSizeLong(const MessageLite& base)
{
    const StartRtSessionRequest& this_ =
        static_cast<const StartRtSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StartRtSessionRequest::ByteSizeLong() const
{
    const StartRtSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // string state_receiver_uri = 1;
        if(!this_._internal_state_receiver_uri().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_state_receiver_uri());
        }
        // int32 rt_session_id = 2;
        if(this_._internal_rt_session_id() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                this_._internal_rt_session_id());
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void StartRtSessionRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<StartRtSessionRequest*>(&to_msg);
    auto& from = static_cast<const StartRtSessionRequest&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(!from._internal_state_receiver_uri().empty())
    {
        _this->_internal_set_state_receiver_uri(
            from._internal_state_receiver_uri());
    }
    if(from._internal_rt_session_id() != 0)
    {
        _this->_impl_.rt_session_id_ = from._impl_.rt_session_id_;
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void StartRtSessionRequest::CopyFrom(const StartRtSessionRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.StartRtSessionRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void StartRtSessionRequest::InternalSwap(
    StartRtSessionRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    ::_pbi::ArenaStringPtr::InternalSwap(
        &_impl_.state_receiver_uri_, &other->_impl_.state_receiver_uri_, arena);
    swap(_impl_.rt_session_id_, other->_impl_.rt_session_id_);
}

::google::protobuf::Metadata StartRtSessionRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StartRtSessionResponse::_Internal
{
   public:
};

StartRtSessionResponse::StartRtSessionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartRtSessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::StartRtSessionResponse& from_msg)
    : command_receiver_uri_(arena, from.command_receiver_uri_)
    , _cached_size_{0}
{}

StartRtSessionResponse::StartRtSessionResponse(
    ::google::protobuf::Arena* arena, const StartRtSessionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    StartRtSessionResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE StartRtSessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : command_receiver_uri_(arena)
    , _cached_size_{0}
{}

inline void StartRtSessionResponse::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
StartRtSessionResponse::~StartRtSessionResponse()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void StartRtSessionResponse::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.command_receiver_uri_.Destroy();
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StartRtSessionResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StartRtSessionResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StartRtSessionResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<
                StartRtSessionResponse>(),
            ::google::protobuf::Message::GetNewImpl<StartRtSessionResponse>(),
            ::google::protobuf::Message::GetClearImpl<StartRtSessionResponse>(),
            &StartRtSessionResponse::ByteSizeLong,
            &StartRtSessionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StartRtSessionResponse, _impl_._cached_size_),
            false,
        },
        &StartRtSessionResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
StartRtSessionResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 1, 0, 83, 2>
    StartRtSessionResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    StartRtSessionResponse>(),  // to_prefetch
#endif                                          // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // string command_receiver_uri = 1;
            {::_pbi::TcParser::FastUS1,
             {10, 63, 0,
              PROTOBUF_FIELD_OFFSET(StartRtSessionResponse,
                                    _impl_.command_receiver_uri_)}},
        }},
        {{65535, 65535}},
        {{
            // string command_receiver_uri = 1;
            {PROTOBUF_FIELD_OFFSET(StartRtSessionResponse,
                                   _impl_.command_receiver_uri_),
             0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
        }},
        // no aux_entries
        {{"\66\24\0\0\0\0\0\0"
          "novonotes.audio_engine.v1alpha1.StartRtSessionResponse"
          "command_receiver_uri"}},
    };

PROTOBUF_NOINLINE void StartRtSessionResponse::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.command_receiver_uri_.ClearToEmpty();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* StartRtSessionResponse::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const StartRtSessionResponse& this_ =
        static_cast<const StartRtSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* StartRtSessionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const StartRtSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string command_receiver_uri = 1;
    if(!this_._internal_command_receiver_uri().empty())
    {
        const std::string& _s = this_._internal_command_receiver_uri();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.StartRtSessionResponse.command_"
            "receiver_uri");
        target = stream->WriteStringMaybeAliased(1, _s, target);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StartRtSessionResponse::ByteSizeLong(const MessageLite& base)
{
    const StartRtSessionResponse& this_ =
        static_cast<const StartRtSessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StartRtSessionResponse::ByteSizeLong() const
{
    const StartRtSessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // string command_receiver_uri = 1;
        if(!this_._internal_command_receiver_uri().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_command_receiver_uri());
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void StartRtSessionResponse::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<StartRtSessionResponse*>(&to_msg);
    auto& from = static_cast<const StartRtSessionResponse&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(!from._internal_command_receiver_uri().empty())
    {
        _this->_internal_set_command_receiver_uri(
            from._internal_command_receiver_uri());
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void StartRtSessionResponse::CopyFrom(const StartRtSessionResponse& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.StartRtSessionResponse)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void StartRtSessionResponse::InternalSwap(
    StartRtSessionResponse* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.command_receiver_uri_,
                                         &other->_impl_.command_receiver_uri_,
                                         arena);
}

::google::protobuf::Metadata StartRtSessionResponse::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StopRtSessionRequest::_Internal
{
   public:
};

StopRtSessionRequest::StopRtSessionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
}
StopRtSessionRequest::StopRtSessionRequest(::google::protobuf::Arena* arena,
                                           const StopRtSessionRequest& from)
    : StopRtSessionRequest(arena)
{
    MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StopRtSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : _cached_size_{0}
{}

inline void StopRtSessionRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.rt_session_id_ = {};
}
StopRtSessionRequest::~StopRtSessionRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void StopRtSessionRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StopRtSessionRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StopRtSessionRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StopRtSessionRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StopRtSessionRequest>(),
            ::google::protobuf::Message::GetNewImpl<StopRtSessionRequest>(),
            ::google::protobuf::Message::GetClearImpl<StopRtSessionRequest>(),
            &StopRtSessionRequest::ByteSizeLong,
            &StopRtSessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StopRtSessionRequest, _impl_._cached_size_),
            false,
        },
        &StopRtSessionRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
StopRtSessionRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 1, 0, 0, 2>
    StopRtSessionRequest::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            3, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967291,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    StopRtSessionRequest>(),  // to_prefetch
#endif                                        // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // int32 rt_session_id = 3;
            {::_pbi::TcParser::SingularVarintNoZag1<
                 ::uint32_t,
                 offsetof(StopRtSessionRequest, _impl_.rt_session_id_), 63>(),
             {24, 63, 0,
              PROTOBUF_FIELD_OFFSET(StopRtSessionRequest,
                                    _impl_.rt_session_id_)}},
        }},
        {{65535, 65535}},
        {{
            // int32 rt_session_id = 3;
            {PROTOBUF_FIELD_OFFSET(StopRtSessionRequest, _impl_.rt_session_id_),
             0, 0, (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
        }},
        // no aux_entries
        {{}},
    };

PROTOBUF_NOINLINE void StopRtSessionRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.rt_session_id_ = 0;
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* StopRtSessionRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const StopRtSessionRequest& this_ =
        static_cast<const StopRtSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* StopRtSessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const StopRtSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // int32 rt_session_id = 3;
    if(this_._internal_rt_session_id() != 0)
    {
        target = ::google::protobuf::internal::WireFormatLite::
            WriteInt32ToArrayWithField<3>(
                stream, this_._internal_rt_session_id(), target);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StopRtSessionRequest::ByteSizeLong(const MessageLite& base)
{
    const StopRtSessionRequest& this_ =
        static_cast<const StopRtSessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StopRtSessionRequest::ByteSizeLong() const
{
    const StopRtSessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // int32 rt_session_id = 3;
        if(this_._internal_rt_session_id() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                this_._internal_rt_session_id());
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void StopRtSessionRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<StopRtSessionRequest*>(&to_msg);
    auto& from = static_cast<const StopRtSessionRequest&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(from._internal_rt_session_id() != 0)
    {
        _this->_impl_.rt_session_id_ = from._impl_.rt_session_id_;
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void StopRtSessionRequest::CopyFrom(const StopRtSessionRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.StopRtSessionRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void StopRtSessionRequest::InternalSwap(
    StopRtSessionRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_.rt_session_id_, other->_impl_.rt_session_id_);
}

::google::protobuf::Metadata StopRtSessionRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StopRtSessionResponse::_Internal
{
   public:
};

StopRtSessionResponse::StopRtSessionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.StopRtSessionResponse)
}
StopRtSessionResponse::StopRtSessionResponse(::google::protobuf::Arena* arena,
                                             const StopRtSessionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    StopRtSessionResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.StopRtSessionResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StopRtSessionResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_StopRtSessionResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StopRtSessionResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                StopRtSessionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                StopRtSessionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                StopRtSessionResponse>(),
            &StopRtSessionResponse::ByteSizeLong,
            &StopRtSessionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StopRtSessionResponse, _impl_._cached_size_),
            false,
        },
        &StopRtSessionResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
StopRtSessionResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    StopRtSessionResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    StopRtSessionResponse>(),  // to_prefetch
#endif                                         // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata StopRtSessionResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// ===================================================================

class RtCommandBatch_Command::_Internal
{
   public:
    static constexpr ::int32_t kOneofCaseOffset = PROTOBUF_FIELD_OFFSET(
        ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command,
        _impl_._oneof_case_);
};

void RtCommandBatch_Command::set_allocated_update_parameter(
    ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand*
        update_parameter)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    clear_type();
    if(update_parameter)
    {
        ::google::protobuf::Arena* submessage_arena =
            reinterpret_cast<::google::protobuf::MessageLite*>(update_parameter)
                ->GetArena();
        if(message_arena != submessage_arena)
        {
            update_parameter = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, update_parameter, submessage_arena);
        }
        set_has_update_parameter();
        _impl_.type_.update_parameter_ = update_parameter;
    }
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.update_parameter)
}
void RtCommandBatch_Command::clear_update_parameter()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(type_case() == kUpdateParameter)
    {
        if(GetArena() == nullptr)
        {
            delete _impl_.type_.update_parameter_;
        }
        else if(::google::protobuf::internal::
                    DebugHardenClearOneofMessageOnArena())
        {
            ::google::protobuf::internal::MaybePoisonAfterClear(
                _impl_.type_.update_parameter_);
        }
        clear_has_type();
    }
}
void RtCommandBatch_Command::set_allocated_finalize_parameter(
    ::novonotes::audio_engine::v1alpha1::RtFinalizeParameterCommand*
        finalize_parameter)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    clear_type();
    if(finalize_parameter)
    {
        ::google::protobuf::Arena* submessage_arena =
            reinterpret_cast<::google::protobuf::MessageLite*>(
                finalize_parameter)
                ->GetArena();
        if(message_arena != submessage_arena)
        {
            finalize_parameter = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, finalize_parameter, submessage_arena);
        }
        set_has_finalize_parameter();
        _impl_.type_.finalize_parameter_ = finalize_parameter;
    }
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command.finalize_parameter)
}
void RtCommandBatch_Command::clear_finalize_parameter()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(type_case() == kFinalizeParameter)
    {
        if(GetArena() == nullptr)
        {
            delete _impl_.type_.finalize_parameter_;
        }
        else if(::google::protobuf::internal::
                    DebugHardenClearOneofMessageOnArena())
        {
            ::google::protobuf::internal::MaybePoisonAfterClear(
                _impl_.type_.finalize_parameter_);
        }
        clear_has_type();
    }
}
RtCommandBatch_Command::RtCommandBatch_Command(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
}
inline PROTOBUF_NDEBUG_INLINE RtCommandBatch_Command::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command& from_msg)
    : type_{}
    , _cached_size_{0}
    , _oneof_case_{from._oneof_case_[0]}
{}

RtCommandBatch_Command::RtCommandBatch_Command(
    ::google::protobuf::Arena* arena, const RtCommandBatch_Command& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    RtCommandBatch_Command* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    switch(type_case())
    {
        case TYPE_NOT_SET:
            break;
        case kUpdateParameter:
            _impl_.type_
                .update_parameter_ = ::google::protobuf::Message::CopyConstruct<
                ::novonotes::audio_engine::v1alpha1::RtUpdateParameterCommand>(
                arena, *from._impl_.type_.update_parameter_);
            break;
        case kFinalizeParameter:
            _impl_.type_.finalize_parameter_ =
                ::google::protobuf::Message::CopyConstruct<
                    ::novonotes::audio_engine::v1alpha1::
                        RtFinalizeParameterCommand>(
                    arena, *from._impl_.type_.finalize_parameter_);
            break;
    }

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
}
inline PROTOBUF_NDEBUG_INLINE RtCommandBatch_Command::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : type_{}
    , _cached_size_{0}
    , _oneof_case_{}
{}

inline void RtCommandBatch_Command::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
RtCommandBatch_Command::~RtCommandBatch_Command()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void RtCommandBatch_Command::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    if(has_type())
    {
        clear_type();
    }
    _impl_.~Impl_();
}

void RtCommandBatch_Command::clear_type()
{
    // @@protoc_insertion_point(one_of_clear_start:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    switch(type_case())
    {
        case kUpdateParameter:
        {
            if(GetArena() == nullptr)
            {
                delete _impl_.type_.update_parameter_;
            }
            else if(::google::protobuf::internal::
                        DebugHardenClearOneofMessageOnArena())
            {
                ::google::protobuf::internal::MaybePoisonAfterClear(
                    _impl_.type_.update_parameter_);
            }
            break;
        }
        case kFinalizeParameter:
        {
            if(GetArena() == nullptr)
            {
                delete _impl_.type_.finalize_parameter_;
            }
            else if(::google::protobuf::internal::
                        DebugHardenClearOneofMessageOnArena())
            {
                ::google::protobuf::internal::MaybePoisonAfterClear(
                    _impl_.type_.finalize_parameter_);
            }
            break;
        }
        case TYPE_NOT_SET:
        {
            break;
        }
    }
    _impl_._oneof_case_[0] = TYPE_NOT_SET;
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RtCommandBatch_Command::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RtCommandBatch_Command_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RtCommandBatch_Command::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<
                RtCommandBatch_Command>(),
            ::google::protobuf::Message::GetNewImpl<RtCommandBatch_Command>(),
            ::google::protobuf::Message::GetClearImpl<RtCommandBatch_Command>(),
            &RtCommandBatch_Command::ByteSizeLong,
            &RtCommandBatch_Command::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RtCommandBatch_Command, _impl_._cached_size_),
            false,
        },
        &RtCommandBatch_Command::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
RtCommandBatch_Command::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 2, 2, 0, 7>
    RtCommandBatch_Command::_table_ = {
        {
            0,       // no _has_bits_
            0,       // no _extensions_
            101, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,  // skipmap
            offsetof(decltype(_table_), field_entries),
            2,  // num_field_entries
            2,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    RtCommandBatch_Command>(),  // to_prefetch
#endif                                          // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{100, 0, 1, 65532, 0, 65535, 65535}},
        {{
            // .novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand
            // update_parameter = 100;
            {PROTOBUF_FIELD_OFFSET(RtCommandBatch_Command,
                                   _impl_.type_.update_parameter_),
             _Internal::kOneofCaseOffset + 0, 0,
             (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
            // .novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand
            // finalize_parameter = 101;
            {PROTOBUF_FIELD_OFFSET(RtCommandBatch_Command,
                                   _impl_.type_.finalize_parameter_),
             _Internal::kOneofCaseOffset + 0, 1,
             (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                            RtUpdateParameterCommand>()},
            {::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                            RtFinalizeParameterCommand>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void RtCommandBatch_Command::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    clear_type();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* RtCommandBatch_Command::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const RtCommandBatch_Command& this_ =
        static_cast<const RtCommandBatch_Command&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* RtCommandBatch_Command::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const RtCommandBatch_Command& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    switch(this_.type_case())
    {
        case kUpdateParameter:
        {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessage(
                    100, *this_._impl_.type_.update_parameter_,
                    this_._impl_.type_.update_parameter_->GetCachedSize(),
                    target, stream);
            break;
        }
        case kFinalizeParameter:
        {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessage(
                    101, *this_._impl_.type_.finalize_parameter_,
                    this_._impl_.type_.finalize_parameter_->GetCachedSize(),
                    target, stream);
            break;
        }
        default:
            break;
    }
    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RtCommandBatch_Command::ByteSizeLong(const MessageLite& base)
{
    const RtCommandBatch_Command& this_ =
        static_cast<const RtCommandBatch_Command&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RtCommandBatch_Command::ByteSizeLong() const
{
    const RtCommandBatch_Command& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    switch(this_.type_case())
    {
        // .novonotes.audio_engine.v1alpha1.RtUpdateParameterCommand
        // update_parameter = 100;
        case kUpdateParameter:
        {
            total_size +=
                2 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.type_.update_parameter_);
            break;
        }
        // .novonotes.audio_engine.v1alpha1.RtFinalizeParameterCommand
        // finalize_parameter = 101;
        case kFinalizeParameter:
        {
            total_size +=
                2 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.type_.finalize_parameter_);
            break;
        }
        case TYPE_NOT_SET:
        {
            break;
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void RtCommandBatch_Command::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<RtCommandBatch_Command*>(&to_msg);
    auto& from = static_cast<const RtCommandBatch_Command&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(const uint32_t oneof_from_case = from._impl_._oneof_case_[0])
    {
        const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
        const bool oneof_needs_init = oneof_to_case != oneof_from_case;
        if(oneof_needs_init)
        {
            if(oneof_to_case != 0)
            {
                _this->clear_type();
            }
            _this->_impl_._oneof_case_[0] = oneof_from_case;
        }

        switch(oneof_from_case)
        {
            case kUpdateParameter:
            {
                if(oneof_needs_init)
                {
                    _this->_impl_.type_.update_parameter_ =
                        ::google::protobuf::Message::CopyConstruct<
                            ::novonotes::audio_engine::v1alpha1::
                                RtUpdateParameterCommand>(
                            arena, *from._impl_.type_.update_parameter_);
                }
                else
                {
                    _this->_impl_.type_.update_parameter_->MergeFrom(
                        from._internal_update_parameter());
                }
                break;
            }
            case kFinalizeParameter:
            {
                if(oneof_needs_init)
                {
                    _this->_impl_.type_.finalize_parameter_ =
                        ::google::protobuf::Message::CopyConstruct<
                            ::novonotes::audio_engine::v1alpha1::
                                RtFinalizeParameterCommand>(
                            arena, *from._impl_.type_.finalize_parameter_);
                }
                else
                {
                    _this->_impl_.type_.finalize_parameter_->MergeFrom(
                        from._internal_finalize_parameter());
                }
                break;
            }
            case TYPE_NOT_SET:
                break;
        }
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void RtCommandBatch_Command::CopyFrom(const RtCommandBatch_Command& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.RtCommandBatch.Command)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void RtCommandBatch_Command::InternalSwap(
    RtCommandBatch_Command* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_.type_, other->_impl_.type_);
    swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RtCommandBatch_Command::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RtCommandBatch::_Internal
{
   public:
};

RtCommandBatch::RtCommandBatch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.RtCommandBatch)
}
inline PROTOBUF_NDEBUG_INLINE RtCommandBatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::RtCommandBatch& from_msg)
    : commands_{visibility, arena, from.commands_}
    , _cached_size_{0}
{}

RtCommandBatch::RtCommandBatch(::google::protobuf::Arena* arena,
                               const RtCommandBatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    RtCommandBatch* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.RtCommandBatch)
}
inline PROTOBUF_NDEBUG_INLINE RtCommandBatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : commands_{visibility, arena}
    , _cached_size_{0}
{}

inline void RtCommandBatch::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
RtCommandBatch::~RtCommandBatch()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.RtCommandBatch)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void RtCommandBatch::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RtCommandBatch::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RtCommandBatch_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RtCommandBatch::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<RtCommandBatch>(),
            ::google::protobuf::Message::GetNewImpl<RtCommandBatch>(),
            ::google::protobuf::Message::GetClearImpl<RtCommandBatch>(),
            &RtCommandBatch::ByteSizeLong,
            &RtCommandBatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RtCommandBatch, _impl_._cached_size_),
            false,
        },
        &RtCommandBatch::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData* RtCommandBatch::GetClassData()
    const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 1, 1, 0, 2>
    RtCommandBatch::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           RtCommandBatch>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // repeated .novonotes.audio_engine.v1alpha1.RtCommandBatch.Command
            // commands = 1;
            {::_pbi::TcParser::FastMtR1,
             {10, 63, 0,
              PROTOBUF_FIELD_OFFSET(RtCommandBatch, _impl_.commands_)}},
        }},
        {{65535, 65535}},
        {{
            // repeated .novonotes.audio_engine.v1alpha1.RtCommandBatch.Command
            // commands = 1;
            {PROTOBUF_FIELD_OFFSET(RtCommandBatch, _impl_.commands_), 0, 0,
             (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::RtCommandBatch_Command>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void RtCommandBatch::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.RtCommandBatch)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.commands_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* RtCommandBatch::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const RtCommandBatch& this_ = static_cast<const RtCommandBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* RtCommandBatch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const RtCommandBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.RtCommandBatch)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated .novonotes.audio_engine.v1alpha1.RtCommandBatch.Command commands
    // = 1;
    for(unsigned i = 0,
                 n = static_cast<unsigned>(this_._internal_commands_size());
        i < n; i++)
    {
        const auto& repfield = this_._internal_commands().Get(i);
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, repfield, repfield.GetCachedSize(), target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.RtCommandBatch)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RtCommandBatch::ByteSizeLong(const MessageLite& base)
{
    const RtCommandBatch& this_ = static_cast<const RtCommandBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RtCommandBatch::ByteSizeLong() const
{
    const RtCommandBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.RtCommandBatch)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // repeated .novonotes.audio_engine.v1alpha1.RtCommandBatch.Command
        // commands = 1;
        {
            total_size += 1UL * this_._internal_commands_size();
            for(const auto& msg : this_._internal_commands())
            {
                total_size +=
                    ::google::protobuf::internal::WireFormatLite::MessageSize(
                        msg);
            }
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void RtCommandBatch::MergeImpl(::google::protobuf::MessageLite& to_msg,
                               const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<RtCommandBatch*>(&to_msg);
    auto& from = static_cast<const RtCommandBatch&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.RtCommandBatch)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_internal_mutable_commands()->MergeFrom(from._internal_commands());
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void RtCommandBatch::CopyFrom(const RtCommandBatch& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.RtCommandBatch)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void RtCommandBatch::InternalSwap(RtCommandBatch* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    _impl_.commands_.InternalSwap(&other->_impl_.commands_);
}

::google::protobuf::Metadata RtCommandBatch::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RtStateFragment_EngineEntity::_Internal
{
   public:
    static constexpr ::int32_t kOneofCaseOffset = PROTOBUF_FIELD_OFFSET(
        ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity,
        _impl_._oneof_case_);
};

void RtStateFragment_EngineEntity::set_allocated_parameter(
    ::novonotes::audio_engine::v1alpha1::RtParameter* parameter)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    clear_type();
    if(parameter)
    {
        ::google::protobuf::Arena* submessage_arena =
            reinterpret_cast<::google::protobuf::MessageLite*>(parameter)
                ->GetArena();
        if(message_arena != submessage_arena)
        {
            parameter = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, parameter, submessage_arena);
        }
        set_has_parameter();
        _impl_.type_.parameter_ = parameter;
    }
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.parameter)
}
void RtStateFragment_EngineEntity::clear_parameter()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(type_case() == kParameter)
    {
        if(GetArena() == nullptr)
        {
            delete _impl_.type_.parameter_;
        }
        else if(::google::protobuf::internal::
                    DebugHardenClearOneofMessageOnArena())
        {
            ::google::protobuf::internal::MaybePoisonAfterClear(
                _impl_.type_.parameter_);
        }
        clear_has_type();
    }
}
void RtStateFragment_EngineEntity::set_allocated_playhead(
    ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition* playhead)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    clear_type();
    if(playhead)
    {
        ::google::protobuf::Arena* submessage_arena =
            reinterpret_cast<::google::protobuf::MessageLite*>(playhead)
                ->GetArena();
        if(message_arena != submessage_arena)
        {
            playhead = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, playhead, submessage_arena);
        }
        set_has_playhead();
        _impl_.type_.playhead_ = playhead;
    }
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity.playhead)
}
void RtStateFragment_EngineEntity::clear_playhead()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(type_case() == kPlayhead)
    {
        if(GetArena() == nullptr)
        {
            delete _impl_.type_.playhead_;
        }
        else if(::google::protobuf::internal::
                    DebugHardenClearOneofMessageOnArena())
        {
            ::google::protobuf::internal::MaybePoisonAfterClear(
                _impl_.type_.playhead_);
        }
        clear_has_type();
    }
}
RtStateFragment_EngineEntity::RtStateFragment_EngineEntity(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
}
inline PROTOBUF_NDEBUG_INLINE RtStateFragment_EngineEntity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::RtStateFragment_EngineEntity&
        from_msg)
    : type_{}
    , _cached_size_{0}
    , _oneof_case_{from._oneof_case_[0]}
{}

RtStateFragment_EngineEntity::RtStateFragment_EngineEntity(
    ::google::protobuf::Arena* arena, const RtStateFragment_EngineEntity& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    RtStateFragment_EngineEntity* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    switch(type_case())
    {
        case TYPE_NOT_SET:
            break;
        case kParameter:
            _impl_.type_.parameter_ =
                ::google::protobuf::Message::CopyConstruct<
                    ::novonotes::audio_engine::v1alpha1::RtParameter>(
                    arena, *from._impl_.type_.parameter_);
            break;
        case kPlayhead:
            _impl_.type_.playhead_ = ::google::protobuf::Message::CopyConstruct<
                ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition>(
                arena, *from._impl_.type_.playhead_);
            break;
    }

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
}
inline PROTOBUF_NDEBUG_INLINE RtStateFragment_EngineEntity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : type_{}
    , _cached_size_{0}
    , _oneof_case_{}
{}

inline void RtStateFragment_EngineEntity::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
RtStateFragment_EngineEntity::~RtStateFragment_EngineEntity()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void RtStateFragment_EngineEntity::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    if(has_type())
    {
        clear_type();
    }
    _impl_.~Impl_();
}

void RtStateFragment_EngineEntity::clear_type()
{
    // @@protoc_insertion_point(one_of_clear_start:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    switch(type_case())
    {
        case kParameter:
        {
            if(GetArena() == nullptr)
            {
                delete _impl_.type_.parameter_;
            }
            else if(::google::protobuf::internal::
                        DebugHardenClearOneofMessageOnArena())
            {
                ::google::protobuf::internal::MaybePoisonAfterClear(
                    _impl_.type_.parameter_);
            }
            break;
        }
        case kPlayhead:
        {
            if(GetArena() == nullptr)
            {
                delete _impl_.type_.playhead_;
            }
            else if(::google::protobuf::internal::
                        DebugHardenClearOneofMessageOnArena())
            {
                ::google::protobuf::internal::MaybePoisonAfterClear(
                    _impl_.type_.playhead_);
            }
            break;
        }
        case TYPE_NOT_SET:
        {
            break;
        }
    }
    _impl_._oneof_case_[0] = TYPE_NOT_SET;
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RtStateFragment_EngineEntity::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RtStateFragment_EngineEntity_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RtStateFragment_EngineEntity::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<
                RtStateFragment_EngineEntity>(),
            ::google::protobuf::Message::GetNewImpl<
                RtStateFragment_EngineEntity>(),
            ::google::protobuf::Message::GetClearImpl<
                RtStateFragment_EngineEntity>(),
            &RtStateFragment_EngineEntity::ByteSizeLong,
            &RtStateFragment_EngineEntity::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RtStateFragment_EngineEntity,
                                  _impl_._cached_size_),
            false,
        },
        &RtStateFragment_EngineEntity::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
RtStateFragment_EngineEntity::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 2, 2, 0, 7>
    RtStateFragment_EngineEntity::_table_ = {
        {
            0,       // no _has_bits_
            0,       // no _extensions_
            101, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,  // skipmap
            offsetof(decltype(_table_), field_entries),
            2,  // num_field_entries
            2,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    RtStateFragment_EngineEntity>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{100, 0, 1, 65532, 0, 65535, 65535}},
        {{
            // .novonotes.audio_engine.v1alpha1.RtParameter parameter = 100;
            {PROTOBUF_FIELD_OFFSET(RtStateFragment_EngineEntity,
                                   _impl_.type_.parameter_),
             _Internal::kOneofCaseOffset + 0, 0,
             (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
            // .novonotes.audio_engine.v1alpha1.RtPlayheadPosition playhead
            // = 101;
            {PROTOBUF_FIELD_OFFSET(RtStateFragment_EngineEntity,
                                   _impl_.type_.playhead_),
             _Internal::kOneofCaseOffset + 0, 1,
             (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::RtParameter>()},
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::RtPlayheadPosition>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void RtStateFragment_EngineEntity::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    clear_type();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* RtStateFragment_EngineEntity::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const RtStateFragment_EngineEntity& this_ =
        static_cast<const RtStateFragment_EngineEntity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* RtStateFragment_EngineEntity::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const RtStateFragment_EngineEntity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    switch(this_.type_case())
    {
        case kParameter:
        {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessage(
                    100, *this_._impl_.type_.parameter_,
                    this_._impl_.type_.parameter_->GetCachedSize(), target,
                    stream);
            break;
        }
        case kPlayhead:
        {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessage(
                    101, *this_._impl_.type_.playhead_,
                    this_._impl_.type_.playhead_->GetCachedSize(), target,
                    stream);
            break;
        }
        default:
            break;
    }
    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RtStateFragment_EngineEntity::ByteSizeLong(const MessageLite& base)
{
    const RtStateFragment_EngineEntity& this_ =
        static_cast<const RtStateFragment_EngineEntity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RtStateFragment_EngineEntity::ByteSizeLong() const
{
    const RtStateFragment_EngineEntity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    switch(this_.type_case())
    {
        // .novonotes.audio_engine.v1alpha1.RtParameter parameter = 100;
        case kParameter:
        {
            total_size +=
                2 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.type_.parameter_);
            break;
        }
        // .novonotes.audio_engine.v1alpha1.RtPlayheadPosition playhead = 101;
        case kPlayhead:
        {
            total_size +=
                2 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.type_.playhead_);
            break;
        }
        case TYPE_NOT_SET:
        {
            break;
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void RtStateFragment_EngineEntity::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<RtStateFragment_EngineEntity*>(&to_msg);
    auto& from = static_cast<const RtStateFragment_EngineEntity&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(const uint32_t oneof_from_case = from._impl_._oneof_case_[0])
    {
        const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
        const bool oneof_needs_init = oneof_to_case != oneof_from_case;
        if(oneof_needs_init)
        {
            if(oneof_to_case != 0)
            {
                _this->clear_type();
            }
            _this->_impl_._oneof_case_[0] = oneof_from_case;
        }

        switch(oneof_from_case)
        {
            case kParameter:
            {
                if(oneof_needs_init)
                {
                    _this->_impl_.type_.parameter_ =
                        ::google::protobuf::Message::CopyConstruct<
                            ::novonotes::audio_engine::v1alpha1::RtParameter>(
                            arena, *from._impl_.type_.parameter_);
                }
                else
                {
                    _this->_impl_.type_.parameter_->MergeFrom(
                        from._internal_parameter());
                }
                break;
            }
            case kPlayhead:
            {
                if(oneof_needs_init)
                {
                    _this->_impl_.type_.playhead_ =
                        ::google::protobuf::Message::CopyConstruct<
                            ::novonotes::audio_engine::v1alpha1::
                                RtPlayheadPosition>(
                            arena, *from._impl_.type_.playhead_);
                }
                else
                {
                    _this->_impl_.type_.playhead_->MergeFrom(
                        from._internal_playhead());
                }
                break;
            }
            case TYPE_NOT_SET:
                break;
        }
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void RtStateFragment_EngineEntity::CopyFrom(
    const RtStateFragment_EngineEntity& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void RtStateFragment_EngineEntity::InternalSwap(
    RtStateFragment_EngineEntity* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_.type_, other->_impl_.type_);
    swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RtStateFragment_EngineEntity::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RtStateFragment::_Internal
{
   public:
};

RtStateFragment::RtStateFragment(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.RtStateFragment)
}
inline PROTOBUF_NDEBUG_INLINE RtStateFragment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::RtStateFragment& from_msg)
    : entity_subset_{visibility, arena, from.entity_subset_}
    , _cached_size_{0}
{}

RtStateFragment::RtStateFragment(::google::protobuf::Arena* arena,
                                 const RtStateFragment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    RtStateFragment* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.RtStateFragment)
}
inline PROTOBUF_NDEBUG_INLINE RtStateFragment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : entity_subset_{visibility, arena}
    , _cached_size_{0}
{}

inline void RtStateFragment::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
RtStateFragment::~RtStateFragment()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.RtStateFragment)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void RtStateFragment::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RtStateFragment::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RtStateFragment_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RtStateFragment::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<RtStateFragment>(),
            ::google::protobuf::Message::GetNewImpl<RtStateFragment>(),
            ::google::protobuf::Message::GetClearImpl<RtStateFragment>(),
            &RtStateFragment::ByteSizeLong,
            &RtStateFragment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RtStateFragment, _impl_._cached_size_),
            false,
        },
        &RtStateFragment::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
RtStateFragment::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 1, 1, 0, 2>
    RtStateFragment::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           RtStateFragment>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // repeated
            // .novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity
            // entity_subset = 1;
            {::_pbi::TcParser::FastMtR1,
             {10, 63, 0,
              PROTOBUF_FIELD_OFFSET(RtStateFragment, _impl_.entity_subset_)}},
        }},
        {{65535, 65535}},
        {{
            // repeated
            // .novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity
            // entity_subset = 1;
            {PROTOBUF_FIELD_OFFSET(RtStateFragment, _impl_.entity_subset_), 0,
             0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                            RtStateFragment_EngineEntity>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void RtStateFragment::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.RtStateFragment)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.entity_subset_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* RtStateFragment::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const RtStateFragment& this_ = static_cast<const RtStateFragment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* RtStateFragment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const RtStateFragment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.RtStateFragment)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated .novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity
    // entity_subset = 1;
    for(unsigned i = 0, n = static_cast<unsigned>(
                            this_._internal_entity_subset_size());
        i < n; i++)
    {
        const auto& repfield = this_._internal_entity_subset().Get(i);
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, repfield, repfield.GetCachedSize(), target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.RtStateFragment)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RtStateFragment::ByteSizeLong(const MessageLite& base)
{
    const RtStateFragment& this_ = static_cast<const RtStateFragment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RtStateFragment::ByteSizeLong() const
{
    const RtStateFragment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.RtStateFragment)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // repeated
        // .novonotes.audio_engine.v1alpha1.RtStateFragment.EngineEntity
        // entity_subset = 1;
        {
            total_size += 1UL * this_._internal_entity_subset_size();
            for(const auto& msg : this_._internal_entity_subset())
            {
                total_size +=
                    ::google::protobuf::internal::WireFormatLite::MessageSize(
                        msg);
            }
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void RtStateFragment::MergeImpl(::google::protobuf::MessageLite& to_msg,
                                const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<RtStateFragment*>(&to_msg);
    auto& from = static_cast<const RtStateFragment&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.RtStateFragment)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_internal_mutable_entity_subset()->MergeFrom(
        from._internal_entity_subset());
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void RtStateFragment::CopyFrom(const RtStateFragment& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.RtStateFragment)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void RtStateFragment::InternalSwap(RtStateFragment* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    _impl_.entity_subset_.InternalSwap(&other->_impl_.entity_subset_);
}

::google::protobuf::Metadata RtStateFragment::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type _static_init2_
    PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(
             &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2frt_5fsession_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
