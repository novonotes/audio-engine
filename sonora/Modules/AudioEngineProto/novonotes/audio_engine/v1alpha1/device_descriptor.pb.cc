// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/device_descriptor.proto
// Protobuf C++ Version: 5.28.1

#include "novonotes/audio_engine/v1alpha1/device_descriptor.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
template <typename>
PROTOBUF_CONSTEXPR ListDeviceDescriptorsRequest::ListDeviceDescriptorsRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct ListDeviceDescriptorsRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR ListDeviceDescriptorsRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~ListDeviceDescriptorsRequestDefaultTypeInternal() {}
    union
    {
        ListDeviceDescriptorsRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        ListDeviceDescriptorsRequestDefaultTypeInternal
            _ListDeviceDescriptorsRequest_default_instance_;

inline constexpr DeviceDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : device_type_id_(&::google::protobuf::internal::fixed_address_empty_string,
                      ::_pbi::ConstantInitialized())
    , display_name_(&::google::protobuf::internal::fixed_address_empty_string,
                    ::_pbi::ConstantInitialized())
    , plugin_format_name_(
          &::google::protobuf::internal::fixed_address_empty_string,
          ::_pbi::ConstantInitialized())
    , manufacturer_name_(
          &::google::protobuf::internal::fixed_address_empty_string,
          ::_pbi::ConstantInitialized())
    , version_(&::google::protobuf::internal::fixed_address_empty_string,
               ::_pbi::ConstantInitialized())
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR DeviceDescriptor::DeviceDescriptor(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct DeviceDescriptorDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR DeviceDescriptorDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~DeviceDescriptorDefaultTypeInternal() {}
    union
    {
        DeviceDescriptor _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceDescriptorDefaultTypeInternal
        _DeviceDescriptor_default_instance_;

inline constexpr ListDeviceDescriptorsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : device_descriptors_{}
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR ListDeviceDescriptorsResponse::ListDeviceDescriptorsResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct ListDeviceDescriptorsResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR ListDeviceDescriptorsResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~ListDeviceDescriptorsResponseDefaultTypeInternal() {}
    union
    {
        ListDeviceDescriptorsResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        ListDeviceDescriptorsResponseDefaultTypeInternal
            _ListDeviceDescriptorsResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto =
        nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto =
        nullptr;
const ::uint32_t
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto::
        offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeviceDescriptor,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeviceDescriptor,
                _impl_.device_type_id_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeviceDescriptor,
                _impl_.display_name_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeviceDescriptor,
                _impl_.plugin_format_name_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeviceDescriptor,
                _impl_.manufacturer_name_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeviceDescriptor,
                _impl_.version_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::
                                      ListDeviceDescriptorsRequest,
                                  _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::
                                      ListDeviceDescriptorsResponse,
                                  _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(::novonotes::audio_engine::v1alpha1::
                                      ListDeviceDescriptorsResponse,
                                  _impl_.device_descriptors_),
};

static const ::_pbi::MigrationSchema schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, -1, sizeof(::novonotes::audio_engine::v1alpha1::DeviceDescriptor)},
    {13, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::ListDeviceDescriptorsRequest)},
    {21, -1, -1,
     sizeof(
         ::novonotes::audio_engine::v1alpha1::ListDeviceDescriptorsResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::novonotes::audio_engine::v1alpha1::_DeviceDescriptor_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::
         _ListDeviceDescriptorsRequest_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _ListDeviceDescriptorsResponse_default_instance_._instance,
};
const char
    descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto
        [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            "\n7novonotes/audio_engine/v1alpha1/device"
            "_descriptor.proto\022\037novonotes.audio_engin"
            "e.v1alpha1\032\031google/api/resource.proto\"\333\001"
            "\n\020DeviceDescriptor\022\026\n\016device_type_id\030\001 \001"
            "(\t\022\024\n\014display_name\030\002 "
            "\001(\t\022\032\n\022plugin_forma"
            "t_name\030\003 \001(\t\022\031\n\021manufacturer_name\030\005 "
            "\001(\t\022"
            "\017\n\007version\030\006 \001(\t:Q\352AN\n\'novonotes-audio-e"
            "ngine/DeviceDescriptor*\021deviceDescriptor"
            "s2\020deviceDescriptor\"\036\n\034ListDeviceDescrip"
            "torsRequest\"n\n\035ListDeviceDescriptorsResp"
            "onse\022M\n\022device_descriptors\030\001 \003(\01321.novon"
            "otes.audio_engine.v1alpha1.DeviceDescrip"
            "torb\006proto3"};
static const ::_pbi::DescriptorTable* const
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto_deps
        [1] = {
            &::descriptor_table_google_2fapi_2fresource_2eproto,
};
static ::absl::once_flag
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto = {
        false,
        false,
        491,
        descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto,
        "novonotes/audio_engine/v1alpha1/device_descriptor.proto",
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto_once,
        descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto_deps,
        1,
        3,
        schemas,
        file_default_instances,
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto::
            offsets,
        file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto,
        file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto,
};
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
// ===================================================================

class DeviceDescriptor::_Internal
{
   public:
};

DeviceDescriptor::DeviceDescriptor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE DeviceDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::DeviceDescriptor& from_msg)
    : device_type_id_(arena, from.device_type_id_)
    , display_name_(arena, from.display_name_)
    , plugin_format_name_(arena, from.plugin_format_name_)
    , manufacturer_name_(arena, from.manufacturer_name_)
    , version_(arena, from.version_)
    , _cached_size_{0}
{}

DeviceDescriptor::DeviceDescriptor(::google::protobuf::Arena* arena,
                                   const DeviceDescriptor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    DeviceDescriptor* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE DeviceDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : device_type_id_(arena)
    , display_name_(arena)
    , plugin_format_name_(arena)
    , manufacturer_name_(arena)
    , version_(arena)
    , _cached_size_{0}
{}

inline void DeviceDescriptor::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
DeviceDescriptor::~DeviceDescriptor()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void DeviceDescriptor::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.device_type_id_.Destroy();
    _impl_.display_name_.Destroy();
    _impl_.plugin_format_name_.Destroy();
    _impl_.manufacturer_name_.Destroy();
    _impl_.version_.Destroy();
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DeviceDescriptor::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DeviceDescriptor_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DeviceDescriptor::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DeviceDescriptor>(),
            ::google::protobuf::Message::GetNewImpl<DeviceDescriptor>(),
            ::google::protobuf::Message::GetClearImpl<DeviceDescriptor>(),
            &DeviceDescriptor::ByteSizeLong,
            &DeviceDescriptor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DeviceDescriptor, _impl_._cached_size_),
            false,
        },
        &DeviceDescriptor::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
DeviceDescriptor::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    3, 5, 0, 125, 2>
    DeviceDescriptor::_table_ = {
        {
            0,      // no _has_bits_
            0,      // no _extensions_
            6, 56,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967240,  // skipmap
            offsetof(decltype(_table_), field_entries),
            5,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           DeviceDescriptor>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
            // string device_type_id = 1;
            {::_pbi::TcParser::FastUS1,
             {10, 63, 0,
              PROTOBUF_FIELD_OFFSET(DeviceDescriptor, _impl_.device_type_id_)}},
            // string display_name = 2;
            {::_pbi::TcParser::FastUS1,
             {18, 63, 0,
              PROTOBUF_FIELD_OFFSET(DeviceDescriptor, _impl_.display_name_)}},
            // string plugin_format_name = 3;
            {::_pbi::TcParser::FastUS1,
             {26, 63, 0,
              PROTOBUF_FIELD_OFFSET(DeviceDescriptor,
                                    _impl_.plugin_format_name_)}},
            {::_pbi::TcParser::MiniParse, {}},
            // string manufacturer_name = 5;
            {::_pbi::TcParser::FastUS1,
             {42, 63, 0,
              PROTOBUF_FIELD_OFFSET(DeviceDescriptor,
                                    _impl_.manufacturer_name_)}},
            // string version = 6;
            {::_pbi::TcParser::FastUS1,
             {50, 63, 0,
              PROTOBUF_FIELD_OFFSET(DeviceDescriptor, _impl_.version_)}},
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        {{
            // string device_type_id = 1;
            {PROTOBUF_FIELD_OFFSET(DeviceDescriptor, _impl_.device_type_id_), 0,
             0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // string display_name = 2;
            {PROTOBUF_FIELD_OFFSET(DeviceDescriptor, _impl_.display_name_), 0,
             0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // string plugin_format_name = 3;
            {PROTOBUF_FIELD_OFFSET(DeviceDescriptor,
                                   _impl_.plugin_format_name_),
             0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // string manufacturer_name = 5;
            {PROTOBUF_FIELD_OFFSET(DeviceDescriptor, _impl_.manufacturer_name_),
             0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // string version = 6;
            {PROTOBUF_FIELD_OFFSET(DeviceDescriptor, _impl_.version_), 0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
        }},
        // no aux_entries
        {{"\60\16\14\22\21\7\0\0"
          "novonotes.audio_engine.v1alpha1.DeviceDescriptor"
          "device_type_id"
          "display_name"
          "plugin_format_name"
          "manufacturer_name"
          "version"}},
    };

PROTOBUF_NOINLINE void DeviceDescriptor::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.device_type_id_.ClearToEmpty();
    _impl_.display_name_.ClearToEmpty();
    _impl_.plugin_format_name_.ClearToEmpty();
    _impl_.manufacturer_name_.ClearToEmpty();
    _impl_.version_.ClearToEmpty();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* DeviceDescriptor::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const DeviceDescriptor& this_ = static_cast<const DeviceDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* DeviceDescriptor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const DeviceDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string device_type_id = 1;
    if(!this_._internal_device_type_id().empty())
    {
        const std::string& _s = this_._internal_device_type_id();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.DeviceDescriptor.device_type_id");
        target = stream->WriteStringMaybeAliased(1, _s, target);
    }

    // string display_name = 2;
    if(!this_._internal_display_name().empty())
    {
        const std::string& _s = this_._internal_display_name();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.DeviceDescriptor.display_name");
        target = stream->WriteStringMaybeAliased(2, _s, target);
    }

    // string plugin_format_name = 3;
    if(!this_._internal_plugin_format_name().empty())
    {
        const std::string& _s = this_._internal_plugin_format_name();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.DeviceDescriptor.plugin_format_"
            "name");
        target = stream->WriteStringMaybeAliased(3, _s, target);
    }

    // string manufacturer_name = 5;
    if(!this_._internal_manufacturer_name().empty())
    {
        const std::string& _s = this_._internal_manufacturer_name();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.DeviceDescriptor.manufacturer_"
            "name");
        target = stream->WriteStringMaybeAliased(5, _s, target);
    }

    // string version = 6;
    if(!this_._internal_version().empty())
    {
        const std::string& _s = this_._internal_version();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.DeviceDescriptor.version");
        target = stream->WriteStringMaybeAliased(6, _s, target);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeviceDescriptor::ByteSizeLong(const MessageLite& base)
{
    const DeviceDescriptor& this_ = static_cast<const DeviceDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeviceDescriptor::ByteSizeLong() const
{
    const DeviceDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // string device_type_id = 1;
        if(!this_._internal_device_type_id().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_device_type_id());
        }
        // string display_name = 2;
        if(!this_._internal_display_name().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_display_name());
        }
        // string plugin_format_name = 3;
        if(!this_._internal_plugin_format_name().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_plugin_format_name());
        }
        // string manufacturer_name = 5;
        if(!this_._internal_manufacturer_name().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_manufacturer_name());
        }
        // string version = 6;
        if(!this_._internal_version().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_version());
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void DeviceDescriptor::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<DeviceDescriptor*>(&to_msg);
    auto& from = static_cast<const DeviceDescriptor&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(!from._internal_device_type_id().empty())
    {
        _this->_internal_set_device_type_id(from._internal_device_type_id());
    }
    if(!from._internal_display_name().empty())
    {
        _this->_internal_set_display_name(from._internal_display_name());
    }
    if(!from._internal_plugin_format_name().empty())
    {
        _this->_internal_set_plugin_format_name(
            from._internal_plugin_format_name());
    }
    if(!from._internal_manufacturer_name().empty())
    {
        _this->_internal_set_manufacturer_name(
            from._internal_manufacturer_name());
    }
    if(!from._internal_version().empty())
    {
        _this->_internal_set_version(from._internal_version());
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void DeviceDescriptor::CopyFrom(const DeviceDescriptor& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.DeviceDescriptor)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void DeviceDescriptor::InternalSwap(DeviceDescriptor* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_type_id_,
                                         &other->_impl_.device_type_id_, arena);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.display_name_,
                                         &other->_impl_.display_name_, arena);
    ::_pbi::ArenaStringPtr::InternalSwap(
        &_impl_.plugin_format_name_, &other->_impl_.plugin_format_name_, arena);
    ::_pbi::ArenaStringPtr::InternalSwap(
        &_impl_.manufacturer_name_, &other->_impl_.manufacturer_name_, arena);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_,
                                         &other->_impl_.version_, arena);
}

::google::protobuf::Metadata DeviceDescriptor::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListDeviceDescriptorsRequest::_Internal
{
   public:
};

ListDeviceDescriptorsRequest::ListDeviceDescriptorsRequest(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsRequest)
}
ListDeviceDescriptorsRequest::ListDeviceDescriptorsRequest(
    ::google::protobuf::Arena* arena, const ListDeviceDescriptorsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    ListDeviceDescriptorsRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsRequest)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ListDeviceDescriptorsRequest::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_ListDeviceDescriptorsRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ListDeviceDescriptorsRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                ListDeviceDescriptorsRequest>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                ListDeviceDescriptorsRequest>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                ListDeviceDescriptorsRequest>(),
            &ListDeviceDescriptorsRequest::ByteSizeLong,
            &ListDeviceDescriptorsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ListDeviceDescriptorsRequest,
                                  _impl_._cached_size_),
            false,
        },
        &ListDeviceDescriptorsRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
ListDeviceDescriptorsRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    ListDeviceDescriptorsRequest::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    ListDeviceDescriptorsRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata ListDeviceDescriptorsRequest::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// ===================================================================

class ListDeviceDescriptorsResponse::_Internal
{
   public:
};

ListDeviceDescriptorsResponse::ListDeviceDescriptorsResponse(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListDeviceDescriptorsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::ListDeviceDescriptorsResponse&
        from_msg)
    : device_descriptors_{visibility, arena, from.device_descriptors_}
    , _cached_size_{0}
{}

ListDeviceDescriptorsResponse::ListDeviceDescriptorsResponse(
    ::google::protobuf::Arena* arena, const ListDeviceDescriptorsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    ListDeviceDescriptorsResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListDeviceDescriptorsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : device_descriptors_{visibility, arena}
    , _cached_size_{0}
{}

inline void ListDeviceDescriptorsResponse::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
ListDeviceDescriptorsResponse::~ListDeviceDescriptorsResponse()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void ListDeviceDescriptorsResponse::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ListDeviceDescriptorsResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ListDeviceDescriptorsResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ListDeviceDescriptorsResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<
                ListDeviceDescriptorsResponse>(),
            ::google::protobuf::Message::GetNewImpl<
                ListDeviceDescriptorsResponse>(),
            ::google::protobuf::Message::GetClearImpl<
                ListDeviceDescriptorsResponse>(),
            &ListDeviceDescriptorsResponse::ByteSizeLong,
            &ListDeviceDescriptorsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ListDeviceDescriptorsResponse,
                                  _impl_._cached_size_),
            false,
        },
        &ListDeviceDescriptorsResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
ListDeviceDescriptorsResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
    ListDeviceDescriptorsResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    ListDeviceDescriptorsResponse>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // repeated .novonotes.audio_engine.v1alpha1.DeviceDescriptor
            // device_descriptors = 1;
            {::_pbi::TcParser::FastMtR1,
             {10, 63, 0,
              PROTOBUF_FIELD_OFFSET(ListDeviceDescriptorsResponse,
                                    _impl_.device_descriptors_)}},
        }},
        {{65535, 65535}},
        {{
            // repeated .novonotes.audio_engine.v1alpha1.DeviceDescriptor
            // device_descriptors = 1;
            {PROTOBUF_FIELD_OFFSET(ListDeviceDescriptorsResponse,
                                   _impl_.device_descriptors_),
             0, 0,
             (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::DeviceDescriptor>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void ListDeviceDescriptorsResponse::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.device_descriptors_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* ListDeviceDescriptorsResponse::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const ListDeviceDescriptorsResponse& this_ =
        static_cast<const ListDeviceDescriptorsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* ListDeviceDescriptorsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const ListDeviceDescriptorsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated .novonotes.audio_engine.v1alpha1.DeviceDescriptor
    // device_descriptors = 1;
    for(unsigned i = 0, n = static_cast<unsigned>(
                            this_._internal_device_descriptors_size());
        i < n; i++)
    {
        const auto& repfield = this_._internal_device_descriptors().Get(i);
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, repfield, repfield.GetCachedSize(), target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListDeviceDescriptorsResponse::ByteSizeLong(const MessageLite& base)
{
    const ListDeviceDescriptorsResponse& this_ =
        static_cast<const ListDeviceDescriptorsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListDeviceDescriptorsResponse::ByteSizeLong() const
{
    const ListDeviceDescriptorsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // repeated .novonotes.audio_engine.v1alpha1.DeviceDescriptor
        // device_descriptors = 1;
        {
            total_size += 1UL * this_._internal_device_descriptors_size();
            for(const auto& msg : this_._internal_device_descriptors())
            {
                total_size +=
                    ::google::protobuf::internal::WireFormatLite::MessageSize(
                        msg);
            }
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void ListDeviceDescriptorsResponse::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<ListDeviceDescriptorsResponse*>(&to_msg);
    auto& from = static_cast<const ListDeviceDescriptorsResponse&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_internal_mutable_device_descriptors()->MergeFrom(
        from._internal_device_descriptors());
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void ListDeviceDescriptorsResponse::CopyFrom(
    const ListDeviceDescriptorsResponse& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.ListDeviceDescriptorsResponse)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void ListDeviceDescriptorsResponse::InternalSwap(
    ListDeviceDescriptorsResponse* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    _impl_.device_descriptors_.InternalSwap(&other->_impl_.device_descriptors_);
}

::google::protobuf::Metadata ListDeviceDescriptorsResponse::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type _static_init2_
    PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(
             &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fdevice_5fdescriptor_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
