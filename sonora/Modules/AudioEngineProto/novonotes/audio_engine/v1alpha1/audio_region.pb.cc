// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/audio_region.proto
// Protobuf C++ Version: 5.28.1

#include "novonotes/audio_engine/v1alpha1/audio_region.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
template <typename>
PROTOBUF_CONSTEXPR UpdateAudioRegionResponse::UpdateAudioRegionResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct UpdateAudioRegionResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR UpdateAudioRegionResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~UpdateAudioRegionResponseDefaultTypeInternal() {}
    union
    {
        UpdateAudioRegionResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        UpdateAudioRegionResponseDefaultTypeInternal
            _UpdateAudioRegionResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DeleteAudioRegionResponse::DeleteAudioRegionResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct DeleteAudioRegionResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR DeleteAudioRegionResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~DeleteAudioRegionResponseDefaultTypeInternal() {}
    union
    {
        DeleteAudioRegionResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        DeleteAudioRegionResponseDefaultTypeInternal
            _DeleteAudioRegionResponse_default_instance_;

inline constexpr DeleteAudioRegionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : audio_region_id_(
          &::google::protobuf::internal::fixed_address_empty_string,
          ::_pbi::ConstantInitialized())
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR DeleteAudioRegionRequest::DeleteAudioRegionRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct DeleteAudioRegionRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR DeleteAudioRegionRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~DeleteAudioRegionRequestDefaultTypeInternal() {}
    union
    {
        DeleteAudioRegionRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        DeleteAudioRegionRequestDefaultTypeInternal
            _DeleteAudioRegionRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CreateAudioRegionResponse::CreateAudioRegionResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct CreateAudioRegionResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR CreateAudioRegionResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~CreateAudioRegionResponseDefaultTypeInternal() {}
    union
    {
        CreateAudioRegionResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        CreateAudioRegionResponseDefaultTypeInternal
            _CreateAudioRegionResponse_default_instance_;

inline constexpr AudioRegion::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0}
    , id_(&::google::protobuf::internal::fixed_address_empty_string,
          ::_pbi::ConstantInitialized())
    , parent_id_(&::google::protobuf::internal::fixed_address_empty_string,
                 ::_pbi::ConstantInitialized())
    , source_file_path_(
          &::google::protobuf::internal::fixed_address_empty_string,
          ::_pbi::ConstantInitialized())
    , position_{0}
    , duration_{0}
    , gain_db_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR AudioRegion::AudioRegion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct AudioRegionDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR AudioRegionDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~AudioRegionDefaultTypeInternal() {}
    union
    {
        AudioRegion _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioRegionDefaultTypeInternal
        _AudioRegion_default_instance_;

inline constexpr UpdateAudioRegionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0}
    , audio_region_{nullptr}
{}

template <typename>
PROTOBUF_CONSTEXPR UpdateAudioRegionRequest::UpdateAudioRegionRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct UpdateAudioRegionRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR UpdateAudioRegionRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~UpdateAudioRegionRequestDefaultTypeInternal() {}
    union
    {
        UpdateAudioRegionRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        UpdateAudioRegionRequestDefaultTypeInternal
            _UpdateAudioRegionRequest_default_instance_;

inline constexpr CreateAudioRegionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0}
    , parent_id_(&::google::protobuf::internal::fixed_address_empty_string,
                 ::_pbi::ConstantInitialized())
    , audio_region_{nullptr}
{}

template <typename>
PROTOBUF_CONSTEXPR CreateAudioRegionRequest::CreateAudioRegionRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct CreateAudioRegionRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR CreateAudioRegionRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~CreateAudioRegionRequestDefaultTypeInternal() {}
    union
    {
        CreateAudioRegionRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
        CreateAudioRegionRequestDefaultTypeInternal
            _CreateAudioRegionRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto =
        nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto =
        nullptr;
const ::uint32_t
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto::
        offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::AudioRegion,
                _impl_._has_bits_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::AudioRegion,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::AudioRegion, _impl_.id_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::AudioRegion,
                _impl_.parent_id_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::AudioRegion,
                _impl_.source_file_path_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::AudioRegion,
                _impl_.position_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::AudioRegion,
                _impl_.duration_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::AudioRegion,
                _impl_.gain_db_),
            ~0u,
            ~0u,
            ~0u,
            ~0u,
            0,
            ~0u,
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateAudioRegionRequest,
                _impl_._has_bits_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateAudioRegionRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateAudioRegionRequest,
                _impl_.parent_id_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateAudioRegionRequest,
                _impl_.audio_region_),
            ~0u,
            0,
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::CreateAudioRegionResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::UpdateAudioRegionRequest,
                _impl_._has_bits_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::UpdateAudioRegionRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::UpdateAudioRegionRequest,
                _impl_.audio_region_),
            0,
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::UpdateAudioRegionResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeleteAudioRegionRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeleteAudioRegionRequest,
                _impl_.audio_region_id_),
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DeleteAudioRegionResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, 14, -1, sizeof(::novonotes::audio_engine::v1alpha1::AudioRegion)},
    {20, 30, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::CreateAudioRegionRequest)},
    {32, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::CreateAudioRegionResponse)},
    {40, 49, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::UpdateAudioRegionRequest)},
    {50, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::UpdateAudioRegionResponse)},
    {58, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::DeleteAudioRegionRequest)},
    {67, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::DeleteAudioRegionResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::novonotes::audio_engine::v1alpha1::_AudioRegion_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::
         _CreateAudioRegionRequest_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _CreateAudioRegionResponse_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _UpdateAudioRegionRequest_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _UpdateAudioRegionResponse_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _DeleteAudioRegionRequest_default_instance_._instance,
    &::novonotes::audio_engine::v1alpha1::
         _DeleteAudioRegionResponse_default_instance_._instance,
};
const char
    descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto
        [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            "\n2novonotes/audio_engine/v1alpha1/audio_"
            "region.proto\022\037novonotes.audio_engine.v1a"
            "lpha1\032\037google/api/field_behavior.proto\032\031"
            "google/api/resource.proto\"\237\002\n\013AudioRegio"
            "n\022\022\n\002id\030\001 "
            "\001(\tB\006\340A\010\340A\002\022@\n\tparent_id\030\002 \001(\t"
            "B-\340A\003\372A\'\n%novonotes/audio-engine-api/Aud"
            "ioTrack\022\035\n\020source_file_path\030\003 "
            "\001(\tB\003\340A\002\022\025"
            "\n\010position\030\004 "
            "\001(\001B\003\340A\001\022\032\n\010duration\030\005 \001(\001B"
            "\003\340A\001H\000\210\001\001\022\024\n\007gain_db\030\006 "
            "\001(\001B\003\340A\001:E\352AB\n%no"
            "vonotes/audio-engin-api/AudioRegion*\014aud"
            "ioRegions2\013audioRegionB\013\n\t_duration\"\245\001\n\030"
            "CreateAudioRegionRequest\022@\n\tparent_id\030\002 "
            "\001(\tB-\340A\002\372A\'\n%novonotes/audio-engine-api/"
            "AudioTrack\022G\n\014audio_region\030\003 \001(\0132,.novon"
            "otes.audio_engine.v1alpha1.AudioRegionB\003"
            "\340A\002\"\033\n\031CreateAudioRegionResponse\"c\n\030Upda"
            "teAudioRegionRequest\022G\n\014audio_region\030\001 \001"
            "(\0132,.novonotes.audio_engine.v1alpha1.Aud"
            "ioRegionB\003\340A\002\"\033\n\031UpdateAudioRegionRespon"
            "se\"8\n\030DeleteAudioRegionRequest\022\034\n\017audio_"
            "region_id\030\001 "
            "\001(\tB\003\340A\002\"\033\n\031DeleteAudioRegio"
            "nResponseb\006proto3"};
static const ::_pbi::DescriptorTable* const
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto_deps
        [2] = {
            &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
            &::descriptor_table_google_2fapi_2fresource_2eproto,
};
static ::absl::once_flag
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto = {
        false,
        false,
        857,
        descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        "novonotes/audio_engine/v1alpha1/audio_region.proto",
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto_once,
        descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto_deps,
        2,
        7,
        schemas,
        file_default_instances,
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto::
            offsets,
        file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
};
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
// ===================================================================

class AudioRegion::_Internal
{
   public:
    using HasBits = decltype(std::declval<AudioRegion>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_._has_bits_);
};

AudioRegion::AudioRegion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.AudioRegion)
}
inline PROTOBUF_NDEBUG_INLINE AudioRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::AudioRegion& from_msg)
    : _has_bits_{from._has_bits_}
    , _cached_size_{0}
    , id_(arena, from.id_)
    , parent_id_(arena, from.parent_id_)
    , source_file_path_(arena, from.source_file_path_)
{}

AudioRegion::AudioRegion(::google::protobuf::Arena* arena,
                         const AudioRegion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    AudioRegion* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    ::memcpy(reinterpret_cast<char*>(&_impl_) + offsetof(Impl_, position_),
             reinterpret_cast<const char*>(&from._impl_) +
                 offsetof(Impl_, position_),
             offsetof(Impl_, gain_db_) - offsetof(Impl_, position_) +
                 sizeof(Impl_::gain_db_));

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.AudioRegion)
}
inline PROTOBUF_NDEBUG_INLINE AudioRegion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : _cached_size_{0}
    , id_(arena)
    , parent_id_(arena)
    , source_file_path_(arena)
{}

inline void AudioRegion::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    ::memset(reinterpret_cast<char*>(&_impl_) + offsetof(Impl_, position_), 0,
             offsetof(Impl_, gain_db_) - offsetof(Impl_, position_) +
                 sizeof(Impl_::gain_db_));
}
AudioRegion::~AudioRegion()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.AudioRegion)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void AudioRegion::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.id_.Destroy();
    _impl_.parent_id_.Destroy();
    _impl_.source_file_path_.Destroy();
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull AudioRegion::_class_data_ =
    {
        ::google::protobuf::Message::ClassData{
            &_AudioRegion_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &AudioRegion::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<AudioRegion>(),
            ::google::protobuf::Message::GetNewImpl<AudioRegion>(),
            ::google::protobuf::Message::GetClearImpl<AudioRegion>(),
            &AudioRegion::ByteSizeLong,
            &AudioRegion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_._cached_size_),
            false,
        },
        &AudioRegion::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData* AudioRegion::GetClassData()
    const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    3, 6, 0, 79, 2>
    AudioRegion::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_._has_bits_),
            0,      // no _extensions_
            6, 56,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967232,  // skipmap
            offsetof(decltype(_table_), field_entries),
            6,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           AudioRegion>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
            // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
            // (.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastUS1,
             {10, 63, 0, PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.id_)}},
            // string parent_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY,
            // (.google.api.resource_reference) = {
            {::_pbi::TcParser::FastUS1,
             {18, 63, 0,
              PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.parent_id_)}},
            // string source_file_path = 3 [(.google.api.field_behavior) =
            // REQUIRED];
            {::_pbi::TcParser::FastUS1,
             {26, 63, 0,
              PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.source_file_path_)}},
            // double position = 4 [(.google.api.field_behavior) = OPTIONAL];
            {::_pbi::TcParser::FastF64S1,
             {33, 63, 0, PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.position_)}},
            // optional double duration = 5 [(.google.api.field_behavior) =
            // OPTIONAL];
            {::_pbi::TcParser::FastF64S1,
             {41, 0, 0, PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.duration_)}},
            // double gain_db = 6 [(.google.api.field_behavior) = OPTIONAL];
            {::_pbi::TcParser::FastF64S1,
             {49, 63, 0, PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.gain_db_)}},
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        {{
            // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
            // (.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.id_), -1, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // string parent_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY,
            // (.google.api.resource_reference) = {
            {PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.parent_id_), -1, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // string source_file_path = 3 [(.google.api.field_behavior) =
            // REQUIRED];
            {PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.source_file_path_), -1,
             0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // double position = 4 [(.google.api.field_behavior) = OPTIONAL];
            {PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.position_), -1, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
            // optional double duration = 5 [(.google.api.field_behavior) =
            // OPTIONAL];
            {PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.duration_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
            // double gain_db = 6 [(.google.api.field_behavior) = OPTIONAL];
            {PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.gain_db_), -1, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
        }},
        // no aux_entries
        {{"\53\2\11\20\0\0\0\0"
          "novonotes.audio_engine.v1alpha1.AudioRegion"
          "id"
          "parent_id"
          "source_file_path"}},
    };

PROTOBUF_NOINLINE void AudioRegion::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.AudioRegion)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.id_.ClearToEmpty();
    _impl_.parent_id_.ClearToEmpty();
    _impl_.source_file_path_.ClearToEmpty();
    _impl_.position_ = 0;
    _impl_.duration_ = 0;
    _impl_.gain_db_ = 0;
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* AudioRegion::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const AudioRegion& this_ = static_cast<const AudioRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* AudioRegion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const AudioRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.AudioRegion)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
    // (.google.api.field_behavior) = REQUIRED];
    if(!this_._internal_id().empty())
    {
        const std::string& _s = this_._internal_id();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.AudioRegion.id");
        target = stream->WriteStringMaybeAliased(1, _s, target);
    }

    // string parent_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY,
    // (.google.api.resource_reference) = {
    if(!this_._internal_parent_id().empty())
    {
        const std::string& _s = this_._internal_parent_id();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.AudioRegion.parent_id");
        target = stream->WriteStringMaybeAliased(2, _s, target);
    }

    // string source_file_path = 3 [(.google.api.field_behavior) = REQUIRED];
    if(!this_._internal_source_file_path().empty())
    {
        const std::string& _s = this_._internal_source_file_path();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.AudioRegion.source_file_path");
        target = stream->WriteStringMaybeAliased(3, _s, target);
    }

    // double position = 4 [(.google.api.field_behavior) = OPTIONAL];
    if(::absl::bit_cast<::uint64_t>(this_._internal_position()) != 0)
    {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteDoubleToArray(
            4, this_._internal_position(), target);
    }

    cached_has_bits = this_._impl_._has_bits_[0];
    // optional double duration = 5 [(.google.api.field_behavior) = OPTIONAL];
    if(cached_has_bits & 0x00000001u)
    {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteDoubleToArray(
            5, this_._internal_duration(), target);
    }

    // double gain_db = 6 [(.google.api.field_behavior) = OPTIONAL];
    if(::absl::bit_cast<::uint64_t>(this_._internal_gain_db()) != 0)
    {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteDoubleToArray(
            6, this_._internal_gain_db(), target);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.AudioRegion)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AudioRegion::ByteSizeLong(const MessageLite& base)
{
    const AudioRegion& this_ = static_cast<const AudioRegion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AudioRegion::ByteSizeLong() const
{
    const AudioRegion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.AudioRegion)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
        // (.google.api.field_behavior) = REQUIRED];
        if(!this_._internal_id().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_id());
        }
        // string parent_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY,
        // (.google.api.resource_reference) = {
        if(!this_._internal_parent_id().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_parent_id());
        }
        // string source_file_path = 3 [(.google.api.field_behavior) =
        // REQUIRED];
        if(!this_._internal_source_file_path().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_source_file_path());
        }
        // double position = 4 [(.google.api.field_behavior) = OPTIONAL];
        if(::absl::bit_cast<::uint64_t>(this_._internal_position()) != 0)
        {
            total_size += 9;
        }
    }
    {
        // optional double duration = 5 [(.google.api.field_behavior) =
        // OPTIONAL];
        cached_has_bits = this_._impl_._has_bits_[0];
        if(cached_has_bits & 0x00000001u)
        {
            total_size += 9;
        }
    }
    {
        // double gain_db = 6 [(.google.api.field_behavior) = OPTIONAL];
        if(::absl::bit_cast<::uint64_t>(this_._internal_gain_db()) != 0)
        {
            total_size += 9;
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void AudioRegion::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<AudioRegion*>(&to_msg);
    auto& from = static_cast<const AudioRegion&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.AudioRegion)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(!from._internal_id().empty())
    {
        _this->_internal_set_id(from._internal_id());
    }
    if(!from._internal_parent_id().empty())
    {
        _this->_internal_set_parent_id(from._internal_parent_id());
    }
    if(!from._internal_source_file_path().empty())
    {
        _this->_internal_set_source_file_path(
            from._internal_source_file_path());
    }
    if(::absl::bit_cast<::uint64_t>(from._internal_position()) != 0)
    {
        _this->_impl_.position_ = from._impl_.position_;
    }
    cached_has_bits = from._impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        _this->_impl_.duration_ = from._impl_.duration_;
    }
    if(::absl::bit_cast<::uint64_t>(from._internal_gain_db()) != 0)
    {
        _this->_impl_.gain_db_ = from._impl_.gain_db_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void AudioRegion::CopyFrom(const AudioRegion& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.AudioRegion)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void AudioRegion::InternalSwap(AudioRegion* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_,
                                         arena);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_,
                                         &other->_impl_.parent_id_, arena);
    ::_pbi::ArenaStringPtr::InternalSwap(
        &_impl_.source_file_path_, &other->_impl_.source_file_path_, arena);
    ::google::protobuf::internal::memswap<
        PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.gain_db_) +
        sizeof(AudioRegion::_impl_.gain_db_) -
        PROTOBUF_FIELD_OFFSET(AudioRegion, _impl_.position_)>(
        reinterpret_cast<char*>(&_impl_.position_),
        reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata AudioRegion::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateAudioRegionRequest::_Internal
{
   public:
    using HasBits =
        decltype(std::declval<CreateAudioRegionRequest>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(CreateAudioRegionRequest, _impl_._has_bits_);
};

CreateAudioRegionRequest::CreateAudioRegionRequest(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateAudioRegionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::CreateAudioRegionRequest&
        from_msg)
    : _has_bits_{from._has_bits_}
    , _cached_size_{0}
    , parent_id_(arena, from.parent_id_)
{}

CreateAudioRegionRequest::CreateAudioRegionRequest(
    ::google::protobuf::Arena* arena, const CreateAudioRegionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    CreateAudioRegionRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    ::uint32_t cached_has_bits = _impl_._has_bits_[0];
    _impl_.audio_region_ =
        (cached_has_bits & 0x00000001u)
            ? ::google::protobuf::Message::CopyConstruct<
                  ::novonotes::audio_engine::v1alpha1::AudioRegion>(
                  arena, *from._impl_.audio_region_)
            : nullptr;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateAudioRegionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : _cached_size_{0}
    , parent_id_(arena)
{}

inline void CreateAudioRegionRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.audio_region_ = {};
}
CreateAudioRegionRequest::~CreateAudioRegionRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void CreateAudioRegionRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.parent_id_.Destroy();
    delete _impl_.audio_region_;
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CreateAudioRegionRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_CreateAudioRegionRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CreateAudioRegionRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<
                CreateAudioRegionRequest>(),
            ::google::protobuf::Message::GetNewImpl<CreateAudioRegionRequest>(),
            ::google::protobuf::Message::GetClearImpl<
                CreateAudioRegionRequest>(),
            &CreateAudioRegionRequest::ByteSizeLong,
            &CreateAudioRegionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CreateAudioRegionRequest,
                                  _impl_._cached_size_),
            false,
        },
        &CreateAudioRegionRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
CreateAudioRegionRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    1, 2, 1, 74, 2>
    CreateAudioRegionRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(CreateAudioRegionRequest, _impl_._has_bits_),
            0,     // no _extensions_
            3, 8,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967289,  // skipmap
            offsetof(decltype(_table_), field_entries),
            2,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    CreateAudioRegionRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // string parent_id = 2 [(.google.api.field_behavior) = REQUIRED,
            // (.google.api.resource_reference) = {
            {::_pbi::TcParser::FastUS1,
             {18, 63, 0,
              PROTOBUF_FIELD_OFFSET(CreateAudioRegionRequest,
                                    _impl_.parent_id_)}},
            // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 3
            // [(.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastMtS1,
             {26, 0, 0,
              PROTOBUF_FIELD_OFFSET(CreateAudioRegionRequest,
                                    _impl_.audio_region_)}},
        }},
        {{65535, 65535}},
        {{
            // string parent_id = 2 [(.google.api.field_behavior) = REQUIRED,
            // (.google.api.resource_reference) = {
            {PROTOBUF_FIELD_OFFSET(CreateAudioRegionRequest, _impl_.parent_id_),
             -1, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 3
            // [(.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(CreateAudioRegionRequest,
                                   _impl_.audio_region_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::AudioRegion>()},
        }},
        {{"\70\11\0\0\0\0\0\0"
          "novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest"
          "parent_id"}},
    };

PROTOBUF_NOINLINE void CreateAudioRegionRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.parent_id_.ClearToEmpty();
    cached_has_bits = _impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(_impl_.audio_region_ != nullptr);
        _impl_.audio_region_->Clear();
    }
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* CreateAudioRegionRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const CreateAudioRegionRequest& this_ =
        static_cast<const CreateAudioRegionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* CreateAudioRegionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const CreateAudioRegionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string parent_id = 2 [(.google.api.field_behavior) = REQUIRED,
    // (.google.api.resource_reference) = {
    if(!this_._internal_parent_id().empty())
    {
        const std::string& _s = this_._internal_parent_id();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.parent_"
            "id");
        target = stream->WriteStringMaybeAliased(2, _s, target);
    }

    cached_has_bits = this_._impl_._has_bits_[0];
    // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 3
    // [(.google.api.field_behavior) = REQUIRED];
    if(cached_has_bits & 0x00000001u)
    {
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.audio_region_,
                this_._impl_.audio_region_->GetCachedSize(), target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateAudioRegionRequest::ByteSizeLong(const MessageLite& base)
{
    const CreateAudioRegionRequest& this_ =
        static_cast<const CreateAudioRegionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateAudioRegionRequest::ByteSizeLong() const
{
    const CreateAudioRegionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // string parent_id = 2 [(.google.api.field_behavior) = REQUIRED,
        // (.google.api.resource_reference) = {
        if(!this_._internal_parent_id().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_parent_id());
        }
    }
    {
        // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 3
        // [(.google.api.field_behavior) = REQUIRED];
        cached_has_bits = this_._impl_._has_bits_[0];
        if(cached_has_bits & 0x00000001u)
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.audio_region_);
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void CreateAudioRegionRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<CreateAudioRegionRequest*>(&to_msg);
    auto& from = static_cast<const CreateAudioRegionRequest&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(!from._internal_parent_id().empty())
    {
        _this->_internal_set_parent_id(from._internal_parent_id());
    }
    cached_has_bits = from._impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(from._impl_.audio_region_ != nullptr);
        if(_this->_impl_.audio_region_ == nullptr)
        {
            _this->_impl_.audio_region_ =
                ::google::protobuf::Message::CopyConstruct<
                    ::novonotes::audio_engine::v1alpha1::AudioRegion>(
                    arena, *from._impl_.audio_region_);
        }
        else
        {
            _this->_impl_.audio_region_->MergeFrom(*from._impl_.audio_region_);
        }
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void CreateAudioRegionRequest::CopyFrom(const CreateAudioRegionRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void CreateAudioRegionRequest::InternalSwap(
    CreateAudioRegionRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_,
                                         &other->_impl_.parent_id_, arena);
    swap(_impl_.audio_region_, other->_impl_.audio_region_);
}

::google::protobuf::Metadata CreateAudioRegionRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateAudioRegionResponse::_Internal
{
   public:
};

CreateAudioRegionResponse::CreateAudioRegionResponse(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.CreateAudioRegionResponse)
}
CreateAudioRegionResponse::CreateAudioRegionResponse(
    ::google::protobuf::Arena* arena, const CreateAudioRegionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    CreateAudioRegionResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.CreateAudioRegionResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CreateAudioRegionResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_CreateAudioRegionResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CreateAudioRegionResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                CreateAudioRegionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                CreateAudioRegionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                CreateAudioRegionResponse>(),
            &CreateAudioRegionResponse::ByteSizeLong,
            &CreateAudioRegionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CreateAudioRegionResponse,
                                  _impl_._cached_size_),
            false,
        },
        &CreateAudioRegionResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
CreateAudioRegionResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    CreateAudioRegionResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    CreateAudioRegionResponse>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata CreateAudioRegionResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// ===================================================================

class UpdateAudioRegionRequest::_Internal
{
   public:
    using HasBits =
        decltype(std::declval<UpdateAudioRegionRequest>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(UpdateAudioRegionRequest, _impl_._has_bits_);
};

UpdateAudioRegionRequest::UpdateAudioRegionRequest(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAudioRegionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::UpdateAudioRegionRequest&
        from_msg)
    : _has_bits_{from._has_bits_}
    , _cached_size_{0}
{}

UpdateAudioRegionRequest::UpdateAudioRegionRequest(
    ::google::protobuf::Arena* arena, const UpdateAudioRegionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    UpdateAudioRegionRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    ::uint32_t cached_has_bits = _impl_._has_bits_[0];
    _impl_.audio_region_ =
        (cached_has_bits & 0x00000001u)
            ? ::google::protobuf::Message::CopyConstruct<
                  ::novonotes::audio_engine::v1alpha1::AudioRegion>(
                  arena, *from._impl_.audio_region_)
            : nullptr;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAudioRegionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : _cached_size_{0}
{}

inline void UpdateAudioRegionRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.audio_region_ = {};
}
UpdateAudioRegionRequest::~UpdateAudioRegionRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void UpdateAudioRegionRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    delete _impl_.audio_region_;
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    UpdateAudioRegionRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_UpdateAudioRegionRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &UpdateAudioRegionRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<
                UpdateAudioRegionRequest>(),
            ::google::protobuf::Message::GetNewImpl<UpdateAudioRegionRequest>(),
            ::google::protobuf::Message::GetClearImpl<
                UpdateAudioRegionRequest>(),
            &UpdateAudioRegionRequest::ByteSizeLong,
            &UpdateAudioRegionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(UpdateAudioRegionRequest,
                                  _impl_._cached_size_),
            false,
        },
        &UpdateAudioRegionRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
UpdateAudioRegionRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
    UpdateAudioRegionRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(UpdateAudioRegionRequest, _impl_._has_bits_),
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    UpdateAudioRegionRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 1
            // [(.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastMtS1,
             {10, 0, 0,
              PROTOBUF_FIELD_OFFSET(UpdateAudioRegionRequest,
                                    _impl_.audio_region_)}},
        }},
        {{65535, 65535}},
        {{
            // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 1
            // [(.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(UpdateAudioRegionRequest,
                                   _impl_.audio_region_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::AudioRegion>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void UpdateAudioRegionRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    cached_has_bits = _impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(_impl_.audio_region_ != nullptr);
        _impl_.audio_region_->Clear();
    }
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* UpdateAudioRegionRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const UpdateAudioRegionRequest& this_ =
        static_cast<const UpdateAudioRegionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* UpdateAudioRegionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const UpdateAudioRegionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = this_._impl_._has_bits_[0];
    // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 1
    // [(.google.api.field_behavior) = REQUIRED];
    if(cached_has_bits & 0x00000001u)
    {
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.audio_region_,
                this_._impl_.audio_region_->GetCachedSize(), target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateAudioRegionRequest::ByteSizeLong(const MessageLite& base)
{
    const UpdateAudioRegionRequest& this_ =
        static_cast<const UpdateAudioRegionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateAudioRegionRequest::ByteSizeLong() const
{
    const UpdateAudioRegionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 1
        // [(.google.api.field_behavior) = REQUIRED];
        cached_has_bits = this_._impl_._has_bits_[0];
        if(cached_has_bits & 0x00000001u)
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.audio_region_);
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void UpdateAudioRegionRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<UpdateAudioRegionRequest*>(&to_msg);
    auto& from = static_cast<const UpdateAudioRegionRequest&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = from._impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(from._impl_.audio_region_ != nullptr);
        if(_this->_impl_.audio_region_ == nullptr)
        {
            _this->_impl_.audio_region_ =
                ::google::protobuf::Message::CopyConstruct<
                    ::novonotes::audio_engine::v1alpha1::AudioRegion>(
                    arena, *from._impl_.audio_region_);
        }
        else
        {
            _this->_impl_.audio_region_->MergeFrom(*from._impl_.audio_region_);
        }
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void UpdateAudioRegionRequest::CopyFrom(const UpdateAudioRegionRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void UpdateAudioRegionRequest::InternalSwap(
    UpdateAudioRegionRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    swap(_impl_.audio_region_, other->_impl_.audio_region_);
}

::google::protobuf::Metadata UpdateAudioRegionRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateAudioRegionResponse::_Internal
{
   public:
};

UpdateAudioRegionResponse::UpdateAudioRegionResponse(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.UpdateAudioRegionResponse)
}
UpdateAudioRegionResponse::UpdateAudioRegionResponse(
    ::google::protobuf::Arena* arena, const UpdateAudioRegionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    UpdateAudioRegionResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.UpdateAudioRegionResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    UpdateAudioRegionResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_UpdateAudioRegionResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &UpdateAudioRegionResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                UpdateAudioRegionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                UpdateAudioRegionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                UpdateAudioRegionResponse>(),
            &UpdateAudioRegionResponse::ByteSizeLong,
            &UpdateAudioRegionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(UpdateAudioRegionResponse,
                                  _impl_._cached_size_),
            false,
        },
        &UpdateAudioRegionResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
UpdateAudioRegionResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    UpdateAudioRegionResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    UpdateAudioRegionResponse>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata UpdateAudioRegionResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// ===================================================================

class DeleteAudioRegionRequest::_Internal
{
   public:
};

DeleteAudioRegionRequest::DeleteAudioRegionRequest(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteAudioRegionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::DeleteAudioRegionRequest&
        from_msg)
    : audio_region_id_(arena, from.audio_region_id_)
    , _cached_size_{0}
{}

DeleteAudioRegionRequest::DeleteAudioRegionRequest(
    ::google::protobuf::Arena* arena, const DeleteAudioRegionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    DeleteAudioRegionRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteAudioRegionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : audio_region_id_(arena)
    , _cached_size_{0}
{}

inline void DeleteAudioRegionRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
DeleteAudioRegionRequest::~DeleteAudioRegionRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void DeleteAudioRegionRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.audio_region_id_.Destroy();
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DeleteAudioRegionRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DeleteAudioRegionRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DeleteAudioRegionRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<
                DeleteAudioRegionRequest>(),
            ::google::protobuf::Message::GetNewImpl<DeleteAudioRegionRequest>(),
            ::google::protobuf::Message::GetClearImpl<
                DeleteAudioRegionRequest>(),
            &DeleteAudioRegionRequest::ByteSizeLong,
            &DeleteAudioRegionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DeleteAudioRegionRequest,
                                  _impl_._cached_size_),
            false,
        },
        &DeleteAudioRegionRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
DeleteAudioRegionRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 1, 0, 80, 2>
    DeleteAudioRegionRequest::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            1, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967294,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    DeleteAudioRegionRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // string audio_region_id = 1 [(.google.api.field_behavior) =
            // REQUIRED];
            {::_pbi::TcParser::FastUS1,
             {10, 63, 0,
              PROTOBUF_FIELD_OFFSET(DeleteAudioRegionRequest,
                                    _impl_.audio_region_id_)}},
        }},
        {{65535, 65535}},
        {{
            // string audio_region_id = 1 [(.google.api.field_behavior) =
            // REQUIRED];
            {PROTOBUF_FIELD_OFFSET(DeleteAudioRegionRequest,
                                   _impl_.audio_region_id_),
             0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
        }},
        // no aux_entries
        {{"\70\17\0\0\0\0\0\0"
          "novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest"
          "audio_region_id"}},
    };

PROTOBUF_NOINLINE void DeleteAudioRegionRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.audio_region_id_.ClearToEmpty();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* DeleteAudioRegionRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const DeleteAudioRegionRequest& this_ =
        static_cast<const DeleteAudioRegionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* DeleteAudioRegionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const DeleteAudioRegionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string audio_region_id = 1 [(.google.api.field_behavior) = REQUIRED];
    if(!this_._internal_audio_region_id().empty())
    {
        const std::string& _s = this_._internal_audio_region_id();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest.audio_"
            "region_id");
        target = stream->WriteStringMaybeAliased(1, _s, target);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteAudioRegionRequest::ByteSizeLong(const MessageLite& base)
{
    const DeleteAudioRegionRequest& this_ =
        static_cast<const DeleteAudioRegionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteAudioRegionRequest::ByteSizeLong() const
{
    const DeleteAudioRegionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // string audio_region_id = 1 [(.google.api.field_behavior) = REQUIRED];
        if(!this_._internal_audio_region_id().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_audio_region_id());
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void DeleteAudioRegionRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<DeleteAudioRegionRequest*>(&to_msg);
    auto& from = static_cast<const DeleteAudioRegionRequest&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(!from._internal_audio_region_id().empty())
    {
        _this->_internal_set_audio_region_id(from._internal_audio_region_id());
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void DeleteAudioRegionRequest::CopyFrom(const DeleteAudioRegionRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void DeleteAudioRegionRequest::InternalSwap(
    DeleteAudioRegionRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    ::_pbi::ArenaStringPtr::InternalSwap(
        &_impl_.audio_region_id_, &other->_impl_.audio_region_id_, arena);
}

::google::protobuf::Metadata DeleteAudioRegionRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteAudioRegionResponse::_Internal
{
   public:
};

DeleteAudioRegionResponse::DeleteAudioRegionResponse(
    ::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.DeleteAudioRegionResponse)
}
DeleteAudioRegionResponse::DeleteAudioRegionResponse(
    ::google::protobuf::Arena* arena, const DeleteAudioRegionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    DeleteAudioRegionResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.DeleteAudioRegionResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DeleteAudioRegionResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_DeleteAudioRegionResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DeleteAudioRegionResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                DeleteAudioRegionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                DeleteAudioRegionResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                DeleteAudioRegionResponse>(),
            &DeleteAudioRegionResponse::ByteSizeLong,
            &DeleteAudioRegionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DeleteAudioRegionResponse,
                                  _impl_._cached_size_),
            false,
        },
        &DeleteAudioRegionResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
DeleteAudioRegionResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    DeleteAudioRegionResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    DeleteAudioRegionResponse>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata DeleteAudioRegionResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type _static_init2_
    PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(
             &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
