// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/connection.proto
// Protobuf C++ Version: 5.28.1

#include "novonotes/audio_engine/v1alpha1/connection.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
template <typename>
PROTOBUF_CONSTEXPR DisconnectResponse::DisconnectResponse(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct DisconnectResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR DisconnectResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~DisconnectResponseDefaultTypeInternal() {}
    union
    {
        DisconnectResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisconnectResponseDefaultTypeInternal
        _DisconnectResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ConnectResponse::ConnectResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase()
{
}
#endif  // PROTOBUF_CUSTOM_VTABLE
    struct ConnectResponseDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR ConnectResponseDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~ConnectResponseDefaultTypeInternal() {}
    union
    {
        ConnectResponse _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectResponseDefaultTypeInternal
        _ConnectResponse_default_instance_;

inline constexpr Connection::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : source_{}
    , destination_{}
    , _cached_size_{0}
    , _oneof_case_{}
{}

template <typename>
PROTOBUF_CONSTEXPR Connection::Connection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct ConnectionDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR ConnectionDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~ConnectionDefaultTypeInternal() {}
    union
    {
        Connection _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionDefaultTypeInternal
        _Connection_default_instance_;

inline constexpr DisconnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0}
    , connection_{nullptr}
{}

template <typename>
PROTOBUF_CONSTEXPR DisconnectRequest::DisconnectRequest(
    ::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct DisconnectRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR DisconnectRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~DisconnectRequestDefaultTypeInternal() {}
    union
    {
        DisconnectRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisconnectRequestDefaultTypeInternal
        _DisconnectRequest_default_instance_;

inline constexpr ConnectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0}
    , connection_{nullptr}
{}

template <typename>
PROTOBUF_CONSTEXPR ConnectRequest::ConnectRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct ConnectRequestDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR ConnectRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~ConnectRequestDefaultTypeInternal() {}
    union
    {
        ConnectRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectRequestDefaultTypeInternal
        _ConnectRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto =
        nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto =
        nullptr;
const ::uint32_t
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto::
        offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::Connection,
                _internal_metadata_),
            ~0u,  // no _extensions_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::Connection,
                _impl_._oneof_case_[0]),
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            ::_pbi::kInvalidFieldOffsetTag,
            ::_pbi::kInvalidFieldOffsetTag,
            ::_pbi::kInvalidFieldOffsetTag,
            ::_pbi::kInvalidFieldOffsetTag,
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::Connection,
                _impl_.source_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::Connection,
                _impl_.destination_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::ConnectRequest,
                _impl_._has_bits_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::ConnectRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::ConnectRequest,
                _impl_.connection_),
            0,
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::ConnectResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DisconnectRequest,
                _impl_._has_bits_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DisconnectRequest,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DisconnectRequest,
                _impl_.connection_),
            0,
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::DisconnectResponse,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, -1, sizeof(::novonotes::audio_engine::v1alpha1::Connection)},
    {14, 23, -1, sizeof(::novonotes::audio_engine::v1alpha1::ConnectRequest)},
    {24, -1, -1, sizeof(::novonotes::audio_engine::v1alpha1::ConnectResponse)},
    {32, 41, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::DisconnectRequest)},
    {42, -1, -1,
     sizeof(::novonotes::audio_engine::v1alpha1::DisconnectResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::novonotes::audio_engine::v1alpha1::_Connection_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_ConnectRequest_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_ConnectResponse_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_DisconnectRequest_default_instance_
         ._instance,
    &::novonotes::audio_engine::v1alpha1::_DisconnectResponse_default_instance_
         ._instance,
};
const char
    descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto
        [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            "\n0novonotes/audio_engine/v1alpha1/connec"
            "tion.proto\022\037novonotes.audio_engine.v1alp"
            "ha1\032\037google/api/field_behavior.proto\032\033go"
            "ogle/protobuf/empty.proto\"\255\001\n\nConnection"
            "\022\034\n\022src_audio_track_id\030e "
            "\001(\tH\000\022\027\n\rsrc_de"
            "vice_id\030g \001(\tH\000\0224\n\021dest_audio_output\030\311\001 "
            "\001(\0132\026.google.protobuf.EmptyH\001\022\031\n\016dest_de"
            "vice_id\030\312\001 "
            "\001(\tH\001B\010\n\006sourceB\r\n\013destinatio"
            "n\"V\n\016ConnectRequest\022D\n\nconnection\030\002 \001(\0132"
            "+.novonotes.audio_engine.v1alpha1.Connec"
            "tionB\003\340A\002\"\021\n\017ConnectResponse\"Y\n\021Disconne"
            "ctRequest\022D\n\nconnection\030\002 \001(\0132+.novonote"
            "s.audio_engine.v1alpha1.ConnectionB\003\340A\002\""
            "\024\n\022DisconnectResponseb\006proto3"};
static const ::_pbi::DescriptorTable* const
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto_deps
        [2] = {
            &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
            &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto = {
        false,
        false,
        549,
        descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto,
        "novonotes/audio_engine/v1alpha1/connection.proto",
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto_once,
        descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto_deps,
        2,
        5,
        schemas,
        file_default_instances,
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto::
            offsets,
        file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto,
        file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto,
};
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
// ===================================================================

class Connection::_Internal
{
   public:
    static constexpr ::int32_t kOneofCaseOffset = PROTOBUF_FIELD_OFFSET(
        ::novonotes::audio_engine::v1alpha1::Connection, _impl_._oneof_case_);
};

void Connection::set_allocated_dest_audio_output(
    ::google::protobuf::Empty* dest_audio_output)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    clear_destination();
    if(dest_audio_output)
    {
        ::google::protobuf::Arena* submessage_arena =
            reinterpret_cast<::google::protobuf::MessageLite*>(
                dest_audio_output)
                ->GetArena();
        if(message_arena != submessage_arena)
        {
            dest_audio_output = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, dest_audio_output, submessage_arena);
        }
        set_has_dest_audio_output();
        _impl_.destination_.dest_audio_output_ = dest_audio_output;
    }
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.Connection.dest_audio_output)
}
void Connection::clear_dest_audio_output()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(destination_case() == kDestAudioOutput)
    {
        if(GetArena() == nullptr)
        {
            delete _impl_.destination_.dest_audio_output_;
        }
        else if(::google::protobuf::internal::
                    DebugHardenClearOneofMessageOnArena())
        {
            ::google::protobuf::internal::MaybePoisonAfterClear(
                _impl_.destination_.dest_audio_output_);
        }
        clear_has_destination();
    }
}
Connection::Connection(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.Connection)
}
inline PROTOBUF_NDEBUG_INLINE Connection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::Connection& from_msg)
    : source_{}
    , destination_{}
    , _cached_size_{0}
    , _oneof_case_{from._oneof_case_[0], from._oneof_case_[1]}
{}

Connection::Connection(::google::protobuf::Arena* arena, const Connection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    Connection* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    switch(source_case())
    {
        case SOURCE_NOT_SET:
            break;
        case kSrcAudioTrackId:
            new(&_impl_.source_
                     .src_audio_track_id_) decltype(_impl_.source_
                                                        .src_audio_track_id_){
                arena, from._impl_.source_.src_audio_track_id_};
            break;
        case kSrcDeviceId:
            new(&_impl_.source_.src_device_id_) decltype(_impl_.source_
                                                             .src_device_id_){
                arena, from._impl_.source_.src_device_id_};
            break;
    }
    switch(destination_case())
    {
        case DESTINATION_NOT_SET:
            break;
        case kDestAudioOutput:
            _impl_.destination_.dest_audio_output_ =
                ::google::protobuf::Message::CopyConstruct<
                    ::google::protobuf::Empty>(
                    arena, *from._impl_.destination_.dest_audio_output_);
            break;
        case kDestDeviceId:
            new(&_impl_.destination_
                     .dest_device_id_) decltype(_impl_.destination_
                                                    .dest_device_id_){
                arena, from._impl_.destination_.dest_device_id_};
            break;
    }

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.Connection)
}
inline PROTOBUF_NDEBUG_INLINE Connection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : source_{}
    , destination_{}
    , _cached_size_{0}
    , _oneof_case_{}
{}

inline void Connection::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
}
Connection::~Connection()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.Connection)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void Connection::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    if(has_source())
    {
        clear_source();
    }
    if(has_destination())
    {
        clear_destination();
    }
    _impl_.~Impl_();
}

void Connection::clear_source()
{
    // @@protoc_insertion_point(one_of_clear_start:novonotes.audio_engine.v1alpha1.Connection)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    switch(source_case())
    {
        case kSrcAudioTrackId:
        {
            _impl_.source_.src_audio_track_id_.Destroy();
            break;
        }
        case kSrcDeviceId:
        {
            _impl_.source_.src_device_id_.Destroy();
            break;
        }
        case SOURCE_NOT_SET:
        {
            break;
        }
    }
    _impl_._oneof_case_[0] = SOURCE_NOT_SET;
}

void Connection::clear_destination()
{
    // @@protoc_insertion_point(one_of_clear_start:novonotes.audio_engine.v1alpha1.Connection)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    switch(destination_case())
    {
        case kDestAudioOutput:
        {
            if(GetArena() == nullptr)
            {
                delete _impl_.destination_.dest_audio_output_;
            }
            else if(::google::protobuf::internal::
                        DebugHardenClearOneofMessageOnArena())
            {
                ::google::protobuf::internal::MaybePoisonAfterClear(
                    _impl_.destination_.dest_audio_output_);
            }
            break;
        }
        case kDestDeviceId:
        {
            _impl_.destination_.dest_device_id_.Destroy();
            break;
        }
        case DESTINATION_NOT_SET:
        {
            break;
        }
    }
    _impl_._oneof_case_[1] = DESTINATION_NOT_SET;
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull Connection::_class_data_ =
    {
        ::google::protobuf::Message::ClassData{
            &_Connection_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Connection::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Connection>(),
            ::google::protobuf::Message::GetNewImpl<Connection>(),
            ::google::protobuf::Message::GetClearImpl<Connection>(),
            &Connection::ByteSizeLong,
            &Connection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Connection, _impl_._cached_size_),
            false,
        },
        &Connection::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData* Connection::GetClassData()
    const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 4, 1, 96, 12>
    Connection::_table_ = {
        {
            0,       // no _has_bits_
            0,       // no _extensions_
            202, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,  // skipmap
            offsetof(decltype(_table_), field_entries),
            4,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           Connection>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{101, 0, 1, 65530, 0, 201, 0, 1, 65532, 2, 65535, 65535}},
        {{
            // string src_audio_track_id = 101;
            {PROTOBUF_FIELD_OFFSET(Connection,
                                   _impl_.source_.src_audio_track_id_),
             _Internal::kOneofCaseOffset + 0, 0,
             (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
            // string src_device_id = 103;
            {PROTOBUF_FIELD_OFFSET(Connection, _impl_.source_.src_device_id_),
             _Internal::kOneofCaseOffset + 0, 0,
             (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
            // .google.protobuf.Empty dest_audio_output = 201;
            {PROTOBUF_FIELD_OFFSET(Connection,
                                   _impl_.destination_.dest_audio_output_),
             _Internal::kOneofCaseOffset + 4, 0,
             (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
            // string dest_device_id = 202;
            {PROTOBUF_FIELD_OFFSET(Connection,
                                   _impl_.destination_.dest_device_id_),
             _Internal::kOneofCaseOffset + 4, 0,
             (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
        }},
        {{
            {::_pbi::TcParser::GetTable<::google::protobuf::Empty>()},
        }},
        {{"\52\22\15\0\16\0\0\0"
          "novonotes.audio_engine.v1alpha1.Connection"
          "src_audio_track_id"
          "src_device_id"
          "dest_device_id"}},
    };

PROTOBUF_NOINLINE void Connection::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.Connection)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    clear_source();
    clear_destination();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* Connection::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const Connection& this_ = static_cast<const Connection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* Connection::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const Connection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.Connection)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    switch(this_.source_case())
    {
        case kSrcAudioTrackId:
        {
            const std::string& _s = this_._internal_src_audio_track_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()),
                ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                "novonotes.audio_engine.v1alpha1.Connection.src_audio_track_"
                "id");
            target = stream->WriteStringMaybeAliased(101, _s, target);
            break;
        }
        case kSrcDeviceId:
        {
            const std::string& _s = this_._internal_src_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()),
                ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                "novonotes.audio_engine.v1alpha1.Connection.src_device_id");
            target = stream->WriteStringMaybeAliased(103, _s, target);
            break;
        }
        default:
            break;
    }
    switch(this_.destination_case())
    {
        case kDestAudioOutput:
        {
            target = ::google::protobuf::internal::WireFormatLite::
                InternalWriteMessage(
                    201, *this_._impl_.destination_.dest_audio_output_,
                    this_._impl_.destination_.dest_audio_output_
                        ->GetCachedSize(),
                    target, stream);
            break;
        }
        case kDestDeviceId:
        {
            const std::string& _s = this_._internal_dest_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()),
                ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                "novonotes.audio_engine.v1alpha1.Connection.dest_device_id");
            target = stream->WriteStringMaybeAliased(202, _s, target);
            break;
        }
        default:
            break;
    }
    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.Connection)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Connection::ByteSizeLong(const MessageLite& base)
{
    const Connection& this_ = static_cast<const Connection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Connection::ByteSizeLong() const
{
    const Connection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.Connection)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    switch(this_.source_case())
    {
        // string src_audio_track_id = 101;
        case kSrcAudioTrackId:
        {
            total_size +=
                2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_src_audio_track_id());
            break;
        }
        // string src_device_id = 103;
        case kSrcDeviceId:
        {
            total_size +=
                2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_src_device_id());
            break;
        }
        case SOURCE_NOT_SET:
        {
            break;
        }
    }
    switch(this_.destination_case())
    {
        // .google.protobuf.Empty dest_audio_output = 201;
        case kDestAudioOutput:
        {
            total_size +=
                2 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.destination_.dest_audio_output_);
            break;
        }
        // string dest_device_id = 202;
        case kDestDeviceId:
        {
            total_size +=
                2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_dest_device_id());
            break;
        }
        case DESTINATION_NOT_SET:
        {
            break;
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void Connection::MergeImpl(::google::protobuf::MessageLite& to_msg,
                           const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<Connection*>(&to_msg);
    auto& from = static_cast<const Connection&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.Connection)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if(const uint32_t oneof_from_case = from._impl_._oneof_case_[0])
    {
        const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
        const bool oneof_needs_init = oneof_to_case != oneof_from_case;
        if(oneof_needs_init)
        {
            if(oneof_to_case != 0)
            {
                _this->clear_source();
            }
            _this->_impl_._oneof_case_[0] = oneof_from_case;
        }

        switch(oneof_from_case)
        {
            case kSrcAudioTrackId:
            {
                if(oneof_needs_init)
                {
                    _this->_impl_.source_.src_audio_track_id_.InitDefault();
                }
                _this->_impl_.source_.src_audio_track_id_.Set(
                    from._internal_src_audio_track_id(), arena);
                break;
            }
            case kSrcDeviceId:
            {
                if(oneof_needs_init)
                {
                    _this->_impl_.source_.src_device_id_.InitDefault();
                }
                _this->_impl_.source_.src_device_id_.Set(
                    from._internal_src_device_id(), arena);
                break;
            }
            case SOURCE_NOT_SET:
                break;
        }
    }
    if(const uint32_t oneof_from_case = from._impl_._oneof_case_[1])
    {
        const uint32_t oneof_to_case = _this->_impl_._oneof_case_[1];
        const bool oneof_needs_init = oneof_to_case != oneof_from_case;
        if(oneof_needs_init)
        {
            if(oneof_to_case != 0)
            {
                _this->clear_destination();
            }
            _this->_impl_._oneof_case_[1] = oneof_from_case;
        }

        switch(oneof_from_case)
        {
            case kDestAudioOutput:
            {
                if(oneof_needs_init)
                {
                    _this->_impl_.destination_.dest_audio_output_ =
                        ::google::protobuf::Message::CopyConstruct<
                            ::google::protobuf::Empty>(
                            arena,
                            *from._impl_.destination_.dest_audio_output_);
                }
                else
                {
                    _this->_impl_.destination_.dest_audio_output_->MergeFrom(
                        from._internal_dest_audio_output());
                }
                break;
            }
            case kDestDeviceId:
            {
                if(oneof_needs_init)
                {
                    _this->_impl_.destination_.dest_device_id_.InitDefault();
                }
                _this->_impl_.destination_.dest_device_id_.Set(
                    from._internal_dest_device_id(), arena);
                break;
            }
            case DESTINATION_NOT_SET:
                break;
        }
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void Connection::CopyFrom(const Connection& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.Connection)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void Connection::InternalSwap(Connection* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_.source_, other->_impl_.source_);
    swap(_impl_.destination_, other->_impl_.destination_);
    swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
    swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::google::protobuf::Metadata Connection::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConnectRequest::_Internal
{
   public:
    using HasBits = decltype(std::declval<ConnectRequest>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_._has_bits_);
};

ConnectRequest::ConnectRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.ConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE ConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::ConnectRequest& from_msg)
    : _has_bits_{from._has_bits_}
    , _cached_size_{0}
{}

ConnectRequest::ConnectRequest(::google::protobuf::Arena* arena,
                               const ConnectRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    ConnectRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    ::uint32_t cached_has_bits = _impl_._has_bits_[0];
    _impl_.connection_ =
        (cached_has_bits & 0x00000001u)
            ? ::google::protobuf::Message::CopyConstruct<
                  ::novonotes::audio_engine::v1alpha1::Connection>(
                  arena, *from._impl_.connection_)
            : nullptr;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.ConnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE ConnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : _cached_size_{0}
{}

inline void ConnectRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.connection_ = {};
}
ConnectRequest::~ConnectRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.ConnectRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void ConnectRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    delete _impl_.connection_;
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ConnectRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ConnectRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ConnectRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ConnectRequest>(),
            ::google::protobuf::Message::GetNewImpl<ConnectRequest>(),
            ::google::protobuf::Message::GetClearImpl<ConnectRequest>(),
            &ConnectRequest::ByteSizeLong,
            &ConnectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_._cached_size_),
            false,
        },
        &ConnectRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData* ConnectRequest::GetClassData()
    const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 1, 1, 0, 2>
    ConnectRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_._has_bits_),
            0,     // no _extensions_
            2, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967293,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           ConnectRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // .novonotes.audio_engine.v1alpha1.Connection connection = 2
            // [(.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastMtS1,
             {18, 0, 0,
              PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.connection_)}},
        }},
        {{65535, 65535}},
        {{
            // .novonotes.audio_engine.v1alpha1.Connection connection = 2
            // [(.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(ConnectRequest, _impl_.connection_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::Connection>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void ConnectRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.ConnectRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    cached_has_bits = _impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(_impl_.connection_ != nullptr);
        _impl_.connection_->Clear();
    }
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* ConnectRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const ConnectRequest& this_ = static_cast<const ConnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* ConnectRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const ConnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.ConnectRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = this_._impl_._has_bits_[0];
    // .novonotes.audio_engine.v1alpha1.Connection connection = 2
    // [(.google.api.field_behavior) = REQUIRED];
    if(cached_has_bits & 0x00000001u)
    {
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.connection_,
                this_._impl_.connection_->GetCachedSize(), target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.ConnectRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConnectRequest::ByteSizeLong(const MessageLite& base)
{
    const ConnectRequest& this_ = static_cast<const ConnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConnectRequest::ByteSizeLong() const
{
    const ConnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.ConnectRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // .novonotes.audio_engine.v1alpha1.Connection connection = 2
        // [(.google.api.field_behavior) = REQUIRED];
        cached_has_bits = this_._impl_._has_bits_[0];
        if(cached_has_bits & 0x00000001u)
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.connection_);
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void ConnectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                               const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<ConnectRequest*>(&to_msg);
    auto& from = static_cast<const ConnectRequest&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.ConnectRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = from._impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(from._impl_.connection_ != nullptr);
        if(_this->_impl_.connection_ == nullptr)
        {
            _this->_impl_.connection_ =
                ::google::protobuf::Message::CopyConstruct<
                    ::novonotes::audio_engine::v1alpha1::Connection>(
                    arena, *from._impl_.connection_);
        }
        else
        {
            _this->_impl_.connection_->MergeFrom(*from._impl_.connection_);
        }
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void ConnectRequest::CopyFrom(const ConnectRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.ConnectRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void ConnectRequest::InternalSwap(ConnectRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    swap(_impl_.connection_, other->_impl_.connection_);
}

::google::protobuf::Metadata ConnectRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConnectResponse::_Internal
{
   public:
};

ConnectResponse::ConnectResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.ConnectResponse)
}
ConnectResponse::ConnectResponse(::google::protobuf::Arena* arena,
                                 const ConnectResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    ConnectResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.ConnectResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ConnectResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_ConnectResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ConnectResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                ConnectResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                ConnectResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                ConnectResponse>(),
            &ConnectResponse::ByteSizeLong,
            &ConnectResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_._cached_size_),
            false,
        },
        &ConnectResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
ConnectResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 0, 0, 0, 2>
    ConnectResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           ConnectResponse>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata ConnectResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// ===================================================================

class DisconnectRequest::_Internal
{
   public:
    using HasBits =
        decltype(std::declval<DisconnectRequest>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(DisconnectRequest, _impl_._has_bits_);
};

DisconnectRequest::DisconnectRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.DisconnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE DisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::DisconnectRequest& from_msg)
    : _has_bits_{from._has_bits_}
    , _cached_size_{0}
{}

DisconnectRequest::DisconnectRequest(::google::protobuf::Arena* arena,
                                     const DisconnectRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    DisconnectRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    ::uint32_t cached_has_bits = _impl_._has_bits_[0];
    _impl_.connection_ =
        (cached_has_bits & 0x00000001u)
            ? ::google::protobuf::Message::CopyConstruct<
                  ::novonotes::audio_engine::v1alpha1::Connection>(
                  arena, *from._impl_.connection_)
            : nullptr;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.DisconnectRequest)
}
inline PROTOBUF_NDEBUG_INLINE DisconnectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : _cached_size_{0}
{}

inline void DisconnectRequest::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.connection_ = {};
}
DisconnectRequest::~DisconnectRequest()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.DisconnectRequest)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void DisconnectRequest::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    delete _impl_.connection_;
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DisconnectRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DisconnectRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DisconnectRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DisconnectRequest>(),
            ::google::protobuf::Message::GetNewImpl<DisconnectRequest>(),
            ::google::protobuf::Message::GetClearImpl<DisconnectRequest>(),
            &DisconnectRequest::ByteSizeLong,
            &DisconnectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DisconnectRequest, _impl_._cached_size_),
            false,
        },
        &DisconnectRequest::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
DisconnectRequest::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    0, 1, 1, 0, 2>
    DisconnectRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(DisconnectRequest, _impl_._has_bits_),
            0,     // no _extensions_
            2, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967293,  // skipmap
            offsetof(decltype(_table_), field_entries),
            1,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           DisconnectRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // .novonotes.audio_engine.v1alpha1.Connection connection = 2
            // [(.google.api.field_behavior) = REQUIRED];
            {::_pbi::TcParser::FastMtS1,
             {18, 0, 0,
              PROTOBUF_FIELD_OFFSET(DisconnectRequest, _impl_.connection_)}},
        }},
        {{65535, 65535}},
        {{
            // .novonotes.audio_engine.v1alpha1.Connection connection = 2
            // [(.google.api.field_behavior) = REQUIRED];
            {PROTOBUF_FIELD_OFFSET(DisconnectRequest, _impl_.connection_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::Connection>()},
        }},
        {{}},
    };

PROTOBUF_NOINLINE void DisconnectRequest::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.DisconnectRequest)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    cached_has_bits = _impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(_impl_.connection_ != nullptr);
        _impl_.connection_->Clear();
    }
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* DisconnectRequest::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const DisconnectRequest& this_ =
        static_cast<const DisconnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* DisconnectRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const DisconnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.DisconnectRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = this_._impl_._has_bits_[0];
    // .novonotes.audio_engine.v1alpha1.Connection connection = 2
    // [(.google.api.field_behavior) = REQUIRED];
    if(cached_has_bits & 0x00000001u)
    {
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.connection_,
                this_._impl_.connection_->GetCachedSize(), target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.DisconnectRequest)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DisconnectRequest::ByteSizeLong(const MessageLite& base)
{
    const DisconnectRequest& this_ =
        static_cast<const DisconnectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DisconnectRequest::ByteSizeLong() const
{
    const DisconnectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.DisconnectRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    {
        // .novonotes.audio_engine.v1alpha1.Connection connection = 2
        // [(.google.api.field_behavior) = REQUIRED];
        cached_has_bits = this_._impl_._has_bits_[0];
        if(cached_has_bits & 0x00000001u)
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                        *this_._impl_.connection_);
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void DisconnectRequest::MergeImpl(
    ::google::protobuf::MessageLite& to_msg,
    const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<DisconnectRequest*>(&to_msg);
    auto& from = static_cast<const DisconnectRequest&>(from_msg);
    ::google::protobuf::Arena* arena = _this->GetArena();
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.DisconnectRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = from._impl_._has_bits_[0];
    if(cached_has_bits & 0x00000001u)
    {
        ABSL_DCHECK(from._impl_.connection_ != nullptr);
        if(_this->_impl_.connection_ == nullptr)
        {
            _this->_impl_.connection_ =
                ::google::protobuf::Message::CopyConstruct<
                    ::novonotes::audio_engine::v1alpha1::Connection>(
                    arena, *from._impl_.connection_);
        }
        else
        {
            _this->_impl_.connection_->MergeFrom(*from._impl_.connection_);
        }
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void DisconnectRequest::CopyFrom(const DisconnectRequest& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.DisconnectRequest)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void DisconnectRequest::InternalSwap(DisconnectRequest* PROTOBUF_RESTRICT other)
{
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    swap(_impl_.connection_, other->_impl_.connection_);
}

::google::protobuf::Metadata DisconnectRequest::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DisconnectResponse::_Internal
{
   public:
};

DisconnectResponse::DisconnectResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.DisconnectResponse)
}
DisconnectResponse::DisconnectResponse(::google::protobuf::Arena* arena,
                                       const DisconnectResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    DisconnectResponse* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.DisconnectResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DisconnectResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_DisconnectResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DisconnectResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<
                DisconnectResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<
                DisconnectResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<
                DisconnectResponse>(),
            &DisconnectResponse::ByteSizeLong,
            &DisconnectResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DisconnectResponse, _impl_._cached_size_),
            false,
        },
        &DisconnectResponse::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData*
DisconnectResponse::GetClassData() const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
    DisconnectResponse::_table_ = {
        {
            0,     // no _has_bits_
            0,     // no _extensions_
            0, 0,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967295,                                // skipmap
            offsetof(decltype(_table_), field_names),  // no field_entries
            0,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::novonotes::audio_engine::v1alpha1::
                    DisconnectResponse>(),  // to_prefetch
#endif                                      // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        // no field_entries, or aux_entries
        {{}},
    };

::google::protobuf::Metadata DisconnectResponse::GetMetadata() const
{
    return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(
        GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type _static_init2_
    PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(
             &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2fconnection_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
