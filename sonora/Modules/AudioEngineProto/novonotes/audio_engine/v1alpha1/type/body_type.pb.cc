// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/type/body_type.proto
// Protobuf C++ Version: 5.28.1

#include "novonotes/audio_engine/v1alpha1/type/body_type.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
namespace type
{}  // namespace type
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
static const ::_pb::EnumDescriptor*
    file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto
        [1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto =
        nullptr;
const ::uint32_t
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto::
        offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char
    descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto
        [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            "\n4novonotes/audio_engine/v1alpha1/type/b"
            "ody_type.proto\022$novonotes.audio_engine.v"
            "1alpha1.type*\220\027\n\010BodyType\022\027\n\023BODY_TYPE_H"
            "ANDSHAKE\020\000\022)\n%BODY_TYPE_CREATE_AUDIO_REG"
            "ION_REQUEST\020\037\022*\n&BODY_TYPE_CREATE_AUDIO_"
            "REGION_RESPONSE\020 \022)\n%BODY_TYPE_UPDATE_AU"
            "DIO_REGION_REQUEST\020!\022*\n&BODY_TYPE_UPDATE"
            "_AUDIO_REGION_RESPONSE\020\"\022)\n%BODY_TYPE_DE"
            "LETE_AUDIO_REGION_REQUEST\020#\022*\n&BODY_TYPE"
            "_DELETE_AUDIO_REGION_RESPONSE\020$\022\"\n\036BODY_"
            "TYPE_CREATE_TRACK_REQUEST\020%\022#\n\037BODY_TYPE"
            "_CREATE_TRACK_RESPONSE\020&\022\"\n\036BODY_TYPE_UP"
            "DATE_TRACK_REQUEST\020\'\022#\n\037BODY_TYPE_UPDATE"
            "_TRACK_RESPONSE\020(\022\"\n\036BODY_TYPE_DELETE_TR"
            "ACK_REQUEST\020)\022#\n\037BODY_TYPE_DELETE_TRACK_"
            "RESPONSE\020*\022\035\n\031BODY_TYPE_CONNECT_REQUEST\020"
            "+\022\036\n\032BODY_TYPE_CONNECT_RESPONSE\020,\022 \n\034BOD"
            "Y_TYPE_DISCONNECT_REQUEST\020-\022!\n\035BODY_TYPE"
            "_DISCONNECT_RESPONSE\020.\022!\n\035BODY_TYPE_DEBU"
            "G_STATE_REQUEST\020/\022\"\n\036BODY_TYPE_DEBUG_STA"
            "TE_RESPONSE\0200\022 \n\034BODY_TYPE_SAVE_STATE_RE"
            "QUEST\0201\022!\n\035BODY_TYPE_SAVE_STATE_RESPONSE"
            "\0202\022,\n(BODY_TYPE_CREATE_DEVICE_INSTANCE_R"
            "EQUEST\0203\022-\n)BODY_TYPE_CREATE_DEVICE_INST"
            "ANCE_RESPONSE\0204\022,\n(BODY_TYPE_DELETE_DEVI"
            "CE_INSTANCE_REQUEST\0207\022-\n)BODY_TYPE_DELET"
            "E_DEVICE_INSTANCE_RESPONSE\0208\022 \n\034BODY_TYP"
            "E_INITIALIZE_REQUEST\0209\022!\n\035BODY_TYPE_INIT"
            "IALIZE_RESPONSE\020:\022\036\n\032BODY_TYPE_SHUTDOWN_"
            "REQUEST\020=\022\037\n\033BODY_TYPE_SHUTDOWN_RESPONSE"
            "\020>\022$\n BODY_TYPE_START_PLAYBACK_REQUEST\020\?"
            "\022%\n!BODY_TYPE_START_PLAYBACK_RESPONSE\020@\022"
            "#\n\037BODY_TYPE_STOP_PLAYBACK_REQUEST\020A\022$\n "
            "BODY_TYPE_STOP_PLAYBACK_RESPONSE\020B\022&\n\"BO"
            "DY_TYPE_UPDATE_TRANSPORT_REQUEST\020C\022\'\n#BO"
            "DY_TYPE_UPDATE_TRANSPORT_RESPONSE\020D\0224\n0B"
            "ODY_TYPE_START_PLAYHEAD_POSITION_STREAM_"
            "REQUEST\020E\0225\n1BODY_TYPE_START_PLAYHEAD_PO"
            "SITION_STREAM_RESPONSE\020F\0223\n/BODY_TYPE_ST"
            "OP_PLAYHEAD_POSITION_STREAM_REQUEST\020G\0224\n"
            "0BODY_TYPE_STOP_PLAYHEAD_POSITION_STREAM"
            "_RESPONSE\020H\022\"\n\036BODY_TYPE_RT_PLAYHEAD_POS"
            "ITION\020I\022$\n BODY_TYPE_PLAY_TEST_TONE_REQU"
            "EST\020J\022%\n!BODY_TYPE_PLAY_TEST_TONE_RESPON"
            "SE\020K\022*\n&BODY_TYPE_START_PARAMETER_SYNC_R"
            "EQUEST\020L\022+\n\'BODY_TYPE_START_PARAMETER_SY"
            "NC_RESPONSE\020M\022)\n%BODY_TYPE_STOP_PARAMETE"
            "R_SYNC_REQUEST\020N\022*\n&BODY_TYPE_STOP_PARAM"
            "ETER_SYNC_RESPONSE\020O\022)\n%BODY_TYPE_RT_UPD"
            "ATE_PARAMETER_COMMAND\020P\022+\n\'BODY_TYPE_RT_"
            "FINALIZE_PARAMETER_COMMAND\020Q\022\032\n\026BODY_TYP"
            "E_RT_PARAMETER\020R\022&\n\"BODY_TYPE_START_RT_S"
            "ESSION_REQUEST\020S\022\'\n#BODY_TYPE_START_RT_S"
            "ESSION_RESPONSE\020T\022%\n!BODY_TYPE_STOP_RT_S"
            "ESSION_REQUEST\020U\022&\n\"BODY_TYPE_STOP_RT_SE"
            "SSION_RESPONSE\020V\022-\n)BODY_TYPE_LIST_DEVIC"
            "E_DESCRIPTORS_REQUEST\020W\022.\n*BODY_TYPE_LIS"
            "T_DEVICE_DESCRIPTORS_RESPONSE\020X\022)\n%BODY_"
            "TYPE_GET_DEVICE_INSTANCE_REQUEST\020Y\022*\n&BO"
            "DY_TYPE_GET_DEVICE_INSTANCE_RESPONSE\020Z\022:"
            "\n6BODY_TYPE_SUBSCRIBE_TO_DEVICE_INSTANCE"
            "_UPDATES_REQUEST\020[\022;\n7BODY_TYPE_SUBSCRIB"
            "E_TO_DEVICE_INSTANCE_UPDATES_RESPONSE\020\\\022"
            "3\n/BODY_TYPE_RESTORE_DEVICE_INSTANCE_STA"
            "TE_REQUEST\020]\0224\n0BODY_TYPE_RESTORE_DEVICE"
            "_INSTANCE_STATE_RESPONSE\020^\022)\n%BODY_TYPE_"
            "SET_PARAMETER_VALUE_REQUEST\020_\022*\n&BODY_TY"
            "PE_SET_PARAMETER_VALUE_RESPONSE\020`\0220\n,BOD"
            "Y_TYPE_BATCH_SET_PARAMETER_VALUES_REQUES"
            "T\020a\0221\n-BODY_TYPE_BATCH_SET_PARAMETER_VAL"
            "UES_RESPONSE\020b\0225\n1BODY_TYPE_EXECUTE_DEVI"
            "CE_SPECIFIC_COMMAND_REQUEST\020c\0226\n2BODY_TY"
            "PE_EXECUTE_DEVICE_SPECIFIC_COMMAND_RESPO"
            "NSE\020d\022!\n\035BODY_TYPE_RESET_STATE_REQUEST\020e"
            "\022\"\n\036BODY_TYPE_RESET_STATE_RESPONSE\020f\022\033\n\026"
            "BODY_TYPE_ENGINE_"
            "ERROR\020\351\007\"\004\010\001\020\036\"\006\010\204\007\020\216"
            "\007\""
            "\006\010\350\007\020\350\007\"\006\010\320\017\020\237\037b\006pro"
            "to3"};
static ::absl::once_flag
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto = {
        false,
        false,
        3063,
        descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto,
        "novonotes/audio_engine/v1alpha1/type/body_type.proto",
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto_once,
        nullptr,
        0,
        0,
        schemas,
        file_default_instances,
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto::
            offsets,
        file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto,
        file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto,
};
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
namespace type
{
const ::google::protobuf::EnumDescriptor* BodyType_descriptor()
{
    ::google::protobuf::internal::AssignDescriptors(
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto);
    return file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto
        [0];
}
PROTOBUF_CONSTINIT const uint32_t BodyType_internal_data_[] = {
    65536u, 65664u, 3221225472u, 4090494975u, 4294967295u, 63u, 1001u,
};
bool BodyType_IsValid(int value)
{
    return ::_pbi::ValidateEnum(value, BodyType_internal_data_);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type _static_init2_
    PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(
             &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fbody_5ftype_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
