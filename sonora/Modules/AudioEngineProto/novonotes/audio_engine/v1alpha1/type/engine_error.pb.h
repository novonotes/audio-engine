// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/type/engine_error.proto
// Protobuf C++ Version: 5.28.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/any.pb.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto

namespace google
{
namespace protobuf
{
namespace internal
{
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto
{
    static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
namespace type
{
class EngineError;
struct EngineErrorDefaultTypeInternal;
extern EngineErrorDefaultTypeInternal _EngineError_default_instance_;
}  // namespace type
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google

namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
namespace type
{

// ===================================================================

// -------------------------------------------------------------------

class EngineError final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.type.EngineError)
 */
{
   public:
    inline EngineError() : EngineError(nullptr) {}
    ~EngineError() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR EngineError(
        ::google::protobuf::internal::ConstantInitialized);

    inline EngineError(const EngineError& from) : EngineError(nullptr, from) {}
    inline EngineError(EngineError&& from) noexcept
        : EngineError(nullptr, std::move(from))
    {}
    inline EngineError& operator=(const EngineError& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline EngineError& operator=(EngineError&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const EngineError& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const EngineError* internal_default_instance()
    {
        return reinterpret_cast<const EngineError*>(
            &_EngineError_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 0;
    friend void swap(EngineError& a, EngineError& b) { a.Swap(&b); }
    inline void Swap(EngineError* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(EngineError* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    EngineError* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<EngineError>(
            arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const EngineError& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const EngineError& from)
    {
        EngineError::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(EngineError* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.type.EngineError";
    }

   protected:
    explicit EngineError(::google::protobuf::Arena* arena);
    EngineError(::google::protobuf::Arena* arena, const EngineError& from);
    EngineError(::google::protobuf::Arena* arena, EngineError&& from) noexcept
        : EngineError(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kDetailsFieldNumber = 3,
        kMessageFieldNumber = 2,
        kCodeFieldNumber = 1,
    };
    // repeated .google.protobuf.Any details = 3;
    int details_size() const;

   private:
    int _internal_details_size() const;

   public:
    void clear_details();
    ::google::protobuf::Any* mutable_details(int index);
    ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
    mutable_details();

   private:
    const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
    _internal_details() const;
    ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
    _internal_mutable_details();

   public:
    const ::google::protobuf::Any& details(int index) const;
    ::google::protobuf::Any* add_details();
    const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
    details() const;
    // string message = 2;
    void clear_message();
    const std::string& message() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_message(Arg_&& arg, Args_... args);
    std::string* mutable_message();
    PROTOBUF_NODISCARD std::string* release_message();
    void set_allocated_message(std::string* value);

   private:
    const std::string& _internal_message() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
        const std::string& value);
    std::string* _internal_mutable_message();

   public:
    // int32 code = 1;
    void clear_code();
    ::int32_t code() const;
    void set_code(::int32_t value);

   private:
    ::int32_t _internal_code() const;
    void _internal_set_code(::int32_t value);

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.type.EngineError)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 64, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_EngineError_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const EngineError& from_msg);
        ::google::protobuf::RepeatedPtrField<::google::protobuf::Any> details_;
        ::google::protobuf::internal::ArenaStringPtr message_;
        ::int32_t code_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto;
};

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EngineError

// int32 code = 1;
inline void EngineError::clear_code()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.code_ = 0;
}
inline ::int32_t EngineError::code() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.type.EngineError.code)
    return _internal_code();
}
inline void EngineError::set_code(::int32_t value)
{
    _internal_set_code(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.type.EngineError.code)
}
inline ::int32_t EngineError::_internal_code() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.code_;
}
inline void EngineError::_internal_set_code(::int32_t value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.code_ = value;
}

// string message = 2;
inline void EngineError::clear_message()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.message_.ClearToEmpty();
}
inline const std::string& EngineError::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.type.EngineError.message)
    return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EngineError::set_message(Arg_&& arg,
                                                            Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.type.EngineError.message)
}
inline std::string* EngineError::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_message();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.type.EngineError.message)
    return _s;
}
inline const std::string& EngineError::_internal_message() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.message_.Get();
}
inline void EngineError::_internal_set_message(const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.message_.Set(value, GetArena());
}
inline std::string* EngineError::_internal_mutable_message()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.message_.Mutable(GetArena());
}
inline std::string* EngineError::release_message()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.type.EngineError.message)
    return _impl_.message_.Release();
}
inline void EngineError::set_allocated_message(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.message_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.message_.IsDefault())
    {
        _impl_.message_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.type.EngineError.message)
}

// repeated .google.protobuf.Any details = 3;
inline int EngineError::_internal_details_size() const
{
    return _internal_details().size();
}
inline int EngineError::details_size() const
{
    return _internal_details_size();
}
inline ::google::protobuf::Any* EngineError::mutable_details(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.type.EngineError.details)
    return _internal_mutable_details()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
EngineError::mutable_details() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:novonotes.audio_engine.v1alpha1.type.EngineError.details)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_details();
}
inline const ::google::protobuf::Any& EngineError::details(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.type.EngineError.details)
    return _internal_details().Get(index);
}
inline ::google::protobuf::Any* EngineError::add_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::google::protobuf::Any* _add = _internal_mutable_details()->Add();
    // @@protoc_insertion_point(field_add:novonotes.audio_engine.v1alpha1.type.EngineError.details)
    return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
EngineError::details() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:novonotes.audio_engine.v1alpha1.type.EngineError.details)
    return _internal_details();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
EngineError::_internal_details() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.details_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
EngineError::_internal_mutable_details()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.details_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto_2epb_2eh
