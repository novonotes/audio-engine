// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/type/engine_error.proto
// Protobuf C++ Version: 5.28.1

#include "novonotes/audio_engine/v1alpha1/type/engine_error.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
namespace type
{

inline constexpr EngineError::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : details_{}
    , message_(&::google::protobuf::internal::fixed_address_empty_string,
               ::_pbi::ConstantInitialized())
    , code_{0}
    , _cached_size_{0}
{}

template <typename>
PROTOBUF_CONSTEXPR EngineError::EngineError(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base())
    ,
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message()
    ,
#endif  // PROTOBUF_CUSTOM_VTABLE
    _impl_(::_pbi::ConstantInitialized())
{}
struct EngineErrorDefaultTypeInternal
{
    PROTOBUF_CONSTEXPR EngineErrorDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{})
    {}
    ~EngineErrorDefaultTypeInternal() {}
    union
    {
        EngineError _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EngineErrorDefaultTypeInternal
        _EngineError_default_instance_;
}  // namespace type
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto =
        nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto =
        nullptr;
const ::uint32_t
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto::
        offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            ~0u,  // no _has_bits_
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::type::EngineError,
                _internal_metadata_),
            ~0u,  // no _extensions_
            ~0u,  // no _oneof_case_
            ~0u,  // no _weak_field_map_
            ~0u,  // no _inlined_string_donated_
            ~0u,  // no _split_
            ~0u,  // no sizeof(Split)
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::type::EngineError,
                _impl_.code_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::type::EngineError,
                _impl_.message_),
            PROTOBUF_FIELD_OFFSET(
                ::novonotes::audio_engine::v1alpha1::type::EngineError,
                _impl_.details_),
};

static const ::_pbi::MigrationSchema schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, -1, sizeof(::novonotes::audio_engine::v1alpha1::type::EngineError)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::novonotes::audio_engine::v1alpha1::type::_EngineError_default_instance_
         ._instance,
};
const char
    descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto
        [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
            "\n7novonotes/audio_engine/v1alpha1/type/e"
            "ngine_error.proto\022$novonotes.audio_engin"
            "e.v1alpha1.type\032\031google/protobuf/any.pro"
            "to\"S\n\013EngineError\022\014\n\004code\030\001 "
            "\001(\005\022\017\n\007messa"
            "ge\030\002 \001(\t\022%\n\007details\030\003 "
            "\003(\0132\024.google.proto"
            "buf.Anyb\006proto3"};
static const ::_pbi::DescriptorTable* const
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto_deps
        [1] = {
            &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto = {
        false,
        false,
        215,
        descriptor_table_protodef_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto,
        "novonotes/audio_engine/v1alpha1/type/engine_error.proto",
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto_once,
        descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto_deps,
        1,
        1,
        schemas,
        file_default_instances,
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto::
            offsets,
        file_level_enum_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto,
        file_level_service_descriptors_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto,
};
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
namespace type
{
// ===================================================================

class EngineError::_Internal
{
   public:
};

void EngineError::clear_details()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.details_.Clear();
}
EngineError::EngineError(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:novonotes.audio_engine.v1alpha1.type.EngineError)
}
inline PROTOBUF_NDEBUG_INLINE EngineError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena, const Impl_& from,
    const ::novonotes::audio_engine::v1alpha1::type::EngineError& from_msg)
    : details_{visibility, arena, from.details_}
    , message_(arena, from.message_)
    , _cached_size_{0}
{}

EngineError::EngineError(::google::protobuf::Arena* arena,
                         const EngineError& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base())
{
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena)
{
#endif  // PROTOBUF_CUSTOM_VTABLE
    EngineError* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
    new(&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
    _impl_.code_ = from._impl_.code_;

    // @@protoc_insertion_point(copy_constructor:novonotes.audio_engine.v1alpha1.type.EngineError)
}
inline PROTOBUF_NDEBUG_INLINE EngineError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
    : details_{visibility, arena}
    , message_(arena)
    , _cached_size_{0}
{}

inline void EngineError::SharedCtor(::_pb::Arena* arena)
{
    new(&_impl_) Impl_(internal_visibility(), arena);
    _impl_.code_ = {};
}
EngineError::~EngineError()
{
    // @@protoc_insertion_point(destructor:novonotes.audio_engine.v1alpha1.type.EngineError)
    _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
    SharedDtor();
}
inline void EngineError::SharedDtor()
{
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.message_.Destroy();
    _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull EngineError::_class_data_ =
    {
        ::google::protobuf::Message::ClassData{
            &_EngineError_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &EngineError::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<EngineError>(),
            ::google::protobuf::Message::GetNewImpl<EngineError>(),
            ::google::protobuf::Message::GetClearImpl<EngineError>(),
            &EngineError::ByteSizeLong,
            &EngineError::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(EngineError, _impl_._cached_size_),
            false,
        },
        &EngineError::kDescriptorMethods,
        &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto,
        nullptr,  // tracker
    };
const ::google::protobuf::MessageLite::ClassData* EngineError::GetClassData()
    const
{
    ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
    ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
    return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<
    2, 3, 1, 64, 2>
    EngineError::_table_ = {
        {
            0,      // no _has_bits_
            0,      // no _extensions_
            3, 24,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967288,  // skipmap
            offsetof(decltype(_table_), field_entries),
            3,  // num_field_entries
            1,  // num_aux_entries
            offsetof(decltype(_table_), aux_entries), _class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::novonotes::audio_engine::v1alpha1::
                                           type::EngineError>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
            // int32 code = 1;
            {::_pbi::TcParser::SingularVarintNoZag1<
                 ::uint32_t, offsetof(EngineError, _impl_.code_), 63>(),
             {8, 63, 0, PROTOBUF_FIELD_OFFSET(EngineError, _impl_.code_)}},
            // string message = 2;
            {::_pbi::TcParser::FastUS1,
             {18, 63, 0, PROTOBUF_FIELD_OFFSET(EngineError, _impl_.message_)}},
            // repeated .google.protobuf.Any details = 3;
            {::_pbi::TcParser::FastMtR1,
             {26, 63, 0, PROTOBUF_FIELD_OFFSET(EngineError, _impl_.details_)}},
        }},
        {{65535, 65535}},
        {{
            // int32 code = 1;
            {PROTOBUF_FIELD_OFFSET(EngineError, _impl_.code_), 0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
            // string message = 2;
            {PROTOBUF_FIELD_OFFSET(EngineError, _impl_.message_), 0, 0,
             (0 | ::_fl::kFcSingular | ::_fl::kUtf8String |
              ::_fl::kRepAString)},
            // repeated .google.protobuf.Any details = 3;
            {PROTOBUF_FIELD_OFFSET(EngineError, _impl_.details_), 0, 0,
             (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
        }},
        {{
            {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
        }},
        {{"\60\0\7\0\0\0\0\0"
          "novonotes.audio_engine.v1alpha1.type.EngineError"
          "message"}},
    };

PROTOBUF_NOINLINE void EngineError::Clear()
{
    // @@protoc_insertion_point(message_clear_start:novonotes.audio_engine.v1alpha1.type.EngineError)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.details_.Clear();
    _impl_.message_.ClearToEmpty();
    _impl_.code_ = 0;
    _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* EngineError::_InternalSerialize(
    const MessageLite& base, ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream)
{
    const EngineError& this_ = static_cast<const EngineError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* EngineError::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const
{
    const EngineError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(serialize_to_array_start:novonotes.audio_engine.v1alpha1.type.EngineError)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // int32 code = 1;
    if(this_._internal_code() != 0)
    {
        target = ::google::protobuf::internal::WireFormatLite::
            WriteInt32ToArrayWithField<1>(stream, this_._internal_code(),
                                          target);
    }

    // string message = 2;
    if(!this_._internal_message().empty())
    {
        const std::string& _s = this_._internal_message();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(), static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "novonotes.audio_engine.v1alpha1.type.EngineError.message");
        target = stream->WriteStringMaybeAliased(2, _s, target);
    }

    // repeated .google.protobuf.Any details = 3;
    for(unsigned i = 0,
                 n = static_cast<unsigned>(this_._internal_details_size());
        i < n; i++)
    {
        const auto& repfield = this_._internal_details().Get(i);
        target =
            ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, repfield, repfield.GetCachedSize(), target, stream);
    }

    if(PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields()))
    {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_
                .unknown_fields<::google::protobuf::UnknownFieldSet>(
                    ::google::protobuf::UnknownFieldSet::default_instance),
            target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:novonotes.audio_engine.v1alpha1.type.EngineError)
    return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EngineError::ByteSizeLong(const MessageLite& base)
{
    const EngineError& this_ = static_cast<const EngineError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EngineError::ByteSizeLong() const
{
    const EngineError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
        // @@protoc_insertion_point(message_byte_size_start:novonotes.audio_engine.v1alpha1.type.EngineError)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::_pbi::Prefetch5LinesFrom7Lines(&this_);
    {
        // repeated .google.protobuf.Any details = 3;
        {
            total_size += 1UL * this_._internal_details_size();
            for(const auto& msg : this_._internal_details())
            {
                total_size +=
                    ::google::protobuf::internal::WireFormatLite::MessageSize(
                        msg);
            }
        }
    }
    {
        // string message = 2;
        if(!this_._internal_message().empty())
        {
            total_size +=
                1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                        this_._internal_message());
        }
        // int32 code = 1;
        if(this_._internal_code() != 0)
        {
            total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                this_._internal_code());
        }
    }
    return this_.MaybeComputeUnknownFieldsSize(total_size,
                                               &this_._impl_._cached_size_);
}

void EngineError::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg)
{
    auto* const _this = static_cast<EngineError*>(&to_msg);
    auto& from = static_cast<const EngineError&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:novonotes.audio_engine.v1alpha1.type.EngineError)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_internal_mutable_details()->MergeFrom(from._internal_details());
    if(!from._internal_message().empty())
    {
        _this->_internal_set_message(from._internal_message());
    }
    if(from._internal_code() != 0)
    {
        _this->_impl_.code_ = from._impl_.code_;
    }
    _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
        from._internal_metadata_);
}

void EngineError::CopyFrom(const EngineError& from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:novonotes.audio_engine.v1alpha1.type.EngineError)
    if(&from == this) return;
    Clear();
    MergeFrom(from);
}

void EngineError::InternalSwap(EngineError* PROTOBUF_RESTRICT other)
{
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    _impl_.details_.InternalSwap(&other->_impl_.details_);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_,
                                         &other->_impl_.message_, arena);
    swap(_impl_.code_, other->_impl_.code_);
}

::google::protobuf::Metadata EngineError::GetMetadata() const
{
    return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type _static_init2_
    PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(
             &descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2ftype_2fengine_5ferror_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
