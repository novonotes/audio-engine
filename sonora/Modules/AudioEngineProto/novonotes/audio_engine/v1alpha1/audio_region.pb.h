// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: novonotes/audio_engine/v1alpha1/audio_region.proto
// Protobuf C++ Version: 5.28.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto

namespace google
{
namespace protobuf
{
namespace internal
{
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct
    TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto
{
    static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto;
namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{
class AudioRegion;
struct AudioRegionDefaultTypeInternal;
extern AudioRegionDefaultTypeInternal _AudioRegion_default_instance_;
class CreateAudioRegionRequest;
struct CreateAudioRegionRequestDefaultTypeInternal;
extern CreateAudioRegionRequestDefaultTypeInternal
    _CreateAudioRegionRequest_default_instance_;
class CreateAudioRegionResponse;
struct CreateAudioRegionResponseDefaultTypeInternal;
extern CreateAudioRegionResponseDefaultTypeInternal
    _CreateAudioRegionResponse_default_instance_;
class DeleteAudioRegionRequest;
struct DeleteAudioRegionRequestDefaultTypeInternal;
extern DeleteAudioRegionRequestDefaultTypeInternal
    _DeleteAudioRegionRequest_default_instance_;
class DeleteAudioRegionResponse;
struct DeleteAudioRegionResponseDefaultTypeInternal;
extern DeleteAudioRegionResponseDefaultTypeInternal
    _DeleteAudioRegionResponse_default_instance_;
class UpdateAudioRegionRequest;
struct UpdateAudioRegionRequestDefaultTypeInternal;
extern UpdateAudioRegionRequestDefaultTypeInternal
    _UpdateAudioRegionRequest_default_instance_;
class UpdateAudioRegionResponse;
struct UpdateAudioRegionResponseDefaultTypeInternal;
extern UpdateAudioRegionResponseDefaultTypeInternal
    _UpdateAudioRegionResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes
namespace google
{
namespace protobuf
{}  // namespace protobuf
}  // namespace google

namespace novonotes
{
namespace audio_engine
{
namespace v1alpha1
{

// ===================================================================

// -------------------------------------------------------------------

class UpdateAudioRegionResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.UpdateAudioRegionResponse)
 */
{
   public:
    inline UpdateAudioRegionResponse() : UpdateAudioRegionResponse(nullptr) {}
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR UpdateAudioRegionResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline UpdateAudioRegionResponse(const UpdateAudioRegionResponse& from)
        : UpdateAudioRegionResponse(nullptr, from)
    {}
    inline UpdateAudioRegionResponse(UpdateAudioRegionResponse&& from) noexcept
        : UpdateAudioRegionResponse(nullptr, std::move(from))
    {}
    inline UpdateAudioRegionResponse& operator=(
        const UpdateAudioRegionResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline UpdateAudioRegionResponse& operator=(
        UpdateAudioRegionResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const UpdateAudioRegionResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const UpdateAudioRegionResponse* internal_default_instance()
    {
        return reinterpret_cast<const UpdateAudioRegionResponse*>(
            &_UpdateAudioRegionResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 4;
    friend void swap(UpdateAudioRegionResponse& a, UpdateAudioRegionResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(UpdateAudioRegionResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(UpdateAudioRegionResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    UpdateAudioRegionResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<
            UpdateAudioRegionResponse>(arena);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
    inline void CopyFrom(const UpdateAudioRegionResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
    void MergeFrom(const UpdateAudioRegionResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
    }

   public:
    bool IsInitialized() const { return true; }

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.UpdateAudioRegionResponse";
    }

   protected:
    explicit UpdateAudioRegionResponse(::google::protobuf::Arena* arena);
    UpdateAudioRegionResponse(::google::protobuf::Arena* arena,
                              const UpdateAudioRegionResponse& from);
    UpdateAudioRegionResponse(::google::protobuf::Arena* arena,
                              UpdateAudioRegionResponse&& from) noexcept
        : UpdateAudioRegionResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::internal::ZeroFieldsBase::ClassData*
    GetClassData() const PROTOBUF_FINAL;
    static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull
        _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.UpdateAudioRegionResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 0, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_UpdateAudioRegionResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const UpdateAudioRegionResponse& from_msg);
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto;
};
// -------------------------------------------------------------------

class DeleteAudioRegionResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeleteAudioRegionResponse)
 */
{
   public:
    inline DeleteAudioRegionResponse() : DeleteAudioRegionResponse(nullptr) {}
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeleteAudioRegionResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeleteAudioRegionResponse(const DeleteAudioRegionResponse& from)
        : DeleteAudioRegionResponse(nullptr, from)
    {}
    inline DeleteAudioRegionResponse(DeleteAudioRegionResponse&& from) noexcept
        : DeleteAudioRegionResponse(nullptr, std::move(from))
    {}
    inline DeleteAudioRegionResponse& operator=(
        const DeleteAudioRegionResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeleteAudioRegionResponse& operator=(
        DeleteAudioRegionResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeleteAudioRegionResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeleteAudioRegionResponse* internal_default_instance()
    {
        return reinterpret_cast<const DeleteAudioRegionResponse*>(
            &_DeleteAudioRegionResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 6;
    friend void swap(DeleteAudioRegionResponse& a, DeleteAudioRegionResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(DeleteAudioRegionResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeleteAudioRegionResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeleteAudioRegionResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<
            DeleteAudioRegionResponse>(arena);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
    inline void CopyFrom(const DeleteAudioRegionResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
    void MergeFrom(const DeleteAudioRegionResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
    }

   public:
    bool IsInitialized() const { return true; }

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeleteAudioRegionResponse";
    }

   protected:
    explicit DeleteAudioRegionResponse(::google::protobuf::Arena* arena);
    DeleteAudioRegionResponse(::google::protobuf::Arena* arena,
                              const DeleteAudioRegionResponse& from);
    DeleteAudioRegionResponse(::google::protobuf::Arena* arena,
                              DeleteAudioRegionResponse&& from) noexcept
        : DeleteAudioRegionResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::internal::ZeroFieldsBase::ClassData*
    GetClassData() const PROTOBUF_FINAL;
    static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull
        _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeleteAudioRegionResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 0, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeleteAudioRegionResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeleteAudioRegionResponse& from_msg);
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto;
};
// -------------------------------------------------------------------

class DeleteAudioRegionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
 */
{
   public:
    inline DeleteAudioRegionRequest() : DeleteAudioRegionRequest(nullptr) {}
    ~DeleteAudioRegionRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR DeleteAudioRegionRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline DeleteAudioRegionRequest(const DeleteAudioRegionRequest& from)
        : DeleteAudioRegionRequest(nullptr, from)
    {}
    inline DeleteAudioRegionRequest(DeleteAudioRegionRequest&& from) noexcept
        : DeleteAudioRegionRequest(nullptr, std::move(from))
    {}
    inline DeleteAudioRegionRequest& operator=(
        const DeleteAudioRegionRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline DeleteAudioRegionRequest& operator=(
        DeleteAudioRegionRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const DeleteAudioRegionRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const DeleteAudioRegionRequest* internal_default_instance()
    {
        return reinterpret_cast<const DeleteAudioRegionRequest*>(
            &_DeleteAudioRegionRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 5;
    friend void swap(DeleteAudioRegionRequest& a, DeleteAudioRegionRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(DeleteAudioRegionRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(DeleteAudioRegionRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    DeleteAudioRegionRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            DeleteAudioRegionRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const DeleteAudioRegionRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const DeleteAudioRegionRequest& from)
    {
        DeleteAudioRegionRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(DeleteAudioRegionRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest";
    }

   protected:
    explicit DeleteAudioRegionRequest(::google::protobuf::Arena* arena);
    DeleteAudioRegionRequest(::google::protobuf::Arena* arena,
                             const DeleteAudioRegionRequest& from);
    DeleteAudioRegionRequest(::google::protobuf::Arena* arena,
                             DeleteAudioRegionRequest&& from) noexcept
        : DeleteAudioRegionRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kAudioRegionIdFieldNumber = 1,
    };
    // string audio_region_id = 1 [(.google.api.field_behavior) = REQUIRED];
    void clear_audio_region_id();
    const std::string& audio_region_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_audio_region_id(Arg_&& arg, Args_... args);
    std::string* mutable_audio_region_id();
    PROTOBUF_NODISCARD std::string* release_audio_region_id();
    void set_allocated_audio_region_id(std::string* value);

   private:
    const std::string& _internal_audio_region_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_audio_region_id(
        const std::string& value);
    std::string* _internal_mutable_audio_region_id();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 80, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_DeleteAudioRegionRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const DeleteAudioRegionRequest& from_msg);
        ::google::protobuf::internal::ArenaStringPtr audio_region_id_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto;
};
// -------------------------------------------------------------------

class CreateAudioRegionResponse final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.CreateAudioRegionResponse)
 */
{
   public:
    inline CreateAudioRegionResponse() : CreateAudioRegionResponse(nullptr) {}
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR CreateAudioRegionResponse(
        ::google::protobuf::internal::ConstantInitialized);

    inline CreateAudioRegionResponse(const CreateAudioRegionResponse& from)
        : CreateAudioRegionResponse(nullptr, from)
    {}
    inline CreateAudioRegionResponse(CreateAudioRegionResponse&& from) noexcept
        : CreateAudioRegionResponse(nullptr, std::move(from))
    {}
    inline CreateAudioRegionResponse& operator=(
        const CreateAudioRegionResponse& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline CreateAudioRegionResponse& operator=(
        CreateAudioRegionResponse&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const CreateAudioRegionResponse& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const CreateAudioRegionResponse* internal_default_instance()
    {
        return reinterpret_cast<const CreateAudioRegionResponse*>(
            &_CreateAudioRegionResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 2;
    friend void swap(CreateAudioRegionResponse& a, CreateAudioRegionResponse& b)
    {
        a.Swap(&b);
    }
    inline void Swap(CreateAudioRegionResponse* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(CreateAudioRegionResponse* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    CreateAudioRegionResponse* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<
            CreateAudioRegionResponse>(arena);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
    inline void CopyFrom(const CreateAudioRegionResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
    }
    using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
    void MergeFrom(const CreateAudioRegionResponse& from)
    {
        ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
    }

   public:
    bool IsInitialized() const { return true; }

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.CreateAudioRegionResponse";
    }

   protected:
    explicit CreateAudioRegionResponse(::google::protobuf::Arena* arena);
    CreateAudioRegionResponse(::google::protobuf::Arena* arena,
                              const CreateAudioRegionResponse& from);
    CreateAudioRegionResponse(::google::protobuf::Arena* arena,
                              CreateAudioRegionResponse&& from) noexcept
        : CreateAudioRegionResponse(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::internal::ZeroFieldsBase::ClassData*
    GetClassData() const PROTOBUF_FINAL;
    static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull
        _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.CreateAudioRegionResponse)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 0, 0, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_CreateAudioRegionResponse_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const CreateAudioRegionResponse& from_msg);
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto;
};
// -------------------------------------------------------------------

class AudioRegion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.AudioRegion)
 */
{
   public:
    inline AudioRegion() : AudioRegion(nullptr) {}
    ~AudioRegion() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR AudioRegion(
        ::google::protobuf::internal::ConstantInitialized);

    inline AudioRegion(const AudioRegion& from) : AudioRegion(nullptr, from) {}
    inline AudioRegion(AudioRegion&& from) noexcept
        : AudioRegion(nullptr, std::move(from))
    {}
    inline AudioRegion& operator=(const AudioRegion& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline AudioRegion& operator=(AudioRegion&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const AudioRegion& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const AudioRegion* internal_default_instance()
    {
        return reinterpret_cast<const AudioRegion*>(
            &_AudioRegion_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 0;
    friend void swap(AudioRegion& a, AudioRegion& b) { a.Swap(&b); }
    inline void Swap(AudioRegion* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(AudioRegion* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    AudioRegion* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<AudioRegion>(
            arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const AudioRegion& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const AudioRegion& from)
    {
        AudioRegion::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(AudioRegion* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.AudioRegion";
    }

   protected:
    explicit AudioRegion(::google::protobuf::Arena* arena);
    AudioRegion(::google::protobuf::Arena* arena, const AudioRegion& from);
    AudioRegion(::google::protobuf::Arena* arena, AudioRegion&& from) noexcept
        : AudioRegion(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kIdFieldNumber = 1,
        kParentIdFieldNumber = 2,
        kSourceFilePathFieldNumber = 3,
        kPositionFieldNumber = 4,
        kDurationFieldNumber = 5,
        kGainDbFieldNumber = 6,
    };
    // string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
    // (.google.api.field_behavior) = REQUIRED];
    void clear_id();
    const std::string& id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_id(Arg_&& arg, Args_... args);
    std::string* mutable_id();
    PROTOBUF_NODISCARD std::string* release_id();
    void set_allocated_id(std::string* value);

   private:
    const std::string& _internal_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
        const std::string& value);
    std::string* _internal_mutable_id();

   public:
    // string parent_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY,
    // (.google.api.resource_reference) = {
    void clear_parent_id();
    const std::string& parent_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parent_id(Arg_&& arg, Args_... args);
    std::string* mutable_parent_id();
    PROTOBUF_NODISCARD std::string* release_parent_id();
    void set_allocated_parent_id(std::string* value);

   private:
    const std::string& _internal_parent_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_id(
        const std::string& value);
    std::string* _internal_mutable_parent_id();

   public:
    // string source_file_path = 3 [(.google.api.field_behavior) = REQUIRED];
    void clear_source_file_path();
    const std::string& source_file_path() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_source_file_path(Arg_&& arg, Args_... args);
    std::string* mutable_source_file_path();
    PROTOBUF_NODISCARD std::string* release_source_file_path();
    void set_allocated_source_file_path(std::string* value);

   private:
    const std::string& _internal_source_file_path() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_file_path(
        const std::string& value);
    std::string* _internal_mutable_source_file_path();

   public:
    // double position = 4 [(.google.api.field_behavior) = OPTIONAL];
    void clear_position();
    double position() const;
    void set_position(double value);

   private:
    double _internal_position() const;
    void _internal_set_position(double value);

   public:
    // optional double duration = 5 [(.google.api.field_behavior) = OPTIONAL];
    bool has_duration() const;
    void clear_duration();
    double duration() const;
    void set_duration(double value);

   private:
    double _internal_duration() const;
    void _internal_set_duration(double value);

   public:
    // double gain_db = 6 [(.google.api.field_behavior) = OPTIONAL];
    void clear_gain_db();
    double gain_db() const;
    void set_gain_db(double value);

   private:
    double _internal_gain_db() const;
    void _internal_set_gain_db(double value);

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.AudioRegion)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 79, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_AudioRegion_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const AudioRegion& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr id_;
        ::google::protobuf::internal::ArenaStringPtr parent_id_;
        ::google::protobuf::internal::ArenaStringPtr source_file_path_;
        double position_;
        double duration_;
        double gain_db_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto;
};
// -------------------------------------------------------------------

class UpdateAudioRegionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
 */
{
   public:
    inline UpdateAudioRegionRequest() : UpdateAudioRegionRequest(nullptr) {}
    ~UpdateAudioRegionRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR UpdateAudioRegionRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline UpdateAudioRegionRequest(const UpdateAudioRegionRequest& from)
        : UpdateAudioRegionRequest(nullptr, from)
    {}
    inline UpdateAudioRegionRequest(UpdateAudioRegionRequest&& from) noexcept
        : UpdateAudioRegionRequest(nullptr, std::move(from))
    {}
    inline UpdateAudioRegionRequest& operator=(
        const UpdateAudioRegionRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline UpdateAudioRegionRequest& operator=(
        UpdateAudioRegionRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const UpdateAudioRegionRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const UpdateAudioRegionRequest* internal_default_instance()
    {
        return reinterpret_cast<const UpdateAudioRegionRequest*>(
            &_UpdateAudioRegionRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 3;
    friend void swap(UpdateAudioRegionRequest& a, UpdateAudioRegionRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(UpdateAudioRegionRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(UpdateAudioRegionRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    UpdateAudioRegionRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            UpdateAudioRegionRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const UpdateAudioRegionRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const UpdateAudioRegionRequest& from)
    {
        UpdateAudioRegionRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(UpdateAudioRegionRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest";
    }

   protected:
    explicit UpdateAudioRegionRequest(::google::protobuf::Arena* arena);
    UpdateAudioRegionRequest(::google::protobuf::Arena* arena,
                             const UpdateAudioRegionRequest& from);
    UpdateAudioRegionRequest(::google::protobuf::Arena* arena,
                             UpdateAudioRegionRequest&& from) noexcept
        : UpdateAudioRegionRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kAudioRegionFieldNumber = 1,
    };
    // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 1
    // [(.google.api.field_behavior) = REQUIRED];
    bool has_audio_region() const;
    void clear_audio_region();
    const ::novonotes::audio_engine::v1alpha1::AudioRegion& audio_region()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::AudioRegion*
    release_audio_region();
    ::novonotes::audio_engine::v1alpha1::AudioRegion* mutable_audio_region();
    void set_allocated_audio_region(
        ::novonotes::audio_engine::v1alpha1::AudioRegion* value);
    void unsafe_arena_set_allocated_audio_region(
        ::novonotes::audio_engine::v1alpha1::AudioRegion* value);
    ::novonotes::audio_engine::v1alpha1::AudioRegion*
    unsafe_arena_release_audio_region();

   private:
    const ::novonotes::audio_engine::v1alpha1::AudioRegion&
    _internal_audio_region() const;
    ::novonotes::audio_engine::v1alpha1::AudioRegion*
    _internal_mutable_audio_region();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_UpdateAudioRegionRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const UpdateAudioRegionRequest& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::novonotes::audio_engine::v1alpha1::AudioRegion* audio_region_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto;
};
// -------------------------------------------------------------------

class CreateAudioRegionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
 */
{
   public:
    inline CreateAudioRegionRequest() : CreateAudioRegionRequest(nullptr) {}
    ~CreateAudioRegionRequest() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR CreateAudioRegionRequest(
        ::google::protobuf::internal::ConstantInitialized);

    inline CreateAudioRegionRequest(const CreateAudioRegionRequest& from)
        : CreateAudioRegionRequest(nullptr, from)
    {}
    inline CreateAudioRegionRequest(CreateAudioRegionRequest&& from) noexcept
        : CreateAudioRegionRequest(nullptr, std::move(from))
    {}
    inline CreateAudioRegionRequest& operator=(
        const CreateAudioRegionRequest& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline CreateAudioRegionRequest& operator=(
        CreateAudioRegionRequest&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const CreateAudioRegionRequest& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const CreateAudioRegionRequest* internal_default_instance()
    {
        return reinterpret_cast<const CreateAudioRegionRequest*>(
            &_CreateAudioRegionRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 1;
    friend void swap(CreateAudioRegionRequest& a, CreateAudioRegionRequest& b)
    {
        a.Swap(&b);
    }
    inline void Swap(CreateAudioRegionRequest* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(CreateAudioRegionRequest* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    CreateAudioRegionRequest* New(
        ::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<
            CreateAudioRegionRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const CreateAudioRegionRequest& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const CreateAudioRegionRequest& from)
    {
        CreateAudioRegionRequest::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(CreateAudioRegionRequest* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest";
    }

   protected:
    explicit CreateAudioRegionRequest(::google::protobuf::Arena* arena);
    CreateAudioRegionRequest(::google::protobuf::Arena* arena,
                             const CreateAudioRegionRequest& from);
    CreateAudioRegionRequest(::google::protobuf::Arena* arena,
                             CreateAudioRegionRequest&& from) noexcept
        : CreateAudioRegionRequest(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kParentIdFieldNumber = 2,
        kAudioRegionFieldNumber = 3,
    };
    // string parent_id = 2 [(.google.api.field_behavior) = REQUIRED,
    // (.google.api.resource_reference) = {
    void clear_parent_id();
    const std::string& parent_id() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_parent_id(Arg_&& arg, Args_... args);
    std::string* mutable_parent_id();
    PROTOBUF_NODISCARD std::string* release_parent_id();
    void set_allocated_parent_id(std::string* value);

   private:
    const std::string& _internal_parent_id() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_id(
        const std::string& value);
    std::string* _internal_mutable_parent_id();

   public:
    // .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 3
    // [(.google.api.field_behavior) = REQUIRED];
    bool has_audio_region() const;
    void clear_audio_region();
    const ::novonotes::audio_engine::v1alpha1::AudioRegion& audio_region()
        const;
    PROTOBUF_NODISCARD ::novonotes::audio_engine::v1alpha1::AudioRegion*
    release_audio_region();
    ::novonotes::audio_engine::v1alpha1::AudioRegion* mutable_audio_region();
    void set_allocated_audio_region(
        ::novonotes::audio_engine::v1alpha1::AudioRegion* value);
    void unsafe_arena_set_allocated_audio_region(
        ::novonotes::audio_engine::v1alpha1::AudioRegion* value);
    ::novonotes::audio_engine::v1alpha1::AudioRegion*
    unsafe_arena_release_audio_region();

   private:
    const ::novonotes::audio_engine::v1alpha1::AudioRegion&
    _internal_audio_region() const;
    ::novonotes::audio_engine::v1alpha1::AudioRegion*
    _internal_mutable_audio_region();

   public:
    // @@protoc_insertion_point(class_scope:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 74, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_CreateAudioRegionRequest_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const CreateAudioRegionRequest& from_msg);
        ::google::protobuf::internal::HasBits<1> _has_bits_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        ::google::protobuf::internal::ArenaStringPtr parent_id_;
        ::novonotes::audio_engine::v1alpha1::AudioRegion* audio_region_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::
        TableStruct_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto;
};

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AudioRegion

// string id = 1 [(.google.api.field_behavior) = IDENTIFIER,
// (.google.api.field_behavior) = REQUIRED];
inline void AudioRegion::clear_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.ClearToEmpty();
}
inline const std::string& AudioRegion::id() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.AudioRegion.id)
    return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AudioRegion::set_id(Arg_&& arg,
                                                       Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.AudioRegion.id)
}
inline std::string* AudioRegion::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.AudioRegion.id)
    return _s;
}
inline const std::string& AudioRegion::_internal_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.id_.Get();
}
inline void AudioRegion::_internal_set_id(const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.Set(value, GetArena());
}
inline std::string* AudioRegion::_internal_mutable_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.id_.Mutable(GetArena());
}
inline std::string* AudioRegion::release_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.AudioRegion.id)
    return _impl_.id_.Release();
}
inline void AudioRegion::set_allocated_id(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.id_.IsDefault())
    {
        _impl_.id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.AudioRegion.id)
}

// string parent_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY,
// (.google.api.resource_reference) = {
inline void AudioRegion::clear_parent_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parent_id_.ClearToEmpty();
}
inline const std::string& AudioRegion::parent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.AudioRegion.parent_id)
    return _internal_parent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AudioRegion::set_parent_id(Arg_&& arg,
                                                              Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.AudioRegion.parent_id)
}
inline std::string* AudioRegion::mutable_parent_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_parent_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.AudioRegion.parent_id)
    return _s;
}
inline const std::string& AudioRegion::_internal_parent_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parent_id_.Get();
}
inline void AudioRegion::_internal_set_parent_id(const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parent_id_.Set(value, GetArena());
}
inline std::string* AudioRegion::_internal_mutable_parent_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.parent_id_.Mutable(GetArena());
}
inline std::string* AudioRegion::release_parent_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.AudioRegion.parent_id)
    return _impl_.parent_id_.Release();
}
inline void AudioRegion::set_allocated_parent_id(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parent_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.parent_id_.IsDefault())
    {
        _impl_.parent_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.AudioRegion.parent_id)
}

// string source_file_path = 3 [(.google.api.field_behavior) = REQUIRED];
inline void AudioRegion::clear_source_file_path()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.source_file_path_.ClearToEmpty();
}
inline const std::string& AudioRegion::source_file_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.AudioRegion.source_file_path)
    return _internal_source_file_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AudioRegion::set_source_file_path(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.source_file_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.AudioRegion.source_file_path)
}
inline std::string* AudioRegion::mutable_source_file_path()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_source_file_path();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.AudioRegion.source_file_path)
    return _s;
}
inline const std::string& AudioRegion::_internal_source_file_path() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.source_file_path_.Get();
}
inline void AudioRegion::_internal_set_source_file_path(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.source_file_path_.Set(value, GetArena());
}
inline std::string* AudioRegion::_internal_mutable_source_file_path()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.source_file_path_.Mutable(GetArena());
}
inline std::string* AudioRegion::release_source_file_path()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.AudioRegion.source_file_path)
    return _impl_.source_file_path_.Release();
}
inline void AudioRegion::set_allocated_source_file_path(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.source_file_path_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.source_file_path_.IsDefault())
    {
        _impl_.source_file_path_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.AudioRegion.source_file_path)
}

// double position = 4 [(.google.api.field_behavior) = OPTIONAL];
inline void AudioRegion::clear_position()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.position_ = 0;
}
inline double AudioRegion::position() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.AudioRegion.position)
    return _internal_position();
}
inline void AudioRegion::set_position(double value)
{
    _internal_set_position(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.AudioRegion.position)
}
inline double AudioRegion::_internal_position() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.position_;
}
inline void AudioRegion::_internal_set_position(double value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.position_ = value;
}

// optional double duration = 5 [(.google.api.field_behavior) = OPTIONAL];
inline bool AudioRegion::has_duration() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    return value;
}
inline void AudioRegion::clear_duration()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.duration_ = 0;
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double AudioRegion::duration() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.AudioRegion.duration)
    return _internal_duration();
}
inline void AudioRegion::set_duration(double value)
{
    _internal_set_duration(value);
    _impl_._has_bits_[0] |= 0x00000001u;
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.AudioRegion.duration)
}
inline double AudioRegion::_internal_duration() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.duration_;
}
inline void AudioRegion::_internal_set_duration(double value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.duration_ = value;
}

// double gain_db = 6 [(.google.api.field_behavior) = OPTIONAL];
inline void AudioRegion::clear_gain_db()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.gain_db_ = 0;
}
inline double AudioRegion::gain_db() const
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.AudioRegion.gain_db)
    return _internal_gain_db();
}
inline void AudioRegion::set_gain_db(double value)
{
    _internal_set_gain_db(value);
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.AudioRegion.gain_db)
}
inline double AudioRegion::_internal_gain_db() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.gain_db_;
}
inline void AudioRegion::_internal_set_gain_db(double value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.gain_db_ = value;
}

// -------------------------------------------------------------------

// CreateAudioRegionRequest

// string parent_id = 2 [(.google.api.field_behavior) = REQUIRED,
// (.google.api.resource_reference) = {
inline void CreateAudioRegionRequest::clear_parent_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parent_id_.ClearToEmpty();
}
inline const std::string& CreateAudioRegionRequest::parent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.parent_id)
    return _internal_parent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAudioRegionRequest::set_parent_id(
    Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.parent_id)
}
inline std::string* CreateAudioRegionRequest::mutable_parent_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_parent_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.parent_id)
    return _s;
}
inline const std::string& CreateAudioRegionRequest::_internal_parent_id() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.parent_id_.Get();
}
inline void CreateAudioRegionRequest::_internal_set_parent_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parent_id_.Set(value, GetArena());
}
inline std::string* CreateAudioRegionRequest::_internal_mutable_parent_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.parent_id_.Mutable(GetArena());
}
inline std::string* CreateAudioRegionRequest::release_parent_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.parent_id)
    return _impl_.parent_id_.Release();
}
inline void CreateAudioRegionRequest::set_allocated_parent_id(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.parent_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.parent_id_.IsDefault())
    {
        _impl_.parent_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.parent_id)
}

// .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 3
// [(.google.api.field_behavior) = REQUIRED];
inline bool CreateAudioRegionRequest::has_audio_region() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.audio_region_ != nullptr);
    return value;
}
inline void CreateAudioRegionRequest::clear_audio_region()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.audio_region_ != nullptr) _impl_.audio_region_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::AudioRegion&
CreateAudioRegionRequest::_internal_audio_region() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::AudioRegion* p =
        _impl_.audio_region_;
    return p != nullptr
               ? *p
               : reinterpret_cast<
                     const ::novonotes::audio_engine::v1alpha1::AudioRegion&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _AudioRegion_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::AudioRegion&
CreateAudioRegionRequest::audio_region() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.audio_region)
    return _internal_audio_region();
}
inline void CreateAudioRegionRequest::unsafe_arena_set_allocated_audio_region(
    ::novonotes::audio_engine::v1alpha1::AudioRegion* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.audio_region_);
    }
    _impl_.audio_region_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::AudioRegion*>(
            value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.audio_region)
}
inline ::novonotes::audio_engine::v1alpha1::AudioRegion*
CreateAudioRegionRequest::release_audio_region()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::AudioRegion* released =
        _impl_.audio_region_;
    _impl_.audio_region_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::AudioRegion*
CreateAudioRegionRequest::unsafe_arena_release_audio_region()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.audio_region)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::AudioRegion* temp =
        _impl_.audio_region_;
    _impl_.audio_region_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::AudioRegion*
CreateAudioRegionRequest::_internal_mutable_audio_region()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.audio_region_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::AudioRegion>(GetArena());
        _impl_.audio_region_ =
            reinterpret_cast<::novonotes::audio_engine::v1alpha1::AudioRegion*>(
                p);
    }
    return _impl_.audio_region_;
}
inline ::novonotes::audio_engine::v1alpha1::AudioRegion*
CreateAudioRegionRequest::mutable_audio_region() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::AudioRegion* _msg =
        _internal_mutable_audio_region();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.audio_region)
    return _msg;
}
inline void CreateAudioRegionRequest::set_allocated_audio_region(
    ::novonotes::audio_engine::v1alpha1::AudioRegion* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.audio_region_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.audio_region_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::AudioRegion*>(
            value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.CreateAudioRegionRequest.audio_region)
}

// -------------------------------------------------------------------

// CreateAudioRegionResponse

// -------------------------------------------------------------------

// UpdateAudioRegionRequest

// .novonotes.audio_engine.v1alpha1.AudioRegion audio_region = 1
// [(.google.api.field_behavior) = REQUIRED];
inline bool UpdateAudioRegionRequest::has_audio_region() const
{
    bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
    PROTOBUF_ASSUME(!value || _impl_.audio_region_ != nullptr);
    return value;
}
inline void UpdateAudioRegionRequest::clear_audio_region()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.audio_region_ != nullptr) _impl_.audio_region_->Clear();
    _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::novonotes::audio_engine::v1alpha1::AudioRegion&
UpdateAudioRegionRequest::_internal_audio_region() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    const ::novonotes::audio_engine::v1alpha1::AudioRegion* p =
        _impl_.audio_region_;
    return p != nullptr
               ? *p
               : reinterpret_cast<
                     const ::novonotes::audio_engine::v1alpha1::AudioRegion&>(
                     ::novonotes::audio_engine::v1alpha1::
                         _AudioRegion_default_instance_);
}
inline const ::novonotes::audio_engine::v1alpha1::AudioRegion&
UpdateAudioRegionRequest::audio_region() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest.audio_region)
    return _internal_audio_region();
}
inline void UpdateAudioRegionRequest::unsafe_arena_set_allocated_audio_region(
    ::novonotes::audio_engine::v1alpha1::AudioRegion* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(GetArena() == nullptr)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite*>(
            _impl_.audio_region_);
    }
    _impl_.audio_region_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::AudioRegion*>(
            value);
    if(value != nullptr)
    {
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }
    // @@protoc_insertion_point(field_unsafe_arena_set_allocated:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest.audio_region)
}
inline ::novonotes::audio_engine::v1alpha1::AudioRegion*
UpdateAudioRegionRequest::release_audio_region()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::AudioRegion* released =
        _impl_.audio_region_;
    _impl_.audio_region_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if(GetArena() == nullptr)
    {
        delete old;
    }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
    if(GetArena() != nullptr)
    {
        released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
    return released;
}
inline ::novonotes::audio_engine::v1alpha1::AudioRegion*
UpdateAudioRegionRequest::unsafe_arena_release_audio_region()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest.audio_region)

    _impl_._has_bits_[0] &= ~0x00000001u;
    ::novonotes::audio_engine::v1alpha1::AudioRegion* temp =
        _impl_.audio_region_;
    _impl_.audio_region_ = nullptr;
    return temp;
}
inline ::novonotes::audio_engine::v1alpha1::AudioRegion*
UpdateAudioRegionRequest::_internal_mutable_audio_region()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(_impl_.audio_region_ == nullptr)
    {
        auto* p = ::google::protobuf::Message::DefaultConstruct<
            ::novonotes::audio_engine::v1alpha1::AudioRegion>(GetArena());
        _impl_.audio_region_ =
            reinterpret_cast<::novonotes::audio_engine::v1alpha1::AudioRegion*>(
                p);
    }
    return _impl_.audio_region_;
}
inline ::novonotes::audio_engine::v1alpha1::AudioRegion*
UpdateAudioRegionRequest::mutable_audio_region() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    _impl_._has_bits_[0] |= 0x00000001u;
    ::novonotes::audio_engine::v1alpha1::AudioRegion* _msg =
        _internal_mutable_audio_region();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest.audio_region)
    return _msg;
}
inline void UpdateAudioRegionRequest::set_allocated_audio_region(
    ::novonotes::audio_engine::v1alpha1::AudioRegion* value)
{
    ::google::protobuf::Arena* message_arena = GetArena();
    ::google::protobuf::internal::TSanWrite(&_impl_);
    if(message_arena == nullptr)
    {
        delete(_impl_.audio_region_);
    }

    if(value != nullptr)
    {
        ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
        if(message_arena != submessage_arena)
        {
            value = ::google::protobuf::internal::GetOwnedMessage(
                message_arena, value, submessage_arena);
        }
        _impl_._has_bits_[0] |= 0x00000001u;
    }
    else
    {
        _impl_._has_bits_[0] &= ~0x00000001u;
    }

    _impl_.audio_region_ =
        reinterpret_cast<::novonotes::audio_engine::v1alpha1::AudioRegion*>(
            value);
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.UpdateAudioRegionRequest.audio_region)
}

// -------------------------------------------------------------------

// UpdateAudioRegionResponse

// -------------------------------------------------------------------

// DeleteAudioRegionRequest

// string audio_region_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void DeleteAudioRegionRequest::clear_audio_region_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.audio_region_id_.ClearToEmpty();
}
inline const std::string& DeleteAudioRegionRequest::audio_region_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest.audio_region_id)
    return _internal_audio_region_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void
DeleteAudioRegionRequest::set_audio_region_id(Arg_&& arg, Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.audio_region_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest.audio_region_id)
}
inline std::string* DeleteAudioRegionRequest::mutable_audio_region_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_audio_region_id();
    // @@protoc_insertion_point(field_mutable:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest.audio_region_id)
    return _s;
}
inline const std::string& DeleteAudioRegionRequest::_internal_audio_region_id()
    const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.audio_region_id_.Get();
}
inline void DeleteAudioRegionRequest::_internal_set_audio_region_id(
    const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.audio_region_id_.Set(value, GetArena());
}
inline std::string*
DeleteAudioRegionRequest::_internal_mutable_audio_region_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.audio_region_id_.Mutable(GetArena());
}
inline std::string* DeleteAudioRegionRequest::release_audio_region_id()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest.audio_region_id)
    return _impl_.audio_region_id_.Release();
}
inline void DeleteAudioRegionRequest::set_allocated_audio_region_id(
    std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.audio_region_id_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.audio_region_id_.IsDefault())
    {
        _impl_.audio_region_id_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:novonotes.audio_engine.v1alpha1.DeleteAudioRegionRequest.audio_region_id)
}

// -------------------------------------------------------------------

// DeleteAudioRegionResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace audio_engine
}  // namespace novonotes

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_novonotes_2faudio_5fengine_2fv1alpha1_2faudio_5fregion_2eproto_2epb_2eh
