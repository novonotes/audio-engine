// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/api/field_info.proto
// Protobuf C++ Version: 5.28.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2ffield_5finfo_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2ffield_5finfo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/descriptor.pb.h"
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2ffield_5finfo_2eproto

namespace google
{
namespace protobuf
{
namespace internal
{
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapi_2ffield_5finfo_2eproto
{
    static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fapi_2ffield_5finfo_2eproto;
namespace google
{
namespace api
{
class FieldInfo;
struct FieldInfoDefaultTypeInternal;
extern FieldInfoDefaultTypeInternal _FieldInfo_default_instance_;
class TypeReference;
struct TypeReferenceDefaultTypeInternal;
extern TypeReferenceDefaultTypeInternal _TypeReference_default_instance_;
}  // namespace api
namespace protobuf
{}  // namespace protobuf
}  // namespace google

namespace google
{
namespace api
{
enum FieldInfo_Format : int
{
    FieldInfo_Format_FORMAT_UNSPECIFIED = 0,
    FieldInfo_Format_UUID4 = 1,
    FieldInfo_Format_IPV4 = 2,
    FieldInfo_Format_IPV6 = 3,
    FieldInfo_Format_IPV4_OR_IPV6 = 4,
    FieldInfo_Format_FieldInfo_Format_INT_MIN_SENTINEL_DO_NOT_USE_ =
        std::numeric_limits<::int32_t>::min(),
    FieldInfo_Format_FieldInfo_Format_INT_MAX_SENTINEL_DO_NOT_USE_ =
        std::numeric_limits<::int32_t>::max(),
};

bool FieldInfo_Format_IsValid(int value);
extern const uint32_t FieldInfo_Format_internal_data_[];
constexpr FieldInfo_Format FieldInfo_Format_Format_MIN =
    static_cast<FieldInfo_Format>(0);
constexpr FieldInfo_Format FieldInfo_Format_Format_MAX =
    static_cast<FieldInfo_Format>(4);
constexpr int FieldInfo_Format_Format_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* FieldInfo_Format_descriptor();
template <typename T>
const std::string& FieldInfo_Format_Name(T value)
{
    static_assert(
        std::is_same<T, FieldInfo_Format>::value || std::is_integral<T>::value,
        "Incorrect type passed to Format_Name().");
    return FieldInfo_Format_Name(static_cast<FieldInfo_Format>(value));
}
template <>
inline const std::string& FieldInfo_Format_Name(FieldInfo_Format value)
{
    return ::google::protobuf::internal::NameOfDenseEnum<
        FieldInfo_Format_descriptor, 0, 4>(static_cast<int>(value));
}
inline bool FieldInfo_Format_Parse(absl::string_view name,
                                   FieldInfo_Format* value)
{
    return ::google::protobuf::internal::ParseNamedEnum<FieldInfo_Format>(
        FieldInfo_Format_descriptor(), name, value);
}

// ===================================================================

// -------------------------------------------------------------------

class TypeReference final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.api.TypeReference) */ {
   public:
    inline TypeReference() : TypeReference(nullptr) {}
    ~TypeReference() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR TypeReference(
        ::google::protobuf::internal::ConstantInitialized);

    inline TypeReference(const TypeReference& from)
        : TypeReference(nullptr, from)
    {}
    inline TypeReference(TypeReference&& from) noexcept
        : TypeReference(nullptr, std::move(from))
    {}
    inline TypeReference& operator=(const TypeReference& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline TypeReference& operator=(TypeReference&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const TypeReference& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const TypeReference* internal_default_instance()
    {
        return reinterpret_cast<const TypeReference*>(
            &_TypeReference_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 1;
    friend void swap(TypeReference& a, TypeReference& b) { a.Swap(&b); }
    inline void Swap(TypeReference* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(TypeReference* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    TypeReference* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<TypeReference>(
            arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const TypeReference& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const TypeReference& from)
    {
        TypeReference::MergeImpl(*this, from);
    }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(TypeReference* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "google.api.TypeReference";
    }

   protected:
    explicit TypeReference(::google::protobuf::Arena* arena);
    TypeReference(::google::protobuf::Arena* arena, const TypeReference& from);
    TypeReference(::google::protobuf::Arena* arena,
                  TypeReference&& from) noexcept
        : TypeReference(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------
    enum : int
    {
        kTypeNameFieldNumber = 1,
    };
    // string type_name = 1;
    void clear_type_name();
    const std::string& type_name() const;
    template <typename Arg_ = const std::string&, typename... Args_>
    void set_type_name(Arg_&& arg, Args_... args);
    std::string* mutable_type_name();
    PROTOBUF_NODISCARD std::string* release_type_name();
    void set_allocated_type_name(std::string* value);

   private:
    const std::string& _internal_type_name() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(
        const std::string& value);
    std::string* _internal_mutable_type_name();

   public:
    // @@protoc_insertion_point(class_scope:google.api.TypeReference)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 42, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_TypeReference_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const TypeReference& from_msg);
        ::google::protobuf::internal::ArenaStringPtr type_name_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_google_2fapi_2ffield_5finfo_2eproto;
};
// -------------------------------------------------------------------

class FieldInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:google.api.FieldInfo) */ {
   public:
    inline FieldInfo() : FieldInfo(nullptr) {}
    ~FieldInfo() PROTOBUF_FINAL;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR FieldInfo(
        ::google::protobuf::internal::ConstantInitialized);

    inline FieldInfo(const FieldInfo& from) : FieldInfo(nullptr, from) {}
    inline FieldInfo(FieldInfo&& from) noexcept
        : FieldInfo(nullptr, std::move(from))
    {}
    inline FieldInfo& operator=(const FieldInfo& from)
    {
        CopyFrom(from);
        return *this;
    }
    inline FieldInfo& operator=(FieldInfo&& from) noexcept
    {
        if(this == &from) return *this;
        if(GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
           && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
        )
        {
            InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .unknown_fields<::google::protobuf::UnknownFieldSet>(
                ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
        ABSL_ATTRIBUTE_LIFETIME_BOUND
    {
        return _internal_metadata_
            .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor* descriptor()
    {
        return GetDescriptor();
    }
    static const ::google::protobuf::Descriptor* GetDescriptor()
    {
        return default_instance().GetMetadata().descriptor;
    }
    static const ::google::protobuf::Reflection* GetReflection()
    {
        return default_instance().GetMetadata().reflection;
    }
    static const FieldInfo& default_instance()
    {
        return *internal_default_instance();
    }
    static inline const FieldInfo* internal_default_instance()
    {
        return reinterpret_cast<const FieldInfo*>(
            &_FieldInfo_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 0;
    friend void swap(FieldInfo& a, FieldInfo& b) { a.Swap(&b); }
    inline void Swap(FieldInfo* other)
    {
        if(other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() != nullptr && GetArena() == other->GetArena())
        {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
        if(GetArena() == other->GetArena())
        {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        }
        else
        {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(FieldInfo* other)
    {
        if(other == this) return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    FieldInfo* New(::google::protobuf::Arena* arena = nullptr) const
        PROTOBUF_FINAL
    {
        return ::google::protobuf::Message::DefaultConstruct<FieldInfo>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const FieldInfo& from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const FieldInfo& from) { FieldInfo::MergeImpl(*this, from); }

   private:
    static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                          const ::google::protobuf::MessageLite& from_msg);

   public:
    bool IsInitialized() const { return true; }
    ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
   private:
    static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
    static ::uint8_t* _InternalSerialize(
        const MessageLite& msg, ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream);

   public:
    ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const
    {
        return _InternalSerialize(*this, target, stream);
    }
#else   // PROTOBUF_CUSTOM_VTABLE
    ::size_t ByteSizeLong() const final;
    ::uint8_t* _InternalSerialize(
        ::uint8_t* target,
        ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

   private:
    void SharedCtor(::google::protobuf::Arena* arena);
    void SharedDtor();
    void InternalSwap(FieldInfo* other);

   private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName()
    {
        return "google.api.FieldInfo";
    }

   protected:
    explicit FieldInfo(::google::protobuf::Arena* arena);
    FieldInfo(::google::protobuf::Arena* arena, const FieldInfo& from);
    FieldInfo(::google::protobuf::Arena* arena, FieldInfo&& from) noexcept
        : FieldInfo(arena)
    {
        *this = ::std::move(from);
    }
    const ::google::protobuf::Message::ClassData* GetClassData() const
        PROTOBUF_FINAL;
    static const ::google::protobuf::Message::ClassDataFull _class_data_;

   public:
    ::google::protobuf::Metadata GetMetadata() const;
    // nested types ----------------------------------------------------
    using Format = FieldInfo_Format;
    static constexpr Format FORMAT_UNSPECIFIED =
        FieldInfo_Format_FORMAT_UNSPECIFIED;
    static constexpr Format UUID4 = FieldInfo_Format_UUID4;
    static constexpr Format IPV4 = FieldInfo_Format_IPV4;
    static constexpr Format IPV6 = FieldInfo_Format_IPV6;
    static constexpr Format IPV4_OR_IPV6 = FieldInfo_Format_IPV4_OR_IPV6;
    static inline bool Format_IsValid(int value)
    {
        return FieldInfo_Format_IsValid(value);
    }
    static constexpr Format Format_MIN = FieldInfo_Format_Format_MIN;
    static constexpr Format Format_MAX = FieldInfo_Format_Format_MAX;
    static constexpr int Format_ARRAYSIZE = FieldInfo_Format_Format_ARRAYSIZE;
    static inline const ::google::protobuf::EnumDescriptor* Format_descriptor()
    {
        return FieldInfo_Format_descriptor();
    }
    template <typename T>
    static inline const std::string& Format_Name(T value)
    {
        return FieldInfo_Format_Name(value);
    }
    static inline bool Format_Parse(absl::string_view name, Format* value)
    {
        return FieldInfo_Format_Parse(name, value);
    }

    // accessors -------------------------------------------------------
    enum : int
    {
        kReferencedTypesFieldNumber = 2,
        kFormatFieldNumber = 1,
    };
    // repeated .google.api.TypeReference referenced_types = 2;
    int referenced_types_size() const;

   private:
    int _internal_referenced_types_size() const;

   public:
    void clear_referenced_types();
    ::google::api::TypeReference* mutable_referenced_types(int index);
    ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>*
    mutable_referenced_types();

   private:
    const ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>&
    _internal_referenced_types() const;
    ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>*
    _internal_mutable_referenced_types();

   public:
    const ::google::api::TypeReference& referenced_types(int index) const;
    ::google::api::TypeReference* add_referenced_types();
    const ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>&
    referenced_types() const;
    // .google.api.FieldInfo.Format format = 1;
    void clear_format();
    ::google::api::FieldInfo_Format format() const;
    void set_format(::google::api::FieldInfo_Format value);

   private:
    ::google::api::FieldInfo_Format _internal_format() const;
    void _internal_set_format(::google::api::FieldInfo_Format value);

   public:
    // @@protoc_insertion_point(class_scope:google.api.FieldInfo)
   private:
    class _Internal;
    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2>
        _table_;

    static constexpr const void* _raw_default_instance_ =
        &_FieldInfo_default_instance_;

    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T>
    friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_
    {
        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena);
        inline explicit Impl_(
            ::google::protobuf::internal::InternalVisibility visibility,
            ::google::protobuf::Arena* arena, const Impl_& from,
            const FieldInfo& from_msg);
        ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>
            referenced_types_;
        int format_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union
    {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_google_2fapi_2ffield_5finfo_2eproto;
};

// ===================================================================

static const int kFieldInfoFieldNumber = 291403980;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::MessageTypeTraits<::google::api::FieldInfo>,
    11, false>
    field_info;

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FieldInfo

// .google.api.FieldInfo.Format format = 1;
inline void FieldInfo::clear_format()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.format_ = 0;
}
inline ::google::api::FieldInfo_Format FieldInfo::format() const
{
    // @@protoc_insertion_point(field_get:google.api.FieldInfo.format)
    return _internal_format();
}
inline void FieldInfo::set_format(::google::api::FieldInfo_Format value)
{
    _internal_set_format(value);
    // @@protoc_insertion_point(field_set:google.api.FieldInfo.format)
}
inline ::google::api::FieldInfo_Format FieldInfo::_internal_format() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return static_cast<::google::api::FieldInfo_Format>(_impl_.format_);
}
inline void FieldInfo::_internal_set_format(
    ::google::api::FieldInfo_Format value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.format_ = value;
}

// repeated .google.api.TypeReference referenced_types = 2;
inline int FieldInfo::_internal_referenced_types_size() const
{
    return _internal_referenced_types().size();
}
inline int FieldInfo::referenced_types_size() const
{
    return _internal_referenced_types_size();
}
inline void FieldInfo::clear_referenced_types()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.referenced_types_.Clear();
}
inline ::google::api::TypeReference* FieldInfo::mutable_referenced_types(
    int index) ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable:google.api.FieldInfo.referenced_types)
    return _internal_mutable_referenced_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>*
FieldInfo::mutable_referenced_types() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_mutable_list:google.api.FieldInfo.referenced_types)
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _internal_mutable_referenced_types();
}
inline const ::google::api::TypeReference& FieldInfo::referenced_types(
    int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:google.api.FieldInfo.referenced_types)
    return _internal_referenced_types().Get(index);
}
inline ::google::api::TypeReference* FieldInfo::add_referenced_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    ::google::api::TypeReference* _add =
        _internal_mutable_referenced_types()->Add();
    // @@protoc_insertion_point(field_add:google.api.FieldInfo.referenced_types)
    return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>&
FieldInfo::referenced_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_list:google.api.FieldInfo.referenced_types)
    return _internal_referenced_types();
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>&
FieldInfo::_internal_referenced_types() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.referenced_types_;
}
inline ::google::protobuf::RepeatedPtrField<::google::api::TypeReference>*
FieldInfo::_internal_mutable_referenced_types()
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return &_impl_.referenced_types_;
}

// -------------------------------------------------------------------

// TypeReference

// string type_name = 1;
inline void TypeReference::clear_type_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.type_name_.ClearToEmpty();
}
inline const std::string& TypeReference::type_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    // @@protoc_insertion_point(field_get:google.api.TypeReference.type_name)
    return _internal_type_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TypeReference::set_type_name(Arg_&& arg,
                                                                Args_... args)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.type_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:google.api.TypeReference.type_name)
}
inline std::string* TypeReference::mutable_type_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
    std::string* _s = _internal_mutable_type_name();
    // @@protoc_insertion_point(field_mutable:google.api.TypeReference.type_name)
    return _s;
}
inline const std::string& TypeReference::_internal_type_name() const
{
    ::google::protobuf::internal::TSanRead(&_impl_);
    return _impl_.type_name_.Get();
}
inline void TypeReference::_internal_set_type_name(const std::string& value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.type_name_.Set(value, GetArena());
}
inline std::string* TypeReference::_internal_mutable_type_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    return _impl_.type_name_.Mutable(GetArena());
}
inline std::string* TypeReference::release_type_name()
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    // @@protoc_insertion_point(field_release:google.api.TypeReference.type_name)
    return _impl_.type_name_.Release();
}
inline void TypeReference::set_allocated_type_name(std::string* value)
{
    ::google::protobuf::internal::TSanWrite(&_impl_);
    _impl_.type_name_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if(_impl_.type_name_.IsDefault())
    {
        _impl_.type_name_.Set("", GetArena());
    }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    // @@protoc_insertion_point(field_set_allocated:google.api.TypeReference.type_name)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google

namespace google
{
namespace protobuf
{

template <>
struct is_proto_enum<::google::api::FieldInfo_Format> : std::true_type
{};
template <>
inline const EnumDescriptor*
GetEnumDescriptor<::google::api::FieldInfo_Format>()
{
    return ::google::api::FieldInfo_Format_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2ffield_5finfo_2eproto_2epb_2eh
